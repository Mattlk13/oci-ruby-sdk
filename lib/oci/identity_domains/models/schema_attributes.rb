# Copyright (c) 2016, 2024, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: v1
require 'date'
require 'logger'

# rubocop:disable Lint/UnneededCopDisableDirective, Metrics/LineLength
module OCI
  # A complex type that specifies the set of Resource attributes
  class IdentityDomains::Models::SchemaAttributes
    TYPE_ENUM = [
      TYPE_STRING = 'string'.freeze,
      TYPE_COMPLEX = 'complex'.freeze,
      TYPE_BOOLEAN = 'boolean'.freeze,
      TYPE_DECIMAL = 'decimal'.freeze,
      TYPE_INTEGER = 'integer'.freeze,
      TYPE_DATE_TIME = 'dateTime'.freeze,
      TYPE_REFERENCE = 'reference'.freeze,
      TYPE_BINARY = 'binary'.freeze,
      TYPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    MUTABILITY_ENUM = [
      MUTABILITY_READ_ONLY = 'readOnly'.freeze,
      MUTABILITY_READ_WRITE = 'readWrite'.freeze,
      MUTABILITY_IMMUTABLE = 'immutable'.freeze,
      MUTABILITY_WRITE_ONLY = 'writeOnly'.freeze,
      MUTABILITY_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    RETURNED_ENUM = [
      RETURNED_ALWAYS = 'always'.freeze,
      RETURNED_NEVER = 'never'.freeze,
      RETURNED_DEFAULT = 'default'.freeze,
      RETURNED_REQUEST = 'request'.freeze,
      RETURNED_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    UNIQUENESS_ENUM = [
      UNIQUENESS_NONE = 'none'.freeze,
      UNIQUENESS_SERVER = 'server'.freeze,
      UNIQUENESS_GLOBAL = 'global'.freeze,
      UNIQUENESS_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    IDCS_ICF_ATTRIBUTE_TYPE_ENUM = [
      IDCS_ICF_ATTRIBUTE_TYPE_STRING = 'string'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_LONG = 'long'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_CHAR = 'char'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_DOUBLE = 'double'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_FLOAT = 'float'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_INTEGER = 'integer'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_BOOLEAN = 'boolean'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_BYTES = 'bytes'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_BIGDECIMAL = 'bigdecimal'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_BIGINTEGER = 'biginteger'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_GUARDEDBYTES = 'guardedbytes'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_GUARDEDSTRING = 'guardedstring'.freeze,
      IDCS_ICF_ATTRIBUTE_TYPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    IDCS_SENSITIVE_ENUM = [
      IDCS_SENSITIVE_ENCRYPT = 'encrypt'.freeze,
      IDCS_SENSITIVE_HASH = 'hash'.freeze,
      IDCS_SENSITIVE_HASH_SC = 'hash_sc'.freeze,
      IDCS_SENSITIVE_CHECKSUM = 'checksum'.freeze,
      IDCS_SENSITIVE_NONE = 'none'.freeze,
      IDCS_SENSITIVE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    IDCS_CANONICAL_VALUE_TYPE_ENUM = [
      IDCS_CANONICAL_VALUE_TYPE_DYNAMIC = 'dynamic'.freeze,
      IDCS_CANONICAL_VALUE_TYPE_STATIC = 'static'.freeze,
      IDCS_CANONICAL_VALUE_TYPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    IDCSUI_WIDGET_ENUM = [
      IDCSUI_WIDGET_INPUTTEXT = 'inputtext'.freeze,
      IDCSUI_WIDGET_CHECKBOX = 'checkbox'.freeze,
      IDCSUI_WIDGET_TEXTAREA = 'textarea'.freeze,
      IDCSUI_WIDGET_COMBOBOX = 'combobox'.freeze,
      IDCSUI_WIDGET_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    IDCS_FEATURES_ENUM = [
      IDCS_FEATURES_OPTIONAL_PII = 'optionalPii'.freeze,
      IDCS_FEATURES_MFA = 'mfa'.freeze,
      IDCS_FEATURES_SOCIAL = 'social'.freeze,
      IDCS_FEATURES_SCHEMA_CUSTOMIZATION = 'schemaCustomization'.freeze,
      IDCS_FEATURES_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    # Attribute's name
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :name

    # Localized schema attribute display name for use by UI client  for displaying attribute labels
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_display_name_message_id

    # Specifies if the attributes in this schema should be hidden externally
    #
    # **Added In:** 19.1.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_rtsa_hide_attribute

    # @return [OCI::IdentityDomains::Models::SchemaLocalizedDisplayName]
    attr_accessor :localized_display_name

    # The attribute's data type--for example, String
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_reader :type

    # Indicates the attribute's plurality
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :multi_valued

    # The attribute's human-readable description
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :description

    # Specifies if the attribute is required
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :required

    # Specifies if the attribute is required
    #
    # **Added In:** 2305190132
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_return_empty_when_null

    # A collection of canonical values. Applicable Service Providers MUST specify the canonical types specified in the core schema specification--for example, \\\"work\\\", \\\"home\\\".
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :canonical_values

    # Specifies the default value for an attribute. The value must be one from canonicalValues if defined.
    #
    # **Added In:** 18.1.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_default_value

    # A collection of Localized canonical values.
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SchemaLocalizedCanonicalValues>]
    attr_accessor :localized_canonical_values

    # Specifies if the String attribute is case-sensitive
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :case_exact

    # Specifies if the attribute is mutable
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_reader :mutability

    # A single keyword that indicates when an attribute and associated values are returned in response to a GET request or in response to a PUT, POST, or PATCH request
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_reader :returned

    # A single keyword value that specifies how the Service Provider enforces uniqueness of attribute values. A server MAY reject an invalid value based on uniqueness by returning an HTTP response code of 400 (Bad Request). A client MAY enforce uniqueness on the client side to a greater degree than the Service Provider enforces. For example, a client could make a value unique while the server has the uniqueness of \\\"none\\\".
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_reader :uniqueness

    # The attribute defining the CSV header name for import/export
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_csv_attribute_name

    # Specifies the mapping between external identity source attributes and Oracle Identity Cloud Service complex attributes (e.g. email => emails[work].value)
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SchemaIdcsComplexAttributeNameMappings>]
    attr_accessor :idcs_complex_attribute_name_mappings

    # Maps to ICF target attribute name
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_icf_bundle_attribute_name

    # Metadata to identify the ICF required attribute
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_icf_required

    # Maps to ICF data type
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_reader :idcs_icf_attribute_type

    # Csv meta data for those resource type attributes which can be imported / exported from / to csv.
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SchemaIdcsCsvAttributeNameMappings>]
    attr_accessor :idcs_csv_attribute_name_mappings

    # The names of the Resource types that may be referenced--for example, User. This is only applicable for attributes that are of the \\\"reference\\\" data type.
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :reference_types

    # Indicates that the schema has been deprecated since version
    #
    # **Deprecated Since: 19.3.3**
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :idcs_deprecated_since_version

    # Indicates that the schema has been added since version
    #
    # **Deprecated Since: 19.3.3**
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :idcs_added_since_version

    # Indicates that the schema has been deprecated since this release number
    #
    # **Added In:** 17.3.4
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_accessor :idcs_deprecated_since_release_number

    # Indicates that the schema has been added since this release number
    #
    # **Added In:** 17.3.4
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_accessor :idcs_added_since_release_number

    # Specifies the minimum length of the attribute
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :idcs_min_length

    # Specifies the maximum length of the attribute
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :idcs_max_length

    # Specifies the minimum value of the integer attribute
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :idcs_min_value

    # Specifies the maximum value of the integer attribute
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :idcs_max_value

    # If true, specifies that the attribute can have multiple language values set for the attribute on which this is set.
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_multi_language

    # Specifies the directly referenced Resources
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [Array<String>]
    attr_accessor :idcs_ref_resource_attributes

    # Specifies the indirectly referenced Resources
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [Array<String>]
    attr_accessor :idcs_indirect_ref_resource_attributes

    # Sequence tracking ID name for the attribute
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_accessor :idcs_auto_increment_seq_name

    # Specifies whether the value of the Resource attribute is persisted
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_value_persisted

    # Flag to specify if the attribute should be encrypted or hashed
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_reader :idcs_sensitive

    # Specifies whether the schema attribute is for internal use only. Internal attributes are not exposed via REST. This attribute overrides mutability for create/update if the request is internal and the attribute internalflag is set to True. This attribute overrides the return attribute while building SCIM response attributes when both the request is internal and the schema attribute is internal.
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_internal

    # Trims any leading and trailing blanks from String values. Default is True.
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_trim_string_value

    # Specifies whether this attribute can be included in a search filter
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_searchable

    # Specifies whether this attribute value was generated
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_generated

    # Specifies whether changes to this attribute value are audited
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_auditable

    # Target attribute name that this attribute gets mapped to for persistence
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_target_attribute_name

    # Contains the canonical name of the other attribute sharing the same idcsTargetAttributeName
    #
    # **Added In:** 2209122038
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: always
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_maps_to_same_target_attribute_name_as

    # Target normalized attribute name that this normalized value of attribute gets mapped to for persistence. Only set for caseExact=false & searchable attributes. Do not use by default.
    #
    # **Added In:** 19.2.1
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_target_norm_attribute_name

    # Old Target attribute name from child table for CSVA attribute prior to migration. This maintains this attribute used to get mapped to for persistence
    #
    # **Added In:** 19.2.1
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_target_attribute_name_to_migrate_from

    # Target index name created for this attribute for performance
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_target_unique_constraint_name

    # Specifies the mapper to use when mapping this attribute value to DataProvider-specific semantics
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_to_target_mapper

    # Specifies the mapper to use when mapping this attribute value from DataProvider-specific semantics
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_from_target_mapper

    # Specifies the user-friendly displayable attribute name or catalog key used for localization
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_display_name

    # Specifies the Resource type to read from for dynamic canonical values
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_canonical_value_source_resource_type

    # Filter to use when getting canonical values for this schema attribute
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_canonical_value_source_filter

    # Specifies the Resource type ID to read from for dynamic canonical values
    #
    # **Added In:** 17.4.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_canonical_value_source_resource_type_id

    # Display name for the canonical value attribute name.
    #
    # **Added In:** 17.4.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_canonical_value_source_display_attr_name

    # Source key attribute for the canonical value.
    #
    # **Added In:** 17.4.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_canonical_value_source_key_attr_name

    # Type of the canonical value.
    #
    # **Added In:** 17.4.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_reader :idcs_canonical_value_type

    # Validate payload reference value during create, replace, and update. Default is True.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_validate_reference

    # The set of one or more sub attributes' names of a CMVA, whose values uniquely identify an instance of a CMVA
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :idcs_composite_key

    # **SCIM++ Properties:**
    # - caseExact: false
    # - multiValued: false
    # - mutability: readOnly
    # - required: false
    # - returned: default
    # - type: boolean
    # - uniqueness: none
    # Whether the CMVA attribute will be fetched or not for current resource in AbstractResourceManager update operation before calling data provider update. Default is true.
    # @return [BOOLEAN]
    attr_accessor :idcs_fetch_complex_attribute_values

    # Indicates if the attribute is scim compliant, default is true
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_scim_compliant

    # Specifies if the attribute can be used for mapping with external identity sources such as AD or LDAP. If isSchemaMappable: false for the schema in which this attribute is defined, then this flag is ignored
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_attribute_mappable

    # If true, ARM should not validate the value of the attribute since it will be converted/migrated to another attribute internally by the manager which will build valid post, put, or patch payload, depending on the client requested operation
    #
    # **Added In:** 18.2.2
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_value_persisted_in_other_attribute

    # Specifies whether the attribute is PII (personal information). False by default for all attributes. If attribute with idcsPii = true, it's value must be obfuscated before it's written to the Oracle Identity Cloud Service system logs.
    #
    # **Added In:** 18.4.2
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_pii

    # Specifies whether the attribute should be excluded from the BulkApi patch generated by gradle task for upgrading OOTB resources.
    #
    # **Added In:** 2104150946
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: never
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_exclude_from_upgrade_patch

    # A list specifying the contained attributes
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SchemaSubAttributes>]
    attr_accessor :sub_attributes

    # Specifies the referenced Resource attribute
    #
    # **Deprecated Since: 17.3.4**
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_accessor :idcs_ref_resource_attribute

    # Specifies whether the attribute is cacheable. True by default for all attributes. If attribute with idcsAttributeCachable = false, is present \\\"attributesToGet\\\" while executing GET/SEARCH on cacheable resource, Cache is missed and data is fetched from Data Provider.
    #
    # **Added In:** 17.3.4
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_attribute_cacheable

    # Metadata used by Oracle Identity Cloud Service UI to sequence the attributes displayed on the Account Form.
    #
    # **Added In:** 17.4.2
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :idcsui_order

    # Metadata used by Oracle Identity Cloud Service UI to validate the attribute values using regular expressions.
    #
    # **Added In:** 17.4.2
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_accessor :idcsui_regexp

    # Metadata used by Oracle Identity Cloud Service UI to decide whether the attribute must be displayed on the Account Form.
    #
    # **Added In:** 17.4.2
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcsui_visible

    # Metadata used by Oracle Identity Cloud Service UI to render a widget for this attribute on the Account Form.
    #
    # **Added In:** 17.4.2
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_reader :idcsui_widget

    # The list of features that require this attribute
    #
    # **Deprecated Since: 19.1.6**
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [Array<String>]
    attr_reader :idcs_features

    # A subset of \\\"canonicalValues\\\" that are not supported when the \\\"optionalPii\\\" feature is disabled in GlobalConfig.
    #
    # **Deprecated Since: 19.1.6**
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :idcs_optional_pii_canonical_values

    # Specifies if the value of the attribute should be sanitized using OWASP library for HTML content
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_sanitize

    # Specifies whether the attribute from resource schema should override from common schema with the same name.
    #
    # **Added In:** 2102181953
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_override_common_attribute

    # Specifies whether the readOnly and immutable reference attributes should be ignored when forceDelete=true.
    #
    # **Added In:** 2104220644
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete

    # Set this attribute to True if the resource is eligibal for update while system is in readonly mode.
    #
    # **Added In:** 2106170416
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_allow_updates_in_read_only_mode

    # Set this attribute to True if the pagination is required on an attribute.
    #
    # **Added In:** 2202230830
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_paginate_response

    # If true, indicates that the attribute value must be written to the home region for access flows initiated from a replica region.
    #
    # **Added In:** 2209220956
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :idcs_requires_write_for_access_flows

    # If true, indicates that the attribute value must be written to the home region and requires immediate read-after-write consistency for access flows initiated from a replica region.
    #
    # **Added In:** 2209220956
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: never
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :idcs_requires_immediate_read_after_write_for_access_flows

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        # rubocop:disable Style/SymbolLiteral
        'name': :'name',
        'idcs_display_name_message_id': :'idcsDisplayNameMessageId',
        'idcs_rtsa_hide_attribute': :'idcsRtsaHideAttribute',
        'localized_display_name': :'localizedDisplayName',
        'type': :'type',
        'multi_valued': :'multiValued',
        'description': :'description',
        'required': :'required',
        'idcs_return_empty_when_null': :'idcsReturnEmptyWhenNull',
        'canonical_values': :'canonicalValues',
        'idcs_default_value': :'idcsDefaultValue',
        'localized_canonical_values': :'localizedCanonicalValues',
        'case_exact': :'caseExact',
        'mutability': :'mutability',
        'returned': :'returned',
        'uniqueness': :'uniqueness',
        'idcs_csv_attribute_name': :'idcsCsvAttributeName',
        'idcs_complex_attribute_name_mappings': :'idcsComplexAttributeNameMappings',
        'idcs_icf_bundle_attribute_name': :'idcsICFBundleAttributeName',
        'idcs_icf_required': :'idcsICFRequired',
        'idcs_icf_attribute_type': :'idcsICFAttributeType',
        'idcs_csv_attribute_name_mappings': :'idcsCsvAttributeNameMappings',
        'reference_types': :'referenceTypes',
        'idcs_deprecated_since_version': :'idcsDeprecatedSinceVersion',
        'idcs_added_since_version': :'idcsAddedSinceVersion',
        'idcs_deprecated_since_release_number': :'idcsDeprecatedSinceReleaseNumber',
        'idcs_added_since_release_number': :'idcsAddedSinceReleaseNumber',
        'idcs_min_length': :'idcsMinLength',
        'idcs_max_length': :'idcsMaxLength',
        'idcs_min_value': :'idcsMinValue',
        'idcs_max_value': :'idcsMaxValue',
        'idcs_multi_language': :'idcsMultiLanguage',
        'idcs_ref_resource_attributes': :'idcsRefResourceAttributes',
        'idcs_indirect_ref_resource_attributes': :'idcsIndirectRefResourceAttributes',
        'idcs_auto_increment_seq_name': :'idcsAutoIncrementSeqName',
        'idcs_value_persisted': :'idcsValuePersisted',
        'idcs_sensitive': :'idcsSensitive',
        'idcs_internal': :'idcsInternal',
        'idcs_trim_string_value': :'idcsTrimStringValue',
        'idcs_searchable': :'idcsSearchable',
        'idcs_generated': :'idcsGenerated',
        'idcs_auditable': :'idcsAuditable',
        'idcs_target_attribute_name': :'idcsTargetAttributeName',
        'idcs_maps_to_same_target_attribute_name_as': :'idcsMapsToSameTargetAttributeNameAs',
        'idcs_target_norm_attribute_name': :'idcsTargetNormAttributeName',
        'idcs_target_attribute_name_to_migrate_from': :'idcsTargetAttributeNameToMigrateFrom',
        'idcs_target_unique_constraint_name': :'idcsTargetUniqueConstraintName',
        'idcs_to_target_mapper': :'idcsToTargetMapper',
        'idcs_from_target_mapper': :'idcsFromTargetMapper',
        'idcs_display_name': :'idcsDisplayName',
        'idcs_canonical_value_source_resource_type': :'idcsCanonicalValueSourceResourceType',
        'idcs_canonical_value_source_filter': :'idcsCanonicalValueSourceFilter',
        'idcs_canonical_value_source_resource_type_id': :'idcsCanonicalValueSourceResourceTypeID',
        'idcs_canonical_value_source_display_attr_name': :'idcsCanonicalValueSourceDisplayAttrName',
        'idcs_canonical_value_source_key_attr_name': :'idcsCanonicalValueSourceKeyAttrName',
        'idcs_canonical_value_type': :'idcsCanonicalValueType',
        'idcs_validate_reference': :'idcsValidateReference',
        'idcs_composite_key': :'idcsCompositeKey',
        'idcs_fetch_complex_attribute_values': :'idcsFetchComplexAttributeValues',
        'idcs_scim_compliant': :'idcsScimCompliant',
        'idcs_attribute_mappable': :'idcsAttributeMappable',
        'idcs_value_persisted_in_other_attribute': :'idcsValuePersistedInOtherAttribute',
        'idcs_pii': :'idcsPii',
        'idcs_exclude_from_upgrade_patch': :'idcsExcludeFromUpgradePatch',
        'sub_attributes': :'subAttributes',
        'idcs_ref_resource_attribute': :'idcsRefResourceAttribute',
        'idcs_attribute_cacheable': :'idcsAttributeCacheable',
        'idcsui_order': :'idcsuiOrder',
        'idcsui_regexp': :'idcsuiRegexp',
        'idcsui_visible': :'idcsuiVisible',
        'idcsui_widget': :'idcsuiWidget',
        'idcs_features': :'idcsFeatures',
        'idcs_optional_pii_canonical_values': :'idcsOptionalPiiCanonicalValues',
        'idcs_sanitize': :'idcsSanitize',
        'idcs_override_common_attribute': :'idcsOverrideCommonAttribute',
        'idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete': :'idcsIgnoreReadOnlyAndImmutableRefAttrsDuringForceDelete',
        'idcs_allow_updates_in_read_only_mode': :'idcsAllowUpdatesInReadOnlyMode',
        'idcs_paginate_response': :'idcsPaginateResponse',
        'idcs_requires_write_for_access_flows': :'idcsRequiresWriteForAccessFlows',
        'idcs_requires_immediate_read_after_write_for_access_flows': :'idcsRequiresImmediateReadAfterWriteForAccessFlows'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        # rubocop:disable Style/SymbolLiteral
        'name': :'String',
        'idcs_display_name_message_id': :'String',
        'idcs_rtsa_hide_attribute': :'BOOLEAN',
        'localized_display_name': :'OCI::IdentityDomains::Models::SchemaLocalizedDisplayName',
        'type': :'String',
        'multi_valued': :'BOOLEAN',
        'description': :'String',
        'required': :'BOOLEAN',
        'idcs_return_empty_when_null': :'BOOLEAN',
        'canonical_values': :'Array<String>',
        'idcs_default_value': :'String',
        'localized_canonical_values': :'Array<OCI::IdentityDomains::Models::SchemaLocalizedCanonicalValues>',
        'case_exact': :'BOOLEAN',
        'mutability': :'String',
        'returned': :'String',
        'uniqueness': :'String',
        'idcs_csv_attribute_name': :'String',
        'idcs_complex_attribute_name_mappings': :'Array<OCI::IdentityDomains::Models::SchemaIdcsComplexAttributeNameMappings>',
        'idcs_icf_bundle_attribute_name': :'String',
        'idcs_icf_required': :'BOOLEAN',
        'idcs_icf_attribute_type': :'String',
        'idcs_csv_attribute_name_mappings': :'Array<OCI::IdentityDomains::Models::SchemaIdcsCsvAttributeNameMappings>',
        'reference_types': :'Array<String>',
        'idcs_deprecated_since_version': :'Integer',
        'idcs_added_since_version': :'Integer',
        'idcs_deprecated_since_release_number': :'String',
        'idcs_added_since_release_number': :'String',
        'idcs_min_length': :'Integer',
        'idcs_max_length': :'Integer',
        'idcs_min_value': :'Integer',
        'idcs_max_value': :'Integer',
        'idcs_multi_language': :'BOOLEAN',
        'idcs_ref_resource_attributes': :'Array<String>',
        'idcs_indirect_ref_resource_attributes': :'Array<String>',
        'idcs_auto_increment_seq_name': :'String',
        'idcs_value_persisted': :'BOOLEAN',
        'idcs_sensitive': :'String',
        'idcs_internal': :'BOOLEAN',
        'idcs_trim_string_value': :'BOOLEAN',
        'idcs_searchable': :'BOOLEAN',
        'idcs_generated': :'BOOLEAN',
        'idcs_auditable': :'BOOLEAN',
        'idcs_target_attribute_name': :'String',
        'idcs_maps_to_same_target_attribute_name_as': :'String',
        'idcs_target_norm_attribute_name': :'String',
        'idcs_target_attribute_name_to_migrate_from': :'String',
        'idcs_target_unique_constraint_name': :'String',
        'idcs_to_target_mapper': :'String',
        'idcs_from_target_mapper': :'String',
        'idcs_display_name': :'String',
        'idcs_canonical_value_source_resource_type': :'String',
        'idcs_canonical_value_source_filter': :'String',
        'idcs_canonical_value_source_resource_type_id': :'String',
        'idcs_canonical_value_source_display_attr_name': :'String',
        'idcs_canonical_value_source_key_attr_name': :'String',
        'idcs_canonical_value_type': :'String',
        'idcs_validate_reference': :'BOOLEAN',
        'idcs_composite_key': :'Array<String>',
        'idcs_fetch_complex_attribute_values': :'BOOLEAN',
        'idcs_scim_compliant': :'BOOLEAN',
        'idcs_attribute_mappable': :'BOOLEAN',
        'idcs_value_persisted_in_other_attribute': :'BOOLEAN',
        'idcs_pii': :'BOOLEAN',
        'idcs_exclude_from_upgrade_patch': :'BOOLEAN',
        'sub_attributes': :'Array<OCI::IdentityDomains::Models::SchemaSubAttributes>',
        'idcs_ref_resource_attribute': :'String',
        'idcs_attribute_cacheable': :'BOOLEAN',
        'idcsui_order': :'Integer',
        'idcsui_regexp': :'String',
        'idcsui_visible': :'BOOLEAN',
        'idcsui_widget': :'String',
        'idcs_features': :'Array<String>',
        'idcs_optional_pii_canonical_values': :'Array<String>',
        'idcs_sanitize': :'BOOLEAN',
        'idcs_override_common_attribute': :'BOOLEAN',
        'idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete': :'BOOLEAN',
        'idcs_allow_updates_in_read_only_mode': :'BOOLEAN',
        'idcs_paginate_response': :'BOOLEAN',
        'idcs_requires_write_for_access_flows': :'BOOLEAN',
        'idcs_requires_immediate_read_after_write_for_access_flows': :'BOOLEAN'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral


    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    # @option attributes [String] :name The value to assign to the {#name} property
    # @option attributes [String] :idcs_display_name_message_id The value to assign to the {#idcs_display_name_message_id} property
    # @option attributes [BOOLEAN] :idcs_rtsa_hide_attribute The value to assign to the {#idcs_rtsa_hide_attribute} property
    # @option attributes [OCI::IdentityDomains::Models::SchemaLocalizedDisplayName] :localized_display_name The value to assign to the {#localized_display_name} property
    # @option attributes [String] :type The value to assign to the {#type} property
    # @option attributes [BOOLEAN] :multi_valued The value to assign to the {#multi_valued} property
    # @option attributes [String] :description The value to assign to the {#description} property
    # @option attributes [BOOLEAN] :required The value to assign to the {#required} property
    # @option attributes [BOOLEAN] :idcs_return_empty_when_null The value to assign to the {#idcs_return_empty_when_null} property
    # @option attributes [Array<String>] :canonical_values The value to assign to the {#canonical_values} property
    # @option attributes [String] :idcs_default_value The value to assign to the {#idcs_default_value} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SchemaLocalizedCanonicalValues>] :localized_canonical_values The value to assign to the {#localized_canonical_values} property
    # @option attributes [BOOLEAN] :case_exact The value to assign to the {#case_exact} property
    # @option attributes [String] :mutability The value to assign to the {#mutability} property
    # @option attributes [String] :returned The value to assign to the {#returned} property
    # @option attributes [String] :uniqueness The value to assign to the {#uniqueness} property
    # @option attributes [String] :idcs_csv_attribute_name The value to assign to the {#idcs_csv_attribute_name} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SchemaIdcsComplexAttributeNameMappings>] :idcs_complex_attribute_name_mappings The value to assign to the {#idcs_complex_attribute_name_mappings} property
    # @option attributes [String] :idcs_icf_bundle_attribute_name The value to assign to the {#idcs_icf_bundle_attribute_name} property
    # @option attributes [BOOLEAN] :idcs_icf_required The value to assign to the {#idcs_icf_required} property
    # @option attributes [String] :idcs_icf_attribute_type The value to assign to the {#idcs_icf_attribute_type} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SchemaIdcsCsvAttributeNameMappings>] :idcs_csv_attribute_name_mappings The value to assign to the {#idcs_csv_attribute_name_mappings} property
    # @option attributes [Array<String>] :reference_types The value to assign to the {#reference_types} property
    # @option attributes [Integer] :idcs_deprecated_since_version The value to assign to the {#idcs_deprecated_since_version} property
    # @option attributes [Integer] :idcs_added_since_version The value to assign to the {#idcs_added_since_version} property
    # @option attributes [String] :idcs_deprecated_since_release_number The value to assign to the {#idcs_deprecated_since_release_number} property
    # @option attributes [String] :idcs_added_since_release_number The value to assign to the {#idcs_added_since_release_number} property
    # @option attributes [Integer] :idcs_min_length The value to assign to the {#idcs_min_length} property
    # @option attributes [Integer] :idcs_max_length The value to assign to the {#idcs_max_length} property
    # @option attributes [Integer] :idcs_min_value The value to assign to the {#idcs_min_value} property
    # @option attributes [Integer] :idcs_max_value The value to assign to the {#idcs_max_value} property
    # @option attributes [BOOLEAN] :idcs_multi_language The value to assign to the {#idcs_multi_language} property
    # @option attributes [Array<String>] :idcs_ref_resource_attributes The value to assign to the {#idcs_ref_resource_attributes} property
    # @option attributes [Array<String>] :idcs_indirect_ref_resource_attributes The value to assign to the {#idcs_indirect_ref_resource_attributes} property
    # @option attributes [String] :idcs_auto_increment_seq_name The value to assign to the {#idcs_auto_increment_seq_name} property
    # @option attributes [BOOLEAN] :idcs_value_persisted The value to assign to the {#idcs_value_persisted} property
    # @option attributes [String] :idcs_sensitive The value to assign to the {#idcs_sensitive} property
    # @option attributes [BOOLEAN] :idcs_internal The value to assign to the {#idcs_internal} property
    # @option attributes [BOOLEAN] :idcs_trim_string_value The value to assign to the {#idcs_trim_string_value} property
    # @option attributes [BOOLEAN] :idcs_searchable The value to assign to the {#idcs_searchable} property
    # @option attributes [BOOLEAN] :idcs_generated The value to assign to the {#idcs_generated} property
    # @option attributes [BOOLEAN] :idcs_auditable The value to assign to the {#idcs_auditable} property
    # @option attributes [String] :idcs_target_attribute_name The value to assign to the {#idcs_target_attribute_name} property
    # @option attributes [String] :idcs_maps_to_same_target_attribute_name_as The value to assign to the {#idcs_maps_to_same_target_attribute_name_as} property
    # @option attributes [String] :idcs_target_norm_attribute_name The value to assign to the {#idcs_target_norm_attribute_name} property
    # @option attributes [String] :idcs_target_attribute_name_to_migrate_from The value to assign to the {#idcs_target_attribute_name_to_migrate_from} property
    # @option attributes [String] :idcs_target_unique_constraint_name The value to assign to the {#idcs_target_unique_constraint_name} property
    # @option attributes [String] :idcs_to_target_mapper The value to assign to the {#idcs_to_target_mapper} property
    # @option attributes [String] :idcs_from_target_mapper The value to assign to the {#idcs_from_target_mapper} property
    # @option attributes [String] :idcs_display_name The value to assign to the {#idcs_display_name} property
    # @option attributes [String] :idcs_canonical_value_source_resource_type The value to assign to the {#idcs_canonical_value_source_resource_type} property
    # @option attributes [String] :idcs_canonical_value_source_filter The value to assign to the {#idcs_canonical_value_source_filter} property
    # @option attributes [String] :idcs_canonical_value_source_resource_type_id The value to assign to the {#idcs_canonical_value_source_resource_type_id} property
    # @option attributes [String] :idcs_canonical_value_source_display_attr_name The value to assign to the {#idcs_canonical_value_source_display_attr_name} property
    # @option attributes [String] :idcs_canonical_value_source_key_attr_name The value to assign to the {#idcs_canonical_value_source_key_attr_name} property
    # @option attributes [String] :idcs_canonical_value_type The value to assign to the {#idcs_canonical_value_type} property
    # @option attributes [BOOLEAN] :idcs_validate_reference The value to assign to the {#idcs_validate_reference} property
    # @option attributes [Array<String>] :idcs_composite_key The value to assign to the {#idcs_composite_key} property
    # @option attributes [BOOLEAN] :idcs_fetch_complex_attribute_values The value to assign to the {#idcs_fetch_complex_attribute_values} property
    # @option attributes [BOOLEAN] :idcs_scim_compliant The value to assign to the {#idcs_scim_compliant} property
    # @option attributes [BOOLEAN] :idcs_attribute_mappable The value to assign to the {#idcs_attribute_mappable} property
    # @option attributes [BOOLEAN] :idcs_value_persisted_in_other_attribute The value to assign to the {#idcs_value_persisted_in_other_attribute} property
    # @option attributes [BOOLEAN] :idcs_pii The value to assign to the {#idcs_pii} property
    # @option attributes [BOOLEAN] :idcs_exclude_from_upgrade_patch The value to assign to the {#idcs_exclude_from_upgrade_patch} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SchemaSubAttributes>] :sub_attributes The value to assign to the {#sub_attributes} property
    # @option attributes [String] :idcs_ref_resource_attribute The value to assign to the {#idcs_ref_resource_attribute} property
    # @option attributes [BOOLEAN] :idcs_attribute_cacheable The value to assign to the {#idcs_attribute_cacheable} property
    # @option attributes [Integer] :idcsui_order The value to assign to the {#idcsui_order} property
    # @option attributes [String] :idcsui_regexp The value to assign to the {#idcsui_regexp} property
    # @option attributes [BOOLEAN] :idcsui_visible The value to assign to the {#idcsui_visible} property
    # @option attributes [String] :idcsui_widget The value to assign to the {#idcsui_widget} property
    # @option attributes [Array<String>] :idcs_features The value to assign to the {#idcs_features} property
    # @option attributes [Array<String>] :idcs_optional_pii_canonical_values The value to assign to the {#idcs_optional_pii_canonical_values} property
    # @option attributes [BOOLEAN] :idcs_sanitize The value to assign to the {#idcs_sanitize} property
    # @option attributes [BOOLEAN] :idcs_override_common_attribute The value to assign to the {#idcs_override_common_attribute} property
    # @option attributes [BOOLEAN] :idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete The value to assign to the {#idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete} property
    # @option attributes [BOOLEAN] :idcs_allow_updates_in_read_only_mode The value to assign to the {#idcs_allow_updates_in_read_only_mode} property
    # @option attributes [BOOLEAN] :idcs_paginate_response The value to assign to the {#idcs_paginate_response} property
    # @option attributes [BOOLEAN] :idcs_requires_write_for_access_flows The value to assign to the {#idcs_requires_write_for_access_flows} property
    # @option attributes [BOOLEAN] :idcs_requires_immediate_read_after_write_for_access_flows The value to assign to the {#idcs_requires_immediate_read_after_write_for_access_flows} property
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      self.name = attributes[:'name'] if attributes[:'name']

      self.idcs_display_name_message_id = attributes[:'idcsDisplayNameMessageId'] if attributes[:'idcsDisplayNameMessageId']

      raise 'You cannot provide both :idcsDisplayNameMessageId and :idcs_display_name_message_id' if attributes.key?(:'idcsDisplayNameMessageId') && attributes.key?(:'idcs_display_name_message_id')

      self.idcs_display_name_message_id = attributes[:'idcs_display_name_message_id'] if attributes[:'idcs_display_name_message_id']

      self.idcs_rtsa_hide_attribute = attributes[:'idcsRtsaHideAttribute'] unless attributes[:'idcsRtsaHideAttribute'].nil?

      raise 'You cannot provide both :idcsRtsaHideAttribute and :idcs_rtsa_hide_attribute' if attributes.key?(:'idcsRtsaHideAttribute') && attributes.key?(:'idcs_rtsa_hide_attribute')

      self.idcs_rtsa_hide_attribute = attributes[:'idcs_rtsa_hide_attribute'] unless attributes[:'idcs_rtsa_hide_attribute'].nil?

      self.localized_display_name = attributes[:'localizedDisplayName'] if attributes[:'localizedDisplayName']

      raise 'You cannot provide both :localizedDisplayName and :localized_display_name' if attributes.key?(:'localizedDisplayName') && attributes.key?(:'localized_display_name')

      self.localized_display_name = attributes[:'localized_display_name'] if attributes[:'localized_display_name']

      self.type = attributes[:'type'] if attributes[:'type']

      self.multi_valued = attributes[:'multiValued'] unless attributes[:'multiValued'].nil?

      raise 'You cannot provide both :multiValued and :multi_valued' if attributes.key?(:'multiValued') && attributes.key?(:'multi_valued')

      self.multi_valued = attributes[:'multi_valued'] unless attributes[:'multi_valued'].nil?

      self.description = attributes[:'description'] if attributes[:'description']

      self.required = attributes[:'required'] unless attributes[:'required'].nil?

      self.idcs_return_empty_when_null = attributes[:'idcsReturnEmptyWhenNull'] unless attributes[:'idcsReturnEmptyWhenNull'].nil?

      raise 'You cannot provide both :idcsReturnEmptyWhenNull and :idcs_return_empty_when_null' if attributes.key?(:'idcsReturnEmptyWhenNull') && attributes.key?(:'idcs_return_empty_when_null')

      self.idcs_return_empty_when_null = attributes[:'idcs_return_empty_when_null'] unless attributes[:'idcs_return_empty_when_null'].nil?

      self.canonical_values = attributes[:'canonicalValues'] if attributes[:'canonicalValues']

      raise 'You cannot provide both :canonicalValues and :canonical_values' if attributes.key?(:'canonicalValues') && attributes.key?(:'canonical_values')

      self.canonical_values = attributes[:'canonical_values'] if attributes[:'canonical_values']

      self.idcs_default_value = attributes[:'idcsDefaultValue'] if attributes[:'idcsDefaultValue']

      raise 'You cannot provide both :idcsDefaultValue and :idcs_default_value' if attributes.key?(:'idcsDefaultValue') && attributes.key?(:'idcs_default_value')

      self.idcs_default_value = attributes[:'idcs_default_value'] if attributes[:'idcs_default_value']

      self.localized_canonical_values = attributes[:'localizedCanonicalValues'] if attributes[:'localizedCanonicalValues']

      raise 'You cannot provide both :localizedCanonicalValues and :localized_canonical_values' if attributes.key?(:'localizedCanonicalValues') && attributes.key?(:'localized_canonical_values')

      self.localized_canonical_values = attributes[:'localized_canonical_values'] if attributes[:'localized_canonical_values']

      self.case_exact = attributes[:'caseExact'] unless attributes[:'caseExact'].nil?

      raise 'You cannot provide both :caseExact and :case_exact' if attributes.key?(:'caseExact') && attributes.key?(:'case_exact')

      self.case_exact = attributes[:'case_exact'] unless attributes[:'case_exact'].nil?

      self.mutability = attributes[:'mutability'] if attributes[:'mutability']

      self.returned = attributes[:'returned'] if attributes[:'returned']

      self.uniqueness = attributes[:'uniqueness'] if attributes[:'uniqueness']

      self.idcs_csv_attribute_name = attributes[:'idcsCsvAttributeName'] if attributes[:'idcsCsvAttributeName']

      raise 'You cannot provide both :idcsCsvAttributeName and :idcs_csv_attribute_name' if attributes.key?(:'idcsCsvAttributeName') && attributes.key?(:'idcs_csv_attribute_name')

      self.idcs_csv_attribute_name = attributes[:'idcs_csv_attribute_name'] if attributes[:'idcs_csv_attribute_name']

      self.idcs_complex_attribute_name_mappings = attributes[:'idcsComplexAttributeNameMappings'] if attributes[:'idcsComplexAttributeNameMappings']

      raise 'You cannot provide both :idcsComplexAttributeNameMappings and :idcs_complex_attribute_name_mappings' if attributes.key?(:'idcsComplexAttributeNameMappings') && attributes.key?(:'idcs_complex_attribute_name_mappings')

      self.idcs_complex_attribute_name_mappings = attributes[:'idcs_complex_attribute_name_mappings'] if attributes[:'idcs_complex_attribute_name_mappings']

      self.idcs_icf_bundle_attribute_name = attributes[:'idcsICFBundleAttributeName'] if attributes[:'idcsICFBundleAttributeName']

      raise 'You cannot provide both :idcsICFBundleAttributeName and :idcs_icf_bundle_attribute_name' if attributes.key?(:'idcsICFBundleAttributeName') && attributes.key?(:'idcs_icf_bundle_attribute_name')

      self.idcs_icf_bundle_attribute_name = attributes[:'idcs_icf_bundle_attribute_name'] if attributes[:'idcs_icf_bundle_attribute_name']

      self.idcs_icf_required = attributes[:'idcsICFRequired'] unless attributes[:'idcsICFRequired'].nil?

      raise 'You cannot provide both :idcsICFRequired and :idcs_icf_required' if attributes.key?(:'idcsICFRequired') && attributes.key?(:'idcs_icf_required')

      self.idcs_icf_required = attributes[:'idcs_icf_required'] unless attributes[:'idcs_icf_required'].nil?

      self.idcs_icf_attribute_type = attributes[:'idcsICFAttributeType'] if attributes[:'idcsICFAttributeType']

      raise 'You cannot provide both :idcsICFAttributeType and :idcs_icf_attribute_type' if attributes.key?(:'idcsICFAttributeType') && attributes.key?(:'idcs_icf_attribute_type')

      self.idcs_icf_attribute_type = attributes[:'idcs_icf_attribute_type'] if attributes[:'idcs_icf_attribute_type']

      self.idcs_csv_attribute_name_mappings = attributes[:'idcsCsvAttributeNameMappings'] if attributes[:'idcsCsvAttributeNameMappings']

      raise 'You cannot provide both :idcsCsvAttributeNameMappings and :idcs_csv_attribute_name_mappings' if attributes.key?(:'idcsCsvAttributeNameMappings') && attributes.key?(:'idcs_csv_attribute_name_mappings')

      self.idcs_csv_attribute_name_mappings = attributes[:'idcs_csv_attribute_name_mappings'] if attributes[:'idcs_csv_attribute_name_mappings']

      self.reference_types = attributes[:'referenceTypes'] if attributes[:'referenceTypes']

      raise 'You cannot provide both :referenceTypes and :reference_types' if attributes.key?(:'referenceTypes') && attributes.key?(:'reference_types')

      self.reference_types = attributes[:'reference_types'] if attributes[:'reference_types']

      self.idcs_deprecated_since_version = attributes[:'idcsDeprecatedSinceVersion'] if attributes[:'idcsDeprecatedSinceVersion']

      raise 'You cannot provide both :idcsDeprecatedSinceVersion and :idcs_deprecated_since_version' if attributes.key?(:'idcsDeprecatedSinceVersion') && attributes.key?(:'idcs_deprecated_since_version')

      self.idcs_deprecated_since_version = attributes[:'idcs_deprecated_since_version'] if attributes[:'idcs_deprecated_since_version']

      self.idcs_added_since_version = attributes[:'idcsAddedSinceVersion'] if attributes[:'idcsAddedSinceVersion']

      raise 'You cannot provide both :idcsAddedSinceVersion and :idcs_added_since_version' if attributes.key?(:'idcsAddedSinceVersion') && attributes.key?(:'idcs_added_since_version')

      self.idcs_added_since_version = attributes[:'idcs_added_since_version'] if attributes[:'idcs_added_since_version']

      self.idcs_deprecated_since_release_number = attributes[:'idcsDeprecatedSinceReleaseNumber'] if attributes[:'idcsDeprecatedSinceReleaseNumber']

      raise 'You cannot provide both :idcsDeprecatedSinceReleaseNumber and :idcs_deprecated_since_release_number' if attributes.key?(:'idcsDeprecatedSinceReleaseNumber') && attributes.key?(:'idcs_deprecated_since_release_number')

      self.idcs_deprecated_since_release_number = attributes[:'idcs_deprecated_since_release_number'] if attributes[:'idcs_deprecated_since_release_number']

      self.idcs_added_since_release_number = attributes[:'idcsAddedSinceReleaseNumber'] if attributes[:'idcsAddedSinceReleaseNumber']

      raise 'You cannot provide both :idcsAddedSinceReleaseNumber and :idcs_added_since_release_number' if attributes.key?(:'idcsAddedSinceReleaseNumber') && attributes.key?(:'idcs_added_since_release_number')

      self.idcs_added_since_release_number = attributes[:'idcs_added_since_release_number'] if attributes[:'idcs_added_since_release_number']

      self.idcs_min_length = attributes[:'idcsMinLength'] if attributes[:'idcsMinLength']

      raise 'You cannot provide both :idcsMinLength and :idcs_min_length' if attributes.key?(:'idcsMinLength') && attributes.key?(:'idcs_min_length')

      self.idcs_min_length = attributes[:'idcs_min_length'] if attributes[:'idcs_min_length']

      self.idcs_max_length = attributes[:'idcsMaxLength'] if attributes[:'idcsMaxLength']

      raise 'You cannot provide both :idcsMaxLength and :idcs_max_length' if attributes.key?(:'idcsMaxLength') && attributes.key?(:'idcs_max_length')

      self.idcs_max_length = attributes[:'idcs_max_length'] if attributes[:'idcs_max_length']

      self.idcs_min_value = attributes[:'idcsMinValue'] if attributes[:'idcsMinValue']

      raise 'You cannot provide both :idcsMinValue and :idcs_min_value' if attributes.key?(:'idcsMinValue') && attributes.key?(:'idcs_min_value')

      self.idcs_min_value = attributes[:'idcs_min_value'] if attributes[:'idcs_min_value']

      self.idcs_max_value = attributes[:'idcsMaxValue'] if attributes[:'idcsMaxValue']

      raise 'You cannot provide both :idcsMaxValue and :idcs_max_value' if attributes.key?(:'idcsMaxValue') && attributes.key?(:'idcs_max_value')

      self.idcs_max_value = attributes[:'idcs_max_value'] if attributes[:'idcs_max_value']

      self.idcs_multi_language = attributes[:'idcsMultiLanguage'] unless attributes[:'idcsMultiLanguage'].nil?

      raise 'You cannot provide both :idcsMultiLanguage and :idcs_multi_language' if attributes.key?(:'idcsMultiLanguage') && attributes.key?(:'idcs_multi_language')

      self.idcs_multi_language = attributes[:'idcs_multi_language'] unless attributes[:'idcs_multi_language'].nil?

      self.idcs_ref_resource_attributes = attributes[:'idcsRefResourceAttributes'] if attributes[:'idcsRefResourceAttributes']

      raise 'You cannot provide both :idcsRefResourceAttributes and :idcs_ref_resource_attributes' if attributes.key?(:'idcsRefResourceAttributes') && attributes.key?(:'idcs_ref_resource_attributes')

      self.idcs_ref_resource_attributes = attributes[:'idcs_ref_resource_attributes'] if attributes[:'idcs_ref_resource_attributes']

      self.idcs_indirect_ref_resource_attributes = attributes[:'idcsIndirectRefResourceAttributes'] if attributes[:'idcsIndirectRefResourceAttributes']

      raise 'You cannot provide both :idcsIndirectRefResourceAttributes and :idcs_indirect_ref_resource_attributes' if attributes.key?(:'idcsIndirectRefResourceAttributes') && attributes.key?(:'idcs_indirect_ref_resource_attributes')

      self.idcs_indirect_ref_resource_attributes = attributes[:'idcs_indirect_ref_resource_attributes'] if attributes[:'idcs_indirect_ref_resource_attributes']

      self.idcs_auto_increment_seq_name = attributes[:'idcsAutoIncrementSeqName'] if attributes[:'idcsAutoIncrementSeqName']

      raise 'You cannot provide both :idcsAutoIncrementSeqName and :idcs_auto_increment_seq_name' if attributes.key?(:'idcsAutoIncrementSeqName') && attributes.key?(:'idcs_auto_increment_seq_name')

      self.idcs_auto_increment_seq_name = attributes[:'idcs_auto_increment_seq_name'] if attributes[:'idcs_auto_increment_seq_name']

      self.idcs_value_persisted = attributes[:'idcsValuePersisted'] unless attributes[:'idcsValuePersisted'].nil?

      raise 'You cannot provide both :idcsValuePersisted and :idcs_value_persisted' if attributes.key?(:'idcsValuePersisted') && attributes.key?(:'idcs_value_persisted')

      self.idcs_value_persisted = attributes[:'idcs_value_persisted'] unless attributes[:'idcs_value_persisted'].nil?

      self.idcs_sensitive = attributes[:'idcsSensitive'] if attributes[:'idcsSensitive']

      raise 'You cannot provide both :idcsSensitive and :idcs_sensitive' if attributes.key?(:'idcsSensitive') && attributes.key?(:'idcs_sensitive')

      self.idcs_sensitive = attributes[:'idcs_sensitive'] if attributes[:'idcs_sensitive']

      self.idcs_internal = attributes[:'idcsInternal'] unless attributes[:'idcsInternal'].nil?

      raise 'You cannot provide both :idcsInternal and :idcs_internal' if attributes.key?(:'idcsInternal') && attributes.key?(:'idcs_internal')

      self.idcs_internal = attributes[:'idcs_internal'] unless attributes[:'idcs_internal'].nil?

      self.idcs_trim_string_value = attributes[:'idcsTrimStringValue'] unless attributes[:'idcsTrimStringValue'].nil?

      raise 'You cannot provide both :idcsTrimStringValue and :idcs_trim_string_value' if attributes.key?(:'idcsTrimStringValue') && attributes.key?(:'idcs_trim_string_value')

      self.idcs_trim_string_value = attributes[:'idcs_trim_string_value'] unless attributes[:'idcs_trim_string_value'].nil?

      self.idcs_searchable = attributes[:'idcsSearchable'] unless attributes[:'idcsSearchable'].nil?

      raise 'You cannot provide both :idcsSearchable and :idcs_searchable' if attributes.key?(:'idcsSearchable') && attributes.key?(:'idcs_searchable')

      self.idcs_searchable = attributes[:'idcs_searchable'] unless attributes[:'idcs_searchable'].nil?

      self.idcs_generated = attributes[:'idcsGenerated'] unless attributes[:'idcsGenerated'].nil?

      raise 'You cannot provide both :idcsGenerated and :idcs_generated' if attributes.key?(:'idcsGenerated') && attributes.key?(:'idcs_generated')

      self.idcs_generated = attributes[:'idcs_generated'] unless attributes[:'idcs_generated'].nil?

      self.idcs_auditable = attributes[:'idcsAuditable'] unless attributes[:'idcsAuditable'].nil?

      raise 'You cannot provide both :idcsAuditable and :idcs_auditable' if attributes.key?(:'idcsAuditable') && attributes.key?(:'idcs_auditable')

      self.idcs_auditable = attributes[:'idcs_auditable'] unless attributes[:'idcs_auditable'].nil?

      self.idcs_target_attribute_name = attributes[:'idcsTargetAttributeName'] if attributes[:'idcsTargetAttributeName']

      raise 'You cannot provide both :idcsTargetAttributeName and :idcs_target_attribute_name' if attributes.key?(:'idcsTargetAttributeName') && attributes.key?(:'idcs_target_attribute_name')

      self.idcs_target_attribute_name = attributes[:'idcs_target_attribute_name'] if attributes[:'idcs_target_attribute_name']

      self.idcs_maps_to_same_target_attribute_name_as = attributes[:'idcsMapsToSameTargetAttributeNameAs'] if attributes[:'idcsMapsToSameTargetAttributeNameAs']

      raise 'You cannot provide both :idcsMapsToSameTargetAttributeNameAs and :idcs_maps_to_same_target_attribute_name_as' if attributes.key?(:'idcsMapsToSameTargetAttributeNameAs') && attributes.key?(:'idcs_maps_to_same_target_attribute_name_as')

      self.idcs_maps_to_same_target_attribute_name_as = attributes[:'idcs_maps_to_same_target_attribute_name_as'] if attributes[:'idcs_maps_to_same_target_attribute_name_as']

      self.idcs_target_norm_attribute_name = attributes[:'idcsTargetNormAttributeName'] if attributes[:'idcsTargetNormAttributeName']

      raise 'You cannot provide both :idcsTargetNormAttributeName and :idcs_target_norm_attribute_name' if attributes.key?(:'idcsTargetNormAttributeName') && attributes.key?(:'idcs_target_norm_attribute_name')

      self.idcs_target_norm_attribute_name = attributes[:'idcs_target_norm_attribute_name'] if attributes[:'idcs_target_norm_attribute_name']

      self.idcs_target_attribute_name_to_migrate_from = attributes[:'idcsTargetAttributeNameToMigrateFrom'] if attributes[:'idcsTargetAttributeNameToMigrateFrom']

      raise 'You cannot provide both :idcsTargetAttributeNameToMigrateFrom and :idcs_target_attribute_name_to_migrate_from' if attributes.key?(:'idcsTargetAttributeNameToMigrateFrom') && attributes.key?(:'idcs_target_attribute_name_to_migrate_from')

      self.idcs_target_attribute_name_to_migrate_from = attributes[:'idcs_target_attribute_name_to_migrate_from'] if attributes[:'idcs_target_attribute_name_to_migrate_from']

      self.idcs_target_unique_constraint_name = attributes[:'idcsTargetUniqueConstraintName'] if attributes[:'idcsTargetUniqueConstraintName']

      raise 'You cannot provide both :idcsTargetUniqueConstraintName and :idcs_target_unique_constraint_name' if attributes.key?(:'idcsTargetUniqueConstraintName') && attributes.key?(:'idcs_target_unique_constraint_name')

      self.idcs_target_unique_constraint_name = attributes[:'idcs_target_unique_constraint_name'] if attributes[:'idcs_target_unique_constraint_name']

      self.idcs_to_target_mapper = attributes[:'idcsToTargetMapper'] if attributes[:'idcsToTargetMapper']

      raise 'You cannot provide both :idcsToTargetMapper and :idcs_to_target_mapper' if attributes.key?(:'idcsToTargetMapper') && attributes.key?(:'idcs_to_target_mapper')

      self.idcs_to_target_mapper = attributes[:'idcs_to_target_mapper'] if attributes[:'idcs_to_target_mapper']

      self.idcs_from_target_mapper = attributes[:'idcsFromTargetMapper'] if attributes[:'idcsFromTargetMapper']

      raise 'You cannot provide both :idcsFromTargetMapper and :idcs_from_target_mapper' if attributes.key?(:'idcsFromTargetMapper') && attributes.key?(:'idcs_from_target_mapper')

      self.idcs_from_target_mapper = attributes[:'idcs_from_target_mapper'] if attributes[:'idcs_from_target_mapper']

      self.idcs_display_name = attributes[:'idcsDisplayName'] if attributes[:'idcsDisplayName']

      raise 'You cannot provide both :idcsDisplayName and :idcs_display_name' if attributes.key?(:'idcsDisplayName') && attributes.key?(:'idcs_display_name')

      self.idcs_display_name = attributes[:'idcs_display_name'] if attributes[:'idcs_display_name']

      self.idcs_canonical_value_source_resource_type = attributes[:'idcsCanonicalValueSourceResourceType'] if attributes[:'idcsCanonicalValueSourceResourceType']

      raise 'You cannot provide both :idcsCanonicalValueSourceResourceType and :idcs_canonical_value_source_resource_type' if attributes.key?(:'idcsCanonicalValueSourceResourceType') && attributes.key?(:'idcs_canonical_value_source_resource_type')

      self.idcs_canonical_value_source_resource_type = attributes[:'idcs_canonical_value_source_resource_type'] if attributes[:'idcs_canonical_value_source_resource_type']

      self.idcs_canonical_value_source_filter = attributes[:'idcsCanonicalValueSourceFilter'] if attributes[:'idcsCanonicalValueSourceFilter']

      raise 'You cannot provide both :idcsCanonicalValueSourceFilter and :idcs_canonical_value_source_filter' if attributes.key?(:'idcsCanonicalValueSourceFilter') && attributes.key?(:'idcs_canonical_value_source_filter')

      self.idcs_canonical_value_source_filter = attributes[:'idcs_canonical_value_source_filter'] if attributes[:'idcs_canonical_value_source_filter']

      self.idcs_canonical_value_source_resource_type_id = attributes[:'idcsCanonicalValueSourceResourceTypeID'] if attributes[:'idcsCanonicalValueSourceResourceTypeID']

      raise 'You cannot provide both :idcsCanonicalValueSourceResourceTypeID and :idcs_canonical_value_source_resource_type_id' if attributes.key?(:'idcsCanonicalValueSourceResourceTypeID') && attributes.key?(:'idcs_canonical_value_source_resource_type_id')

      self.idcs_canonical_value_source_resource_type_id = attributes[:'idcs_canonical_value_source_resource_type_id'] if attributes[:'idcs_canonical_value_source_resource_type_id']

      self.idcs_canonical_value_source_display_attr_name = attributes[:'idcsCanonicalValueSourceDisplayAttrName'] if attributes[:'idcsCanonicalValueSourceDisplayAttrName']

      raise 'You cannot provide both :idcsCanonicalValueSourceDisplayAttrName and :idcs_canonical_value_source_display_attr_name' if attributes.key?(:'idcsCanonicalValueSourceDisplayAttrName') && attributes.key?(:'idcs_canonical_value_source_display_attr_name')

      self.idcs_canonical_value_source_display_attr_name = attributes[:'idcs_canonical_value_source_display_attr_name'] if attributes[:'idcs_canonical_value_source_display_attr_name']

      self.idcs_canonical_value_source_key_attr_name = attributes[:'idcsCanonicalValueSourceKeyAttrName'] if attributes[:'idcsCanonicalValueSourceKeyAttrName']

      raise 'You cannot provide both :idcsCanonicalValueSourceKeyAttrName and :idcs_canonical_value_source_key_attr_name' if attributes.key?(:'idcsCanonicalValueSourceKeyAttrName') && attributes.key?(:'idcs_canonical_value_source_key_attr_name')

      self.idcs_canonical_value_source_key_attr_name = attributes[:'idcs_canonical_value_source_key_attr_name'] if attributes[:'idcs_canonical_value_source_key_attr_name']

      self.idcs_canonical_value_type = attributes[:'idcsCanonicalValueType'] if attributes[:'idcsCanonicalValueType']

      raise 'You cannot provide both :idcsCanonicalValueType and :idcs_canonical_value_type' if attributes.key?(:'idcsCanonicalValueType') && attributes.key?(:'idcs_canonical_value_type')

      self.idcs_canonical_value_type = attributes[:'idcs_canonical_value_type'] if attributes[:'idcs_canonical_value_type']

      self.idcs_validate_reference = attributes[:'idcsValidateReference'] unless attributes[:'idcsValidateReference'].nil?

      raise 'You cannot provide both :idcsValidateReference and :idcs_validate_reference' if attributes.key?(:'idcsValidateReference') && attributes.key?(:'idcs_validate_reference')

      self.idcs_validate_reference = attributes[:'idcs_validate_reference'] unless attributes[:'idcs_validate_reference'].nil?

      self.idcs_composite_key = attributes[:'idcsCompositeKey'] if attributes[:'idcsCompositeKey']

      raise 'You cannot provide both :idcsCompositeKey and :idcs_composite_key' if attributes.key?(:'idcsCompositeKey') && attributes.key?(:'idcs_composite_key')

      self.idcs_composite_key = attributes[:'idcs_composite_key'] if attributes[:'idcs_composite_key']

      self.idcs_fetch_complex_attribute_values = attributes[:'idcsFetchComplexAttributeValues'] unless attributes[:'idcsFetchComplexAttributeValues'].nil?

      raise 'You cannot provide both :idcsFetchComplexAttributeValues and :idcs_fetch_complex_attribute_values' if attributes.key?(:'idcsFetchComplexAttributeValues') && attributes.key?(:'idcs_fetch_complex_attribute_values')

      self.idcs_fetch_complex_attribute_values = attributes[:'idcs_fetch_complex_attribute_values'] unless attributes[:'idcs_fetch_complex_attribute_values'].nil?

      self.idcs_scim_compliant = attributes[:'idcsScimCompliant'] unless attributes[:'idcsScimCompliant'].nil?

      raise 'You cannot provide both :idcsScimCompliant and :idcs_scim_compliant' if attributes.key?(:'idcsScimCompliant') && attributes.key?(:'idcs_scim_compliant')

      self.idcs_scim_compliant = attributes[:'idcs_scim_compliant'] unless attributes[:'idcs_scim_compliant'].nil?

      self.idcs_attribute_mappable = attributes[:'idcsAttributeMappable'] unless attributes[:'idcsAttributeMappable'].nil?

      raise 'You cannot provide both :idcsAttributeMappable and :idcs_attribute_mappable' if attributes.key?(:'idcsAttributeMappable') && attributes.key?(:'idcs_attribute_mappable')

      self.idcs_attribute_mappable = attributes[:'idcs_attribute_mappable'] unless attributes[:'idcs_attribute_mappable'].nil?

      self.idcs_value_persisted_in_other_attribute = attributes[:'idcsValuePersistedInOtherAttribute'] unless attributes[:'idcsValuePersistedInOtherAttribute'].nil?

      raise 'You cannot provide both :idcsValuePersistedInOtherAttribute and :idcs_value_persisted_in_other_attribute' if attributes.key?(:'idcsValuePersistedInOtherAttribute') && attributes.key?(:'idcs_value_persisted_in_other_attribute')

      self.idcs_value_persisted_in_other_attribute = attributes[:'idcs_value_persisted_in_other_attribute'] unless attributes[:'idcs_value_persisted_in_other_attribute'].nil?

      self.idcs_pii = attributes[:'idcsPii'] unless attributes[:'idcsPii'].nil?

      raise 'You cannot provide both :idcsPii and :idcs_pii' if attributes.key?(:'idcsPii') && attributes.key?(:'idcs_pii')

      self.idcs_pii = attributes[:'idcs_pii'] unless attributes[:'idcs_pii'].nil?

      self.idcs_exclude_from_upgrade_patch = attributes[:'idcsExcludeFromUpgradePatch'] unless attributes[:'idcsExcludeFromUpgradePatch'].nil?

      raise 'You cannot provide both :idcsExcludeFromUpgradePatch and :idcs_exclude_from_upgrade_patch' if attributes.key?(:'idcsExcludeFromUpgradePatch') && attributes.key?(:'idcs_exclude_from_upgrade_patch')

      self.idcs_exclude_from_upgrade_patch = attributes[:'idcs_exclude_from_upgrade_patch'] unless attributes[:'idcs_exclude_from_upgrade_patch'].nil?

      self.sub_attributes = attributes[:'subAttributes'] if attributes[:'subAttributes']

      raise 'You cannot provide both :subAttributes and :sub_attributes' if attributes.key?(:'subAttributes') && attributes.key?(:'sub_attributes')

      self.sub_attributes = attributes[:'sub_attributes'] if attributes[:'sub_attributes']

      self.idcs_ref_resource_attribute = attributes[:'idcsRefResourceAttribute'] if attributes[:'idcsRefResourceAttribute']

      raise 'You cannot provide both :idcsRefResourceAttribute and :idcs_ref_resource_attribute' if attributes.key?(:'idcsRefResourceAttribute') && attributes.key?(:'idcs_ref_resource_attribute')

      self.idcs_ref_resource_attribute = attributes[:'idcs_ref_resource_attribute'] if attributes[:'idcs_ref_resource_attribute']

      self.idcs_attribute_cacheable = attributes[:'idcsAttributeCacheable'] unless attributes[:'idcsAttributeCacheable'].nil?

      raise 'You cannot provide both :idcsAttributeCacheable and :idcs_attribute_cacheable' if attributes.key?(:'idcsAttributeCacheable') && attributes.key?(:'idcs_attribute_cacheable')

      self.idcs_attribute_cacheable = attributes[:'idcs_attribute_cacheable'] unless attributes[:'idcs_attribute_cacheable'].nil?

      self.idcsui_order = attributes[:'idcsuiOrder'] if attributes[:'idcsuiOrder']

      raise 'You cannot provide both :idcsuiOrder and :idcsui_order' if attributes.key?(:'idcsuiOrder') && attributes.key?(:'idcsui_order')

      self.idcsui_order = attributes[:'idcsui_order'] if attributes[:'idcsui_order']

      self.idcsui_regexp = attributes[:'idcsuiRegexp'] if attributes[:'idcsuiRegexp']

      raise 'You cannot provide both :idcsuiRegexp and :idcsui_regexp' if attributes.key?(:'idcsuiRegexp') && attributes.key?(:'idcsui_regexp')

      self.idcsui_regexp = attributes[:'idcsui_regexp'] if attributes[:'idcsui_regexp']

      self.idcsui_visible = attributes[:'idcsuiVisible'] unless attributes[:'idcsuiVisible'].nil?

      raise 'You cannot provide both :idcsuiVisible and :idcsui_visible' if attributes.key?(:'idcsuiVisible') && attributes.key?(:'idcsui_visible')

      self.idcsui_visible = attributes[:'idcsui_visible'] unless attributes[:'idcsui_visible'].nil?

      self.idcsui_widget = attributes[:'idcsuiWidget'] if attributes[:'idcsuiWidget']

      raise 'You cannot provide both :idcsuiWidget and :idcsui_widget' if attributes.key?(:'idcsuiWidget') && attributes.key?(:'idcsui_widget')

      self.idcsui_widget = attributes[:'idcsui_widget'] if attributes[:'idcsui_widget']

      self.idcs_features = attributes[:'idcsFeatures'] if attributes[:'idcsFeatures']

      raise 'You cannot provide both :idcsFeatures and :idcs_features' if attributes.key?(:'idcsFeatures') && attributes.key?(:'idcs_features')

      self.idcs_features = attributes[:'idcs_features'] if attributes[:'idcs_features']

      self.idcs_optional_pii_canonical_values = attributes[:'idcsOptionalPiiCanonicalValues'] if attributes[:'idcsOptionalPiiCanonicalValues']

      raise 'You cannot provide both :idcsOptionalPiiCanonicalValues and :idcs_optional_pii_canonical_values' if attributes.key?(:'idcsOptionalPiiCanonicalValues') && attributes.key?(:'idcs_optional_pii_canonical_values')

      self.idcs_optional_pii_canonical_values = attributes[:'idcs_optional_pii_canonical_values'] if attributes[:'idcs_optional_pii_canonical_values']

      self.idcs_sanitize = attributes[:'idcsSanitize'] unless attributes[:'idcsSanitize'].nil?

      raise 'You cannot provide both :idcsSanitize and :idcs_sanitize' if attributes.key?(:'idcsSanitize') && attributes.key?(:'idcs_sanitize')

      self.idcs_sanitize = attributes[:'idcs_sanitize'] unless attributes[:'idcs_sanitize'].nil?

      self.idcs_override_common_attribute = attributes[:'idcsOverrideCommonAttribute'] unless attributes[:'idcsOverrideCommonAttribute'].nil?

      raise 'You cannot provide both :idcsOverrideCommonAttribute and :idcs_override_common_attribute' if attributes.key?(:'idcsOverrideCommonAttribute') && attributes.key?(:'idcs_override_common_attribute')

      self.idcs_override_common_attribute = attributes[:'idcs_override_common_attribute'] unless attributes[:'idcs_override_common_attribute'].nil?

      self.idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete = attributes[:'idcsIgnoreReadOnlyAndImmutableRefAttrsDuringForceDelete'] unless attributes[:'idcsIgnoreReadOnlyAndImmutableRefAttrsDuringForceDelete'].nil?

      raise 'You cannot provide both :idcsIgnoreReadOnlyAndImmutableRefAttrsDuringForceDelete and :idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete' if attributes.key?(:'idcsIgnoreReadOnlyAndImmutableRefAttrsDuringForceDelete') && attributes.key?(:'idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete')

      self.idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete = attributes[:'idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete'] unless attributes[:'idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete'].nil?

      self.idcs_allow_updates_in_read_only_mode = attributes[:'idcsAllowUpdatesInReadOnlyMode'] unless attributes[:'idcsAllowUpdatesInReadOnlyMode'].nil?

      raise 'You cannot provide both :idcsAllowUpdatesInReadOnlyMode and :idcs_allow_updates_in_read_only_mode' if attributes.key?(:'idcsAllowUpdatesInReadOnlyMode') && attributes.key?(:'idcs_allow_updates_in_read_only_mode')

      self.idcs_allow_updates_in_read_only_mode = attributes[:'idcs_allow_updates_in_read_only_mode'] unless attributes[:'idcs_allow_updates_in_read_only_mode'].nil?

      self.idcs_paginate_response = attributes[:'idcsPaginateResponse'] unless attributes[:'idcsPaginateResponse'].nil?

      raise 'You cannot provide both :idcsPaginateResponse and :idcs_paginate_response' if attributes.key?(:'idcsPaginateResponse') && attributes.key?(:'idcs_paginate_response')

      self.idcs_paginate_response = attributes[:'idcs_paginate_response'] unless attributes[:'idcs_paginate_response'].nil?

      self.idcs_requires_write_for_access_flows = attributes[:'idcsRequiresWriteForAccessFlows'] unless attributes[:'idcsRequiresWriteForAccessFlows'].nil?

      raise 'You cannot provide both :idcsRequiresWriteForAccessFlows and :idcs_requires_write_for_access_flows' if attributes.key?(:'idcsRequiresWriteForAccessFlows') && attributes.key?(:'idcs_requires_write_for_access_flows')

      self.idcs_requires_write_for_access_flows = attributes[:'idcs_requires_write_for_access_flows'] unless attributes[:'idcs_requires_write_for_access_flows'].nil?

      self.idcs_requires_immediate_read_after_write_for_access_flows = attributes[:'idcsRequiresImmediateReadAfterWriteForAccessFlows'] unless attributes[:'idcsRequiresImmediateReadAfterWriteForAccessFlows'].nil?

      raise 'You cannot provide both :idcsRequiresImmediateReadAfterWriteForAccessFlows and :idcs_requires_immediate_read_after_write_for_access_flows' if attributes.key?(:'idcsRequiresImmediateReadAfterWriteForAccessFlows') && attributes.key?(:'idcs_requires_immediate_read_after_write_for_access_flows')

      self.idcs_requires_immediate_read_after_write_for_access_flows = attributes[:'idcs_requires_immediate_read_after_write_for_access_flows'] unless attributes[:'idcs_requires_immediate_read_after_write_for_access_flows'].nil?
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] type Object to be assigned
    def type=(type)
      # rubocop:disable Style/ConditionalAssignment
      if type && !TYPE_ENUM.include?(type)
        OCI.logger.debug("Unknown value for 'type' [" + type + "]. Mapping to 'TYPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @type = TYPE_UNKNOWN_ENUM_VALUE
      else
        @type = type
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] mutability Object to be assigned
    def mutability=(mutability)
      # rubocop:disable Style/ConditionalAssignment
      if mutability && !MUTABILITY_ENUM.include?(mutability)
        OCI.logger.debug("Unknown value for 'mutability' [" + mutability + "]. Mapping to 'MUTABILITY_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @mutability = MUTABILITY_UNKNOWN_ENUM_VALUE
      else
        @mutability = mutability
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] returned Object to be assigned
    def returned=(returned)
      # rubocop:disable Style/ConditionalAssignment
      if returned && !RETURNED_ENUM.include?(returned)
        OCI.logger.debug("Unknown value for 'returned' [" + returned + "]. Mapping to 'RETURNED_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @returned = RETURNED_UNKNOWN_ENUM_VALUE
      else
        @returned = returned
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] uniqueness Object to be assigned
    def uniqueness=(uniqueness)
      # rubocop:disable Style/ConditionalAssignment
      if uniqueness && !UNIQUENESS_ENUM.include?(uniqueness)
        OCI.logger.debug("Unknown value for 'uniqueness' [" + uniqueness + "]. Mapping to 'UNIQUENESS_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @uniqueness = UNIQUENESS_UNKNOWN_ENUM_VALUE
      else
        @uniqueness = uniqueness
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] idcs_icf_attribute_type Object to be assigned
    def idcs_icf_attribute_type=(idcs_icf_attribute_type)
      # rubocop:disable Style/ConditionalAssignment
      if idcs_icf_attribute_type && !IDCS_ICF_ATTRIBUTE_TYPE_ENUM.include?(idcs_icf_attribute_type)
        OCI.logger.debug("Unknown value for 'idcs_icf_attribute_type' [" + idcs_icf_attribute_type + "]. Mapping to 'IDCS_ICF_ATTRIBUTE_TYPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @idcs_icf_attribute_type = IDCS_ICF_ATTRIBUTE_TYPE_UNKNOWN_ENUM_VALUE
      else
        @idcs_icf_attribute_type = idcs_icf_attribute_type
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] idcs_sensitive Object to be assigned
    def idcs_sensitive=(idcs_sensitive)
      # rubocop:disable Style/ConditionalAssignment
      if idcs_sensitive && !IDCS_SENSITIVE_ENUM.include?(idcs_sensitive)
        OCI.logger.debug("Unknown value for 'idcs_sensitive' [" + idcs_sensitive + "]. Mapping to 'IDCS_SENSITIVE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @idcs_sensitive = IDCS_SENSITIVE_UNKNOWN_ENUM_VALUE
      else
        @idcs_sensitive = idcs_sensitive
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] idcs_canonical_value_type Object to be assigned
    def idcs_canonical_value_type=(idcs_canonical_value_type)
      # rubocop:disable Style/ConditionalAssignment
      if idcs_canonical_value_type && !IDCS_CANONICAL_VALUE_TYPE_ENUM.include?(idcs_canonical_value_type)
        OCI.logger.debug("Unknown value for 'idcs_canonical_value_type' [" + idcs_canonical_value_type + "]. Mapping to 'IDCS_CANONICAL_VALUE_TYPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @idcs_canonical_value_type = IDCS_CANONICAL_VALUE_TYPE_UNKNOWN_ENUM_VALUE
      else
        @idcs_canonical_value_type = idcs_canonical_value_type
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] idcsui_widget Object to be assigned
    def idcsui_widget=(idcsui_widget)
      # rubocop:disable Style/ConditionalAssignment
      if idcsui_widget && !IDCSUI_WIDGET_ENUM.include?(idcsui_widget)
        OCI.logger.debug("Unknown value for 'idcsui_widget' [" + idcsui_widget + "]. Mapping to 'IDCSUI_WIDGET_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @idcsui_widget = IDCSUI_WIDGET_UNKNOWN_ENUM_VALUE
      else
        @idcsui_widget = idcsui_widget
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] idcs_features Object to be assigned
    def idcs_features=(idcs_features)
      # rubocop:disable Style/ConditionalAssignment
      if idcs_features.nil?
        @idcs_features = nil
      else
        @idcs_features =
          idcs_features.collect do |item|
            if IDCS_FEATURES_ENUM.include?(item)
              item
            else
              OCI.logger.debug("Unknown value for 'idcs_features' [#{item}]. Mapping to 'IDCS_FEATURES_UNKNOWN_ENUM_VALUE'") if OCI.logger
              IDCS_FEATURES_UNKNOWN_ENUM_VALUE
            end
          end
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines


    # Checks equality by comparing each attribute.
    # @param [Object] other the other object to be compared
    def ==(other)
      return true if equal?(other)

      self.class == other.class &&
        name == other.name &&
        idcs_display_name_message_id == other.idcs_display_name_message_id &&
        idcs_rtsa_hide_attribute == other.idcs_rtsa_hide_attribute &&
        localized_display_name == other.localized_display_name &&
        type == other.type &&
        multi_valued == other.multi_valued &&
        description == other.description &&
        required == other.required &&
        idcs_return_empty_when_null == other.idcs_return_empty_when_null &&
        canonical_values == other.canonical_values &&
        idcs_default_value == other.idcs_default_value &&
        localized_canonical_values == other.localized_canonical_values &&
        case_exact == other.case_exact &&
        mutability == other.mutability &&
        returned == other.returned &&
        uniqueness == other.uniqueness &&
        idcs_csv_attribute_name == other.idcs_csv_attribute_name &&
        idcs_complex_attribute_name_mappings == other.idcs_complex_attribute_name_mappings &&
        idcs_icf_bundle_attribute_name == other.idcs_icf_bundle_attribute_name &&
        idcs_icf_required == other.idcs_icf_required &&
        idcs_icf_attribute_type == other.idcs_icf_attribute_type &&
        idcs_csv_attribute_name_mappings == other.idcs_csv_attribute_name_mappings &&
        reference_types == other.reference_types &&
        idcs_deprecated_since_version == other.idcs_deprecated_since_version &&
        idcs_added_since_version == other.idcs_added_since_version &&
        idcs_deprecated_since_release_number == other.idcs_deprecated_since_release_number &&
        idcs_added_since_release_number == other.idcs_added_since_release_number &&
        idcs_min_length == other.idcs_min_length &&
        idcs_max_length == other.idcs_max_length &&
        idcs_min_value == other.idcs_min_value &&
        idcs_max_value == other.idcs_max_value &&
        idcs_multi_language == other.idcs_multi_language &&
        idcs_ref_resource_attributes == other.idcs_ref_resource_attributes &&
        idcs_indirect_ref_resource_attributes == other.idcs_indirect_ref_resource_attributes &&
        idcs_auto_increment_seq_name == other.idcs_auto_increment_seq_name &&
        idcs_value_persisted == other.idcs_value_persisted &&
        idcs_sensitive == other.idcs_sensitive &&
        idcs_internal == other.idcs_internal &&
        idcs_trim_string_value == other.idcs_trim_string_value &&
        idcs_searchable == other.idcs_searchable &&
        idcs_generated == other.idcs_generated &&
        idcs_auditable == other.idcs_auditable &&
        idcs_target_attribute_name == other.idcs_target_attribute_name &&
        idcs_maps_to_same_target_attribute_name_as == other.idcs_maps_to_same_target_attribute_name_as &&
        idcs_target_norm_attribute_name == other.idcs_target_norm_attribute_name &&
        idcs_target_attribute_name_to_migrate_from == other.idcs_target_attribute_name_to_migrate_from &&
        idcs_target_unique_constraint_name == other.idcs_target_unique_constraint_name &&
        idcs_to_target_mapper == other.idcs_to_target_mapper &&
        idcs_from_target_mapper == other.idcs_from_target_mapper &&
        idcs_display_name == other.idcs_display_name &&
        idcs_canonical_value_source_resource_type == other.idcs_canonical_value_source_resource_type &&
        idcs_canonical_value_source_filter == other.idcs_canonical_value_source_filter &&
        idcs_canonical_value_source_resource_type_id == other.idcs_canonical_value_source_resource_type_id &&
        idcs_canonical_value_source_display_attr_name == other.idcs_canonical_value_source_display_attr_name &&
        idcs_canonical_value_source_key_attr_name == other.idcs_canonical_value_source_key_attr_name &&
        idcs_canonical_value_type == other.idcs_canonical_value_type &&
        idcs_validate_reference == other.idcs_validate_reference &&
        idcs_composite_key == other.idcs_composite_key &&
        idcs_fetch_complex_attribute_values == other.idcs_fetch_complex_attribute_values &&
        idcs_scim_compliant == other.idcs_scim_compliant &&
        idcs_attribute_mappable == other.idcs_attribute_mappable &&
        idcs_value_persisted_in_other_attribute == other.idcs_value_persisted_in_other_attribute &&
        idcs_pii == other.idcs_pii &&
        idcs_exclude_from_upgrade_patch == other.idcs_exclude_from_upgrade_patch &&
        sub_attributes == other.sub_attributes &&
        idcs_ref_resource_attribute == other.idcs_ref_resource_attribute &&
        idcs_attribute_cacheable == other.idcs_attribute_cacheable &&
        idcsui_order == other.idcsui_order &&
        idcsui_regexp == other.idcsui_regexp &&
        idcsui_visible == other.idcsui_visible &&
        idcsui_widget == other.idcsui_widget &&
        idcs_features == other.idcs_features &&
        idcs_optional_pii_canonical_values == other.idcs_optional_pii_canonical_values &&
        idcs_sanitize == other.idcs_sanitize &&
        idcs_override_common_attribute == other.idcs_override_common_attribute &&
        idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete == other.idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete &&
        idcs_allow_updates_in_read_only_mode == other.idcs_allow_updates_in_read_only_mode &&
        idcs_paginate_response == other.idcs_paginate_response &&
        idcs_requires_write_for_access_flows == other.idcs_requires_write_for_access_flows &&
        idcs_requires_immediate_read_after_write_for_access_flows == other.idcs_requires_immediate_read_after_write_for_access_flows
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines

    # @see the `==` method
    # @param [Object] other the other object to be compared
    def eql?(other)
      self == other
    end

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [name, idcs_display_name_message_id, idcs_rtsa_hide_attribute, localized_display_name, type, multi_valued, description, required, idcs_return_empty_when_null, canonical_values, idcs_default_value, localized_canonical_values, case_exact, mutability, returned, uniqueness, idcs_csv_attribute_name, idcs_complex_attribute_name_mappings, idcs_icf_bundle_attribute_name, idcs_icf_required, idcs_icf_attribute_type, idcs_csv_attribute_name_mappings, reference_types, idcs_deprecated_since_version, idcs_added_since_version, idcs_deprecated_since_release_number, idcs_added_since_release_number, idcs_min_length, idcs_max_length, idcs_min_value, idcs_max_value, idcs_multi_language, idcs_ref_resource_attributes, idcs_indirect_ref_resource_attributes, idcs_auto_increment_seq_name, idcs_value_persisted, idcs_sensitive, idcs_internal, idcs_trim_string_value, idcs_searchable, idcs_generated, idcs_auditable, idcs_target_attribute_name, idcs_maps_to_same_target_attribute_name_as, idcs_target_norm_attribute_name, idcs_target_attribute_name_to_migrate_from, idcs_target_unique_constraint_name, idcs_to_target_mapper, idcs_from_target_mapper, idcs_display_name, idcs_canonical_value_source_resource_type, idcs_canonical_value_source_filter, idcs_canonical_value_source_resource_type_id, idcs_canonical_value_source_display_attr_name, idcs_canonical_value_source_key_attr_name, idcs_canonical_value_type, idcs_validate_reference, idcs_composite_key, idcs_fetch_complex_attribute_values, idcs_scim_compliant, idcs_attribute_mappable, idcs_value_persisted_in_other_attribute, idcs_pii, idcs_exclude_from_upgrade_patch, sub_attributes, idcs_ref_resource_attribute, idcs_attribute_cacheable, idcsui_order, idcsui_regexp, idcsui_visible, idcsui_widget, idcs_features, idcs_optional_pii_canonical_values, idcs_sanitize, idcs_override_common_attribute, idcs_ignore_read_only_and_immutable_ref_attrs_during_force_delete, idcs_allow_updates_in_read_only_mode, idcs_paginate_response, idcs_requires_write_for_access_flows, idcs_requires_immediate_read_after_write_for_access_flows].hash
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)

      self.class.swagger_types.each_pair do |key, type|
        if type =~ /^Array<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            public_method("#{key}=").call(
              attributes[self.class.attribute_map[key]]
                .map { |v| OCI::Internal::Util.convert_to_type(Regexp.last_match(1), v) }
            )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          public_method("#{key}=").call(
            OCI::Internal::Util.convert_to_type(type, attributes[self.class.attribute_map[key]])
          )
        end
        # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = public_method(attr).call
        next if value.nil? && !instance_variable_defined?("@#{attr}")

        hash[param] = _to_hash(value)
      end
      hash
    end

    private

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
# rubocop:enable Lint/UnneededCopDisableDirective, Metrics/LineLength
