# Copyright (c) 2016, 2024, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: v1
require 'date'
require 'logger'

# rubocop:disable Lint/UnneededCopDisableDirective, Metrics/LineLength
module OCI
  # Settings schema
  class IdentityDomains::Models::Setting
    IDCS_PREVENTED_OPERATIONS_ENUM = [
      IDCS_PREVENTED_OPERATIONS_REPLACE = 'replace'.freeze,
      IDCS_PREVENTED_OPERATIONS_UPDATE = 'update'.freeze,
      IDCS_PREVENTED_OPERATIONS_DELETE = 'delete'.freeze,
      IDCS_PREVENTED_OPERATIONS_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    RE_AUTH_FACTOR_ENUM = [
      RE_AUTH_FACTOR_PASSWORD = 'password'.freeze,
      RE_AUTH_FACTOR_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    CSR_ACCESS_ENUM = [
      CSR_ACCESS_READ_ONLY = 'readOnly'.freeze,
      CSR_ACCESS_READ_WRITE = 'readWrite'.freeze,
      CSR_ACCESS_NONE = 'none'.freeze,
      CSR_ACCESS_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    DEFAULT_TRUST_SCOPE_ENUM = [
      DEFAULT_TRUST_SCOPE_EXPLICIT = 'Explicit'.freeze,
      DEFAULT_TRUST_SCOPE_ACCOUNT = 'Account'.freeze,
      DEFAULT_TRUST_SCOPE_TAGS = 'Tags'.freeze,
      DEFAULT_TRUST_SCOPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    # Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: always
    #  - type: string
    #  - uniqueness: global
    # @return [String]
    attr_accessor :id

    # Unique OCI identifier for the SCIM Resource.
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: immutable
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: global
    # @return [String]
    attr_accessor :ocid

    # **[Required]** REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: true
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :schemas

    # @return [OCI::IdentityDomains::Models::Meta]
    attr_accessor :meta

    # @return [OCI::IdentityDomains::Models::IdcsCreatedBy]
    attr_accessor :idcs_created_by

    # @return [OCI::IdentityDomains::Models::IdcsLastModifiedBy]
    attr_accessor :idcs_last_modified_by

    # Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
    #
    # **SCIM++ Properties:**
    #  - idcsSearchable: false
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: request
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_reader :idcs_prevented_operations

    # A list of tags on this resource.
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [key, value]
    #  - idcsSearchable: true
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: request
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::Tags>]
    attr_accessor :tags

    # A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :delete_in_progress

    # The release number when the resource was upgraded.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: request
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_last_upgraded_in_release

    # OCI Domain Id (ocid) in which the resource lives.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :domain_ocid

    # OCI Compartment Id (ocid) in which the resource lives.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :compartment_ocid

    # OCI Tenant Id (ocid) in which the resource lives.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :tenancy_ocid

    # An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :external_id

    # Contact emails used to notify tenants. Can be one or more user or group alias emails.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :contact_emails

    # Indicates if the branding is default or custom
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :custom_branding

    # Preferred written or spoken language used for localized user interfaces
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsCanonicalValueSourceFilter: attrName eq \"languages\" and attrValues.value eq \"$(preferredLanguage)\"
    #  - idcsCanonicalValueSourceResourceType: AllowedValue
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :preferred_language

    # User's timezone
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsCanonicalValueSourceFilter: attrName eq \"timezones\" and attrValues.value eq \"$(timezone)\"
    #  - idcsCanonicalValueSourceResourceType: AllowedValue
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :timezone

    # Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
    #
    # **Added In:** 2011192329
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :diagnostic_record_for_search_identifies_returned_resources

    # Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :re_auth_when_changing_my_authentication_factors

    # If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \\\"password\\\".
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [Array<String>]
    attr_reader :re_auth_factor

    # Default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsCanonicalValueSourceFilter: attrName eq \"locales\" and attrValues.value eq \"$(locale)\"
    #  - idcsCanonicalValueSourceResourceType: AllowedValue
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :locale

    # **[Required]** This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of 'none' means CSR cannot login to the services.
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: true
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_reader :csr_access

    # Indicates if access on SigningCert is allowed to public or not
    #
    # **Added In:** 17.3.4
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :signing_cert_public_access

    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    # - caseExact: false
    # - multiValued: false
    # - mutability: readWrite
    # - required: false
    # - returned: default
    # - type: string
    # - uniqueness: none
    # Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
    # @return [String]
    attr_accessor :sub_mapping_attr

    # Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the 'defaultTrustScope' attribute here in Settings, as well as any App-specific 'trustScope' attribute, to force in effect 'trustScope=Account' for every App in this customer tenancy.
    #
    # **Added In:** 18.1.6
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :account_always_trust_scope

    # **Deprecated Since: 18.3.6**
    #
    # **SCIM++ Properties:**
    # - multiValued: false
    # - mutability: readWrite
    # - required: false
    # - returned: default
    # - type: string
    # Indicates the default trust scope for all apps
    # @return [String]
    attr_reader :default_trust_scope

    # Tenant issuer.
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :issuer

    # Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: request
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :prev_issuer

    # The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    #  - uniqueness: none
    # @return [Integer]
    attr_accessor :diagnostic_level

    # The end time up to which diagnostic recording is switched on
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: dateTime
    #  - uniqueness: none
    # @return [String]
    attr_accessor :diagnostic_tracing_upto

    # One or more email domains allowed in a user's email field. If unassigned, any domain is allowed.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :allowed_domains

    # Indicates if Terms of Use is enabled in UI
    #
    # **Added In:** 18.2.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :enable_terms_of_use

    # Terms of Use URL
    #
    # **Added In:** 18.2.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :terms_of_use_url

    # Privacy Policy URL
    #
    # **Added In:** 18.2.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :privacy_policy_url

    # Database Migration Status
    #
    # **Added In:** 19.2.1
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :migration_status

    # On-Premises provisioning feature toggle.
    #
    # **Added In:** 19.2.1
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :on_premises_provisioning

    # If specified, indicates the set of Urls which can be returned to after successful forgot password flow
    #
    # **Added In:** 19.3.3
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: true
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - caseExact: false
    # @return [Array<String>]
    attr_accessor :allowed_forgot_password_flow_return_urls

    # If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \\\"notificationRedirectUrl\\\" in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
    #
    # **Added In:** 2009041201
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: true
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - caseExact: false
    # @return [Array<String>]
    attr_accessor :allowed_notification_redirect_urls

    # Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
    #
    # **Added In:** 19.2.1
    #
    # **SCIM++ Properties:**
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    # @return [Integer]
    attr_accessor :audit_event_retention_period

    # Indicates if 'hosted' option was selected
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_hosted_page

    # Storage URL location where the sanitized custom html is located
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :custom_html_location

    # Storage URL location where the sanitized custom css is located
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :custom_css_location

    # Custom translations (JSON String)
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :custom_translation

    # The attribute to store the cloud account name
    #
    # **Deprecated Since: 2011192329**
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :cloud_account_name

    # CloudAccountMigration: Enable Custom SIM Migrator Url.
    #
    # **Added In:** 2012271618
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :cloud_migration_url_enabled

    # If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
    #
    # **Added In:** 2012271618
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - caseExact: false
    # @return [String]
    attr_accessor :cloud_migration_custom_url

    # By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
    #
    # **Added In:** 2108190438
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    # @return [BOOLEAN]
    attr_accessor :service_admin_cannot_list_other_users

    # Limit the maximum return of members for an AppRole
    #
    # **Added In:** 2111112015
    #
    # **SCIM++ Properties:**
    #  - idcsMinValue: 0
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    #  - uniqueness: none
    # @return [Integer]
    attr_accessor :max_no_of_app_role_members_to_return

    # Limit the maximum return of CMVA for an App
    #
    # **Added In:** 2111112015
    #
    # **SCIM++ Properties:**
    #  - idcsMinValue: 0
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    #  - uniqueness: none
    # @return [Integer]
    attr_accessor :max_no_of_app_cmva_to_return

    # Maximum duration for IAM User Principal Session Token expiry
    #
    # **Added In:** 2307071836
    #
    # **SCIM++ Properties:**
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: integer
    #  - uniqueness: none
    # @return [Integer]
    attr_accessor :iam_upst_session_expiry

    # @return [OCI::IdentityDomains::Models::SettingsCloudGateCorsSettings]
    attr_accessor :cloud_gate_cors_settings

    # @return [OCI::IdentityDomains::Models::SettingsCertificateValidation]
    attr_accessor :certificate_validation

    # Custom claims associated with the specific tenant
    #
    # **Added In:** 18.4.2
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [name]
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::SettingsTenantCustomClaims>]
    attr_accessor :tenant_custom_claims

    # Purge Configs for different Resource Types
    #
    # **Deprecated Since: 19.1.6**
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [resourceName]
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SettingsPurgeConfigs>]
    attr_accessor :purge_configs

    # Default name of the Company in different locales
    #
    # **Added In:** 18.2.2
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [locale]
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SettingsDefaultCompanyNames>]
    attr_accessor :default_company_names

    # Default Login text in different locales
    #
    # **Added In:** 18.2.2
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [locale]
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SettingsDefaultLoginTexts>]
    attr_accessor :default_login_texts

    # References to various images
    #
    # **Added In:** 18.2.2
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [type]
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SettingsDefaultImages>]
    attr_accessor :default_images

    # Name of the company in different locales
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [locale]
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SettingsCompanyNames>]
    attr_accessor :company_names

    # Login text in different locales
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [locale]
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SettingsLoginTexts>]
    attr_accessor :login_texts

    # References to various images
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [type]
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    # @return [Array<OCI::IdentityDomains::Models::SettingsImages>]
    attr_accessor :images

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        # rubocop:disable Style/SymbolLiteral
        'id': :'id',
        'ocid': :'ocid',
        'schemas': :'schemas',
        'meta': :'meta',
        'idcs_created_by': :'idcsCreatedBy',
        'idcs_last_modified_by': :'idcsLastModifiedBy',
        'idcs_prevented_operations': :'idcsPreventedOperations',
        'tags': :'tags',
        'delete_in_progress': :'deleteInProgress',
        'idcs_last_upgraded_in_release': :'idcsLastUpgradedInRelease',
        'domain_ocid': :'domainOcid',
        'compartment_ocid': :'compartmentOcid',
        'tenancy_ocid': :'tenancyOcid',
        'external_id': :'externalId',
        'contact_emails': :'contactEmails',
        'custom_branding': :'customBranding',
        'preferred_language': :'preferredLanguage',
        'timezone': :'timezone',
        'diagnostic_record_for_search_identifies_returned_resources': :'diagnosticRecordForSearchIdentifiesReturnedResources',
        're_auth_when_changing_my_authentication_factors': :'reAuthWhenChangingMyAuthenticationFactors',
        're_auth_factor': :'reAuthFactor',
        'locale': :'locale',
        'csr_access': :'csrAccess',
        'signing_cert_public_access': :'signingCertPublicAccess',
        'sub_mapping_attr': :'subMappingAttr',
        'account_always_trust_scope': :'accountAlwaysTrustScope',
        'default_trust_scope': :'defaultTrustScope',
        'issuer': :'issuer',
        'prev_issuer': :'prevIssuer',
        'diagnostic_level': :'diagnosticLevel',
        'diagnostic_tracing_upto': :'diagnosticTracingUpto',
        'allowed_domains': :'allowedDomains',
        'enable_terms_of_use': :'enableTermsOfUse',
        'terms_of_use_url': :'termsOfUseUrl',
        'privacy_policy_url': :'privacyPolicyUrl',
        'migration_status': :'migrationStatus',
        'on_premises_provisioning': :'onPremisesProvisioning',
        'allowed_forgot_password_flow_return_urls': :'allowedForgotPasswordFlowReturnUrls',
        'allowed_notification_redirect_urls': :'allowedNotificationRedirectUrls',
        'audit_event_retention_period': :'auditEventRetentionPeriod',
        'is_hosted_page': :'isHostedPage',
        'custom_html_location': :'customHtmlLocation',
        'custom_css_location': :'customCssLocation',
        'custom_translation': :'customTranslation',
        'cloud_account_name': :'cloudAccountName',
        'cloud_migration_url_enabled': :'cloudMigrationUrlEnabled',
        'cloud_migration_custom_url': :'cloudMigrationCustomUrl',
        'service_admin_cannot_list_other_users': :'serviceAdminCannotListOtherUsers',
        'max_no_of_app_role_members_to_return': :'maxNoOfAppRoleMembersToReturn',
        'max_no_of_app_cmva_to_return': :'maxNoOfAppCMVAToReturn',
        'iam_upst_session_expiry': :'iamUpstSessionExpiry',
        'cloud_gate_cors_settings': :'cloudGateCorsSettings',
        'certificate_validation': :'certificateValidation',
        'tenant_custom_claims': :'tenantCustomClaims',
        'purge_configs': :'purgeConfigs',
        'default_company_names': :'defaultCompanyNames',
        'default_login_texts': :'defaultLoginTexts',
        'default_images': :'defaultImages',
        'company_names': :'companyNames',
        'login_texts': :'loginTexts',
        'images': :'images'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        # rubocop:disable Style/SymbolLiteral
        'id': :'String',
        'ocid': :'String',
        'schemas': :'Array<String>',
        'meta': :'OCI::IdentityDomains::Models::Meta',
        'idcs_created_by': :'OCI::IdentityDomains::Models::IdcsCreatedBy',
        'idcs_last_modified_by': :'OCI::IdentityDomains::Models::IdcsLastModifiedBy',
        'idcs_prevented_operations': :'Array<String>',
        'tags': :'Array<OCI::IdentityDomains::Models::Tags>',
        'delete_in_progress': :'BOOLEAN',
        'idcs_last_upgraded_in_release': :'String',
        'domain_ocid': :'String',
        'compartment_ocid': :'String',
        'tenancy_ocid': :'String',
        'external_id': :'String',
        'contact_emails': :'Array<String>',
        'custom_branding': :'BOOLEAN',
        'preferred_language': :'String',
        'timezone': :'String',
        'diagnostic_record_for_search_identifies_returned_resources': :'BOOLEAN',
        're_auth_when_changing_my_authentication_factors': :'BOOLEAN',
        're_auth_factor': :'Array<String>',
        'locale': :'String',
        'csr_access': :'String',
        'signing_cert_public_access': :'BOOLEAN',
        'sub_mapping_attr': :'String',
        'account_always_trust_scope': :'BOOLEAN',
        'default_trust_scope': :'String',
        'issuer': :'String',
        'prev_issuer': :'String',
        'diagnostic_level': :'Integer',
        'diagnostic_tracing_upto': :'String',
        'allowed_domains': :'Array<String>',
        'enable_terms_of_use': :'BOOLEAN',
        'terms_of_use_url': :'String',
        'privacy_policy_url': :'String',
        'migration_status': :'String',
        'on_premises_provisioning': :'BOOLEAN',
        'allowed_forgot_password_flow_return_urls': :'Array<String>',
        'allowed_notification_redirect_urls': :'Array<String>',
        'audit_event_retention_period': :'Integer',
        'is_hosted_page': :'BOOLEAN',
        'custom_html_location': :'String',
        'custom_css_location': :'String',
        'custom_translation': :'String',
        'cloud_account_name': :'String',
        'cloud_migration_url_enabled': :'BOOLEAN',
        'cloud_migration_custom_url': :'String',
        'service_admin_cannot_list_other_users': :'BOOLEAN',
        'max_no_of_app_role_members_to_return': :'Integer',
        'max_no_of_app_cmva_to_return': :'Integer',
        'iam_upst_session_expiry': :'Integer',
        'cloud_gate_cors_settings': :'OCI::IdentityDomains::Models::SettingsCloudGateCorsSettings',
        'certificate_validation': :'OCI::IdentityDomains::Models::SettingsCertificateValidation',
        'tenant_custom_claims': :'Array<OCI::IdentityDomains::Models::SettingsTenantCustomClaims>',
        'purge_configs': :'Array<OCI::IdentityDomains::Models::SettingsPurgeConfigs>',
        'default_company_names': :'Array<OCI::IdentityDomains::Models::SettingsDefaultCompanyNames>',
        'default_login_texts': :'Array<OCI::IdentityDomains::Models::SettingsDefaultLoginTexts>',
        'default_images': :'Array<OCI::IdentityDomains::Models::SettingsDefaultImages>',
        'company_names': :'Array<OCI::IdentityDomains::Models::SettingsCompanyNames>',
        'login_texts': :'Array<OCI::IdentityDomains::Models::SettingsLoginTexts>',
        'images': :'Array<OCI::IdentityDomains::Models::SettingsImages>'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral


    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    # @option attributes [String] :id The value to assign to the {#id} property
    # @option attributes [String] :ocid The value to assign to the {#ocid} property
    # @option attributes [Array<String>] :schemas The value to assign to the {#schemas} property
    # @option attributes [OCI::IdentityDomains::Models::Meta] :meta The value to assign to the {#meta} property
    # @option attributes [OCI::IdentityDomains::Models::IdcsCreatedBy] :idcs_created_by The value to assign to the {#idcs_created_by} property
    # @option attributes [OCI::IdentityDomains::Models::IdcsLastModifiedBy] :idcs_last_modified_by The value to assign to the {#idcs_last_modified_by} property
    # @option attributes [Array<String>] :idcs_prevented_operations The value to assign to the {#idcs_prevented_operations} property
    # @option attributes [Array<OCI::IdentityDomains::Models::Tags>] :tags The value to assign to the {#tags} property
    # @option attributes [BOOLEAN] :delete_in_progress The value to assign to the {#delete_in_progress} property
    # @option attributes [String] :idcs_last_upgraded_in_release The value to assign to the {#idcs_last_upgraded_in_release} property
    # @option attributes [String] :domain_ocid The value to assign to the {#domain_ocid} property
    # @option attributes [String] :compartment_ocid The value to assign to the {#compartment_ocid} property
    # @option attributes [String] :tenancy_ocid The value to assign to the {#tenancy_ocid} property
    # @option attributes [String] :external_id The value to assign to the {#external_id} property
    # @option attributes [Array<String>] :contact_emails The value to assign to the {#contact_emails} property
    # @option attributes [BOOLEAN] :custom_branding The value to assign to the {#custom_branding} property
    # @option attributes [String] :preferred_language The value to assign to the {#preferred_language} property
    # @option attributes [String] :timezone The value to assign to the {#timezone} property
    # @option attributes [BOOLEAN] :diagnostic_record_for_search_identifies_returned_resources The value to assign to the {#diagnostic_record_for_search_identifies_returned_resources} property
    # @option attributes [BOOLEAN] :re_auth_when_changing_my_authentication_factors The value to assign to the {#re_auth_when_changing_my_authentication_factors} property
    # @option attributes [Array<String>] :re_auth_factor The value to assign to the {#re_auth_factor} property
    # @option attributes [String] :locale The value to assign to the {#locale} property
    # @option attributes [String] :csr_access The value to assign to the {#csr_access} property
    # @option attributes [BOOLEAN] :signing_cert_public_access The value to assign to the {#signing_cert_public_access} property
    # @option attributes [String] :sub_mapping_attr The value to assign to the {#sub_mapping_attr} property
    # @option attributes [BOOLEAN] :account_always_trust_scope The value to assign to the {#account_always_trust_scope} property
    # @option attributes [String] :default_trust_scope The value to assign to the {#default_trust_scope} property
    # @option attributes [String] :issuer The value to assign to the {#issuer} property
    # @option attributes [String] :prev_issuer The value to assign to the {#prev_issuer} property
    # @option attributes [Integer] :diagnostic_level The value to assign to the {#diagnostic_level} property
    # @option attributes [String] :diagnostic_tracing_upto The value to assign to the {#diagnostic_tracing_upto} property
    # @option attributes [Array<String>] :allowed_domains The value to assign to the {#allowed_domains} property
    # @option attributes [BOOLEAN] :enable_terms_of_use The value to assign to the {#enable_terms_of_use} property
    # @option attributes [String] :terms_of_use_url The value to assign to the {#terms_of_use_url} property
    # @option attributes [String] :privacy_policy_url The value to assign to the {#privacy_policy_url} property
    # @option attributes [String] :migration_status The value to assign to the {#migration_status} property
    # @option attributes [BOOLEAN] :on_premises_provisioning The value to assign to the {#on_premises_provisioning} property
    # @option attributes [Array<String>] :allowed_forgot_password_flow_return_urls The value to assign to the {#allowed_forgot_password_flow_return_urls} property
    # @option attributes [Array<String>] :allowed_notification_redirect_urls The value to assign to the {#allowed_notification_redirect_urls} property
    # @option attributes [Integer] :audit_event_retention_period The value to assign to the {#audit_event_retention_period} property
    # @option attributes [BOOLEAN] :is_hosted_page The value to assign to the {#is_hosted_page} property
    # @option attributes [String] :custom_html_location The value to assign to the {#custom_html_location} property
    # @option attributes [String] :custom_css_location The value to assign to the {#custom_css_location} property
    # @option attributes [String] :custom_translation The value to assign to the {#custom_translation} property
    # @option attributes [String] :cloud_account_name The value to assign to the {#cloud_account_name} property
    # @option attributes [BOOLEAN] :cloud_migration_url_enabled The value to assign to the {#cloud_migration_url_enabled} property
    # @option attributes [String] :cloud_migration_custom_url The value to assign to the {#cloud_migration_custom_url} property
    # @option attributes [BOOLEAN] :service_admin_cannot_list_other_users The value to assign to the {#service_admin_cannot_list_other_users} property
    # @option attributes [Integer] :max_no_of_app_role_members_to_return The value to assign to the {#max_no_of_app_role_members_to_return} property
    # @option attributes [Integer] :max_no_of_app_cmva_to_return The value to assign to the {#max_no_of_app_cmva_to_return} property
    # @option attributes [Integer] :iam_upst_session_expiry The value to assign to the {#iam_upst_session_expiry} property
    # @option attributes [OCI::IdentityDomains::Models::SettingsCloudGateCorsSettings] :cloud_gate_cors_settings The value to assign to the {#cloud_gate_cors_settings} property
    # @option attributes [OCI::IdentityDomains::Models::SettingsCertificateValidation] :certificate_validation The value to assign to the {#certificate_validation} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsTenantCustomClaims>] :tenant_custom_claims The value to assign to the {#tenant_custom_claims} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsPurgeConfigs>] :purge_configs The value to assign to the {#purge_configs} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsDefaultCompanyNames>] :default_company_names The value to assign to the {#default_company_names} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsDefaultLoginTexts>] :default_login_texts The value to assign to the {#default_login_texts} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsDefaultImages>] :default_images The value to assign to the {#default_images} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsCompanyNames>] :company_names The value to assign to the {#company_names} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsLoginTexts>] :login_texts The value to assign to the {#login_texts} property
    # @option attributes [Array<OCI::IdentityDomains::Models::SettingsImages>] :images The value to assign to the {#images} property
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      self.id = attributes[:'id'] if attributes[:'id']

      self.ocid = attributes[:'ocid'] if attributes[:'ocid']

      self.schemas = attributes[:'schemas'] if attributes[:'schemas']

      self.meta = attributes[:'meta'] if attributes[:'meta']

      self.idcs_created_by = attributes[:'idcsCreatedBy'] if attributes[:'idcsCreatedBy']

      raise 'You cannot provide both :idcsCreatedBy and :idcs_created_by' if attributes.key?(:'idcsCreatedBy') && attributes.key?(:'idcs_created_by')

      self.idcs_created_by = attributes[:'idcs_created_by'] if attributes[:'idcs_created_by']

      self.idcs_last_modified_by = attributes[:'idcsLastModifiedBy'] if attributes[:'idcsLastModifiedBy']

      raise 'You cannot provide both :idcsLastModifiedBy and :idcs_last_modified_by' if attributes.key?(:'idcsLastModifiedBy') && attributes.key?(:'idcs_last_modified_by')

      self.idcs_last_modified_by = attributes[:'idcs_last_modified_by'] if attributes[:'idcs_last_modified_by']

      self.idcs_prevented_operations = attributes[:'idcsPreventedOperations'] if attributes[:'idcsPreventedOperations']

      raise 'You cannot provide both :idcsPreventedOperations and :idcs_prevented_operations' if attributes.key?(:'idcsPreventedOperations') && attributes.key?(:'idcs_prevented_operations')

      self.idcs_prevented_operations = attributes[:'idcs_prevented_operations'] if attributes[:'idcs_prevented_operations']

      self.tags = attributes[:'tags'] if attributes[:'tags']

      self.delete_in_progress = attributes[:'deleteInProgress'] unless attributes[:'deleteInProgress'].nil?

      raise 'You cannot provide both :deleteInProgress and :delete_in_progress' if attributes.key?(:'deleteInProgress') && attributes.key?(:'delete_in_progress')

      self.delete_in_progress = attributes[:'delete_in_progress'] unless attributes[:'delete_in_progress'].nil?

      self.idcs_last_upgraded_in_release = attributes[:'idcsLastUpgradedInRelease'] if attributes[:'idcsLastUpgradedInRelease']

      raise 'You cannot provide both :idcsLastUpgradedInRelease and :idcs_last_upgraded_in_release' if attributes.key?(:'idcsLastUpgradedInRelease') && attributes.key?(:'idcs_last_upgraded_in_release')

      self.idcs_last_upgraded_in_release = attributes[:'idcs_last_upgraded_in_release'] if attributes[:'idcs_last_upgraded_in_release']

      self.domain_ocid = attributes[:'domainOcid'] if attributes[:'domainOcid']

      raise 'You cannot provide both :domainOcid and :domain_ocid' if attributes.key?(:'domainOcid') && attributes.key?(:'domain_ocid')

      self.domain_ocid = attributes[:'domain_ocid'] if attributes[:'domain_ocid']

      self.compartment_ocid = attributes[:'compartmentOcid'] if attributes[:'compartmentOcid']

      raise 'You cannot provide both :compartmentOcid and :compartment_ocid' if attributes.key?(:'compartmentOcid') && attributes.key?(:'compartment_ocid')

      self.compartment_ocid = attributes[:'compartment_ocid'] if attributes[:'compartment_ocid']

      self.tenancy_ocid = attributes[:'tenancyOcid'] if attributes[:'tenancyOcid']

      raise 'You cannot provide both :tenancyOcid and :tenancy_ocid' if attributes.key?(:'tenancyOcid') && attributes.key?(:'tenancy_ocid')

      self.tenancy_ocid = attributes[:'tenancy_ocid'] if attributes[:'tenancy_ocid']

      self.external_id = attributes[:'externalId'] if attributes[:'externalId']

      raise 'You cannot provide both :externalId and :external_id' if attributes.key?(:'externalId') && attributes.key?(:'external_id')

      self.external_id = attributes[:'external_id'] if attributes[:'external_id']

      self.contact_emails = attributes[:'contactEmails'] if attributes[:'contactEmails']

      raise 'You cannot provide both :contactEmails and :contact_emails' if attributes.key?(:'contactEmails') && attributes.key?(:'contact_emails')

      self.contact_emails = attributes[:'contact_emails'] if attributes[:'contact_emails']

      self.custom_branding = attributes[:'customBranding'] unless attributes[:'customBranding'].nil?

      raise 'You cannot provide both :customBranding and :custom_branding' if attributes.key?(:'customBranding') && attributes.key?(:'custom_branding')

      self.custom_branding = attributes[:'custom_branding'] unless attributes[:'custom_branding'].nil?

      self.preferred_language = attributes[:'preferredLanguage'] if attributes[:'preferredLanguage']

      raise 'You cannot provide both :preferredLanguage and :preferred_language' if attributes.key?(:'preferredLanguage') && attributes.key?(:'preferred_language')

      self.preferred_language = attributes[:'preferred_language'] if attributes[:'preferred_language']

      self.timezone = attributes[:'timezone'] if attributes[:'timezone']

      self.diagnostic_record_for_search_identifies_returned_resources = attributes[:'diagnosticRecordForSearchIdentifiesReturnedResources'] unless attributes[:'diagnosticRecordForSearchIdentifiesReturnedResources'].nil?

      raise 'You cannot provide both :diagnosticRecordForSearchIdentifiesReturnedResources and :diagnostic_record_for_search_identifies_returned_resources' if attributes.key?(:'diagnosticRecordForSearchIdentifiesReturnedResources') && attributes.key?(:'diagnostic_record_for_search_identifies_returned_resources')

      self.diagnostic_record_for_search_identifies_returned_resources = attributes[:'diagnostic_record_for_search_identifies_returned_resources'] unless attributes[:'diagnostic_record_for_search_identifies_returned_resources'].nil?

      self.re_auth_when_changing_my_authentication_factors = attributes[:'reAuthWhenChangingMyAuthenticationFactors'] unless attributes[:'reAuthWhenChangingMyAuthenticationFactors'].nil?

      raise 'You cannot provide both :reAuthWhenChangingMyAuthenticationFactors and :re_auth_when_changing_my_authentication_factors' if attributes.key?(:'reAuthWhenChangingMyAuthenticationFactors') && attributes.key?(:'re_auth_when_changing_my_authentication_factors')

      self.re_auth_when_changing_my_authentication_factors = attributes[:'re_auth_when_changing_my_authentication_factors'] unless attributes[:'re_auth_when_changing_my_authentication_factors'].nil?

      self.re_auth_factor = attributes[:'reAuthFactor'] if attributes[:'reAuthFactor']

      raise 'You cannot provide both :reAuthFactor and :re_auth_factor' if attributes.key?(:'reAuthFactor') && attributes.key?(:'re_auth_factor')

      self.re_auth_factor = attributes[:'re_auth_factor'] if attributes[:'re_auth_factor']

      self.locale = attributes[:'locale'] if attributes[:'locale']

      self.csr_access = attributes[:'csrAccess'] if attributes[:'csrAccess']

      raise 'You cannot provide both :csrAccess and :csr_access' if attributes.key?(:'csrAccess') && attributes.key?(:'csr_access')

      self.csr_access = attributes[:'csr_access'] if attributes[:'csr_access']

      self.signing_cert_public_access = attributes[:'signingCertPublicAccess'] unless attributes[:'signingCertPublicAccess'].nil?

      raise 'You cannot provide both :signingCertPublicAccess and :signing_cert_public_access' if attributes.key?(:'signingCertPublicAccess') && attributes.key?(:'signing_cert_public_access')

      self.signing_cert_public_access = attributes[:'signing_cert_public_access'] unless attributes[:'signing_cert_public_access'].nil?

      self.sub_mapping_attr = attributes[:'subMappingAttr'] if attributes[:'subMappingAttr']

      raise 'You cannot provide both :subMappingAttr and :sub_mapping_attr' if attributes.key?(:'subMappingAttr') && attributes.key?(:'sub_mapping_attr')

      self.sub_mapping_attr = attributes[:'sub_mapping_attr'] if attributes[:'sub_mapping_attr']

      self.account_always_trust_scope = attributes[:'accountAlwaysTrustScope'] unless attributes[:'accountAlwaysTrustScope'].nil?

      raise 'You cannot provide both :accountAlwaysTrustScope and :account_always_trust_scope' if attributes.key?(:'accountAlwaysTrustScope') && attributes.key?(:'account_always_trust_scope')

      self.account_always_trust_scope = attributes[:'account_always_trust_scope'] unless attributes[:'account_always_trust_scope'].nil?

      self.default_trust_scope = attributes[:'defaultTrustScope'] if attributes[:'defaultTrustScope']

      raise 'You cannot provide both :defaultTrustScope and :default_trust_scope' if attributes.key?(:'defaultTrustScope') && attributes.key?(:'default_trust_scope')

      self.default_trust_scope = attributes[:'default_trust_scope'] if attributes[:'default_trust_scope']

      self.issuer = attributes[:'issuer'] if attributes[:'issuer']

      self.prev_issuer = attributes[:'prevIssuer'] if attributes[:'prevIssuer']

      raise 'You cannot provide both :prevIssuer and :prev_issuer' if attributes.key?(:'prevIssuer') && attributes.key?(:'prev_issuer')

      self.prev_issuer = attributes[:'prev_issuer'] if attributes[:'prev_issuer']

      self.diagnostic_level = attributes[:'diagnosticLevel'] if attributes[:'diagnosticLevel']

      raise 'You cannot provide both :diagnosticLevel and :diagnostic_level' if attributes.key?(:'diagnosticLevel') && attributes.key?(:'diagnostic_level')

      self.diagnostic_level = attributes[:'diagnostic_level'] if attributes[:'diagnostic_level']

      self.diagnostic_tracing_upto = attributes[:'diagnosticTracingUpto'] if attributes[:'diagnosticTracingUpto']

      raise 'You cannot provide both :diagnosticTracingUpto and :diagnostic_tracing_upto' if attributes.key?(:'diagnosticTracingUpto') && attributes.key?(:'diagnostic_tracing_upto')

      self.diagnostic_tracing_upto = attributes[:'diagnostic_tracing_upto'] if attributes[:'diagnostic_tracing_upto']

      self.allowed_domains = attributes[:'allowedDomains'] if attributes[:'allowedDomains']

      raise 'You cannot provide both :allowedDomains and :allowed_domains' if attributes.key?(:'allowedDomains') && attributes.key?(:'allowed_domains')

      self.allowed_domains = attributes[:'allowed_domains'] if attributes[:'allowed_domains']

      self.enable_terms_of_use = attributes[:'enableTermsOfUse'] unless attributes[:'enableTermsOfUse'].nil?

      raise 'You cannot provide both :enableTermsOfUse and :enable_terms_of_use' if attributes.key?(:'enableTermsOfUse') && attributes.key?(:'enable_terms_of_use')

      self.enable_terms_of_use = attributes[:'enable_terms_of_use'] unless attributes[:'enable_terms_of_use'].nil?

      self.terms_of_use_url = attributes[:'termsOfUseUrl'] if attributes[:'termsOfUseUrl']

      raise 'You cannot provide both :termsOfUseUrl and :terms_of_use_url' if attributes.key?(:'termsOfUseUrl') && attributes.key?(:'terms_of_use_url')

      self.terms_of_use_url = attributes[:'terms_of_use_url'] if attributes[:'terms_of_use_url']

      self.privacy_policy_url = attributes[:'privacyPolicyUrl'] if attributes[:'privacyPolicyUrl']

      raise 'You cannot provide both :privacyPolicyUrl and :privacy_policy_url' if attributes.key?(:'privacyPolicyUrl') && attributes.key?(:'privacy_policy_url')

      self.privacy_policy_url = attributes[:'privacy_policy_url'] if attributes[:'privacy_policy_url']

      self.migration_status = attributes[:'migrationStatus'] if attributes[:'migrationStatus']

      raise 'You cannot provide both :migrationStatus and :migration_status' if attributes.key?(:'migrationStatus') && attributes.key?(:'migration_status')

      self.migration_status = attributes[:'migration_status'] if attributes[:'migration_status']

      self.on_premises_provisioning = attributes[:'onPremisesProvisioning'] unless attributes[:'onPremisesProvisioning'].nil?

      raise 'You cannot provide both :onPremisesProvisioning and :on_premises_provisioning' if attributes.key?(:'onPremisesProvisioning') && attributes.key?(:'on_premises_provisioning')

      self.on_premises_provisioning = attributes[:'on_premises_provisioning'] unless attributes[:'on_premises_provisioning'].nil?

      self.allowed_forgot_password_flow_return_urls = attributes[:'allowedForgotPasswordFlowReturnUrls'] if attributes[:'allowedForgotPasswordFlowReturnUrls']

      raise 'You cannot provide both :allowedForgotPasswordFlowReturnUrls and :allowed_forgot_password_flow_return_urls' if attributes.key?(:'allowedForgotPasswordFlowReturnUrls') && attributes.key?(:'allowed_forgot_password_flow_return_urls')

      self.allowed_forgot_password_flow_return_urls = attributes[:'allowed_forgot_password_flow_return_urls'] if attributes[:'allowed_forgot_password_flow_return_urls']

      self.allowed_notification_redirect_urls = attributes[:'allowedNotificationRedirectUrls'] if attributes[:'allowedNotificationRedirectUrls']

      raise 'You cannot provide both :allowedNotificationRedirectUrls and :allowed_notification_redirect_urls' if attributes.key?(:'allowedNotificationRedirectUrls') && attributes.key?(:'allowed_notification_redirect_urls')

      self.allowed_notification_redirect_urls = attributes[:'allowed_notification_redirect_urls'] if attributes[:'allowed_notification_redirect_urls']

      self.audit_event_retention_period = attributes[:'auditEventRetentionPeriod'] if attributes[:'auditEventRetentionPeriod']

      raise 'You cannot provide both :auditEventRetentionPeriod and :audit_event_retention_period' if attributes.key?(:'auditEventRetentionPeriod') && attributes.key?(:'audit_event_retention_period')

      self.audit_event_retention_period = attributes[:'audit_event_retention_period'] if attributes[:'audit_event_retention_period']

      self.is_hosted_page = attributes[:'isHostedPage'] unless attributes[:'isHostedPage'].nil?

      raise 'You cannot provide both :isHostedPage and :is_hosted_page' if attributes.key?(:'isHostedPage') && attributes.key?(:'is_hosted_page')

      self.is_hosted_page = attributes[:'is_hosted_page'] unless attributes[:'is_hosted_page'].nil?

      self.custom_html_location = attributes[:'customHtmlLocation'] if attributes[:'customHtmlLocation']

      raise 'You cannot provide both :customHtmlLocation and :custom_html_location' if attributes.key?(:'customHtmlLocation') && attributes.key?(:'custom_html_location')

      self.custom_html_location = attributes[:'custom_html_location'] if attributes[:'custom_html_location']

      self.custom_css_location = attributes[:'customCssLocation'] if attributes[:'customCssLocation']

      raise 'You cannot provide both :customCssLocation and :custom_css_location' if attributes.key?(:'customCssLocation') && attributes.key?(:'custom_css_location')

      self.custom_css_location = attributes[:'custom_css_location'] if attributes[:'custom_css_location']

      self.custom_translation = attributes[:'customTranslation'] if attributes[:'customTranslation']

      raise 'You cannot provide both :customTranslation and :custom_translation' if attributes.key?(:'customTranslation') && attributes.key?(:'custom_translation')

      self.custom_translation = attributes[:'custom_translation'] if attributes[:'custom_translation']

      self.cloud_account_name = attributes[:'cloudAccountName'] if attributes[:'cloudAccountName']

      raise 'You cannot provide both :cloudAccountName and :cloud_account_name' if attributes.key?(:'cloudAccountName') && attributes.key?(:'cloud_account_name')

      self.cloud_account_name = attributes[:'cloud_account_name'] if attributes[:'cloud_account_name']

      self.cloud_migration_url_enabled = attributes[:'cloudMigrationUrlEnabled'] unless attributes[:'cloudMigrationUrlEnabled'].nil?

      raise 'You cannot provide both :cloudMigrationUrlEnabled and :cloud_migration_url_enabled' if attributes.key?(:'cloudMigrationUrlEnabled') && attributes.key?(:'cloud_migration_url_enabled')

      self.cloud_migration_url_enabled = attributes[:'cloud_migration_url_enabled'] unless attributes[:'cloud_migration_url_enabled'].nil?

      self.cloud_migration_custom_url = attributes[:'cloudMigrationCustomUrl'] if attributes[:'cloudMigrationCustomUrl']

      raise 'You cannot provide both :cloudMigrationCustomUrl and :cloud_migration_custom_url' if attributes.key?(:'cloudMigrationCustomUrl') && attributes.key?(:'cloud_migration_custom_url')

      self.cloud_migration_custom_url = attributes[:'cloud_migration_custom_url'] if attributes[:'cloud_migration_custom_url']

      self.service_admin_cannot_list_other_users = attributes[:'serviceAdminCannotListOtherUsers'] unless attributes[:'serviceAdminCannotListOtherUsers'].nil?

      raise 'You cannot provide both :serviceAdminCannotListOtherUsers and :service_admin_cannot_list_other_users' if attributes.key?(:'serviceAdminCannotListOtherUsers') && attributes.key?(:'service_admin_cannot_list_other_users')

      self.service_admin_cannot_list_other_users = attributes[:'service_admin_cannot_list_other_users'] unless attributes[:'service_admin_cannot_list_other_users'].nil?

      self.max_no_of_app_role_members_to_return = attributes[:'maxNoOfAppRoleMembersToReturn'] if attributes[:'maxNoOfAppRoleMembersToReturn']

      raise 'You cannot provide both :maxNoOfAppRoleMembersToReturn and :max_no_of_app_role_members_to_return' if attributes.key?(:'maxNoOfAppRoleMembersToReturn') && attributes.key?(:'max_no_of_app_role_members_to_return')

      self.max_no_of_app_role_members_to_return = attributes[:'max_no_of_app_role_members_to_return'] if attributes[:'max_no_of_app_role_members_to_return']

      self.max_no_of_app_cmva_to_return = attributes[:'maxNoOfAppCMVAToReturn'] if attributes[:'maxNoOfAppCMVAToReturn']

      raise 'You cannot provide both :maxNoOfAppCMVAToReturn and :max_no_of_app_cmva_to_return' if attributes.key?(:'maxNoOfAppCMVAToReturn') && attributes.key?(:'max_no_of_app_cmva_to_return')

      self.max_no_of_app_cmva_to_return = attributes[:'max_no_of_app_cmva_to_return'] if attributes[:'max_no_of_app_cmva_to_return']

      self.iam_upst_session_expiry = attributes[:'iamUpstSessionExpiry'] if attributes[:'iamUpstSessionExpiry']

      raise 'You cannot provide both :iamUpstSessionExpiry and :iam_upst_session_expiry' if attributes.key?(:'iamUpstSessionExpiry') && attributes.key?(:'iam_upst_session_expiry')

      self.iam_upst_session_expiry = attributes[:'iam_upst_session_expiry'] if attributes[:'iam_upst_session_expiry']

      self.cloud_gate_cors_settings = attributes[:'cloudGateCorsSettings'] if attributes[:'cloudGateCorsSettings']

      raise 'You cannot provide both :cloudGateCorsSettings and :cloud_gate_cors_settings' if attributes.key?(:'cloudGateCorsSettings') && attributes.key?(:'cloud_gate_cors_settings')

      self.cloud_gate_cors_settings = attributes[:'cloud_gate_cors_settings'] if attributes[:'cloud_gate_cors_settings']

      self.certificate_validation = attributes[:'certificateValidation'] if attributes[:'certificateValidation']

      raise 'You cannot provide both :certificateValidation and :certificate_validation' if attributes.key?(:'certificateValidation') && attributes.key?(:'certificate_validation')

      self.certificate_validation = attributes[:'certificate_validation'] if attributes[:'certificate_validation']

      self.tenant_custom_claims = attributes[:'tenantCustomClaims'] if attributes[:'tenantCustomClaims']

      raise 'You cannot provide both :tenantCustomClaims and :tenant_custom_claims' if attributes.key?(:'tenantCustomClaims') && attributes.key?(:'tenant_custom_claims')

      self.tenant_custom_claims = attributes[:'tenant_custom_claims'] if attributes[:'tenant_custom_claims']

      self.purge_configs = attributes[:'purgeConfigs'] if attributes[:'purgeConfigs']

      raise 'You cannot provide both :purgeConfigs and :purge_configs' if attributes.key?(:'purgeConfigs') && attributes.key?(:'purge_configs')

      self.purge_configs = attributes[:'purge_configs'] if attributes[:'purge_configs']

      self.default_company_names = attributes[:'defaultCompanyNames'] if attributes[:'defaultCompanyNames']

      raise 'You cannot provide both :defaultCompanyNames and :default_company_names' if attributes.key?(:'defaultCompanyNames') && attributes.key?(:'default_company_names')

      self.default_company_names = attributes[:'default_company_names'] if attributes[:'default_company_names']

      self.default_login_texts = attributes[:'defaultLoginTexts'] if attributes[:'defaultLoginTexts']

      raise 'You cannot provide both :defaultLoginTexts and :default_login_texts' if attributes.key?(:'defaultLoginTexts') && attributes.key?(:'default_login_texts')

      self.default_login_texts = attributes[:'default_login_texts'] if attributes[:'default_login_texts']

      self.default_images = attributes[:'defaultImages'] if attributes[:'defaultImages']

      raise 'You cannot provide both :defaultImages and :default_images' if attributes.key?(:'defaultImages') && attributes.key?(:'default_images')

      self.default_images = attributes[:'default_images'] if attributes[:'default_images']

      self.company_names = attributes[:'companyNames'] if attributes[:'companyNames']

      raise 'You cannot provide both :companyNames and :company_names' if attributes.key?(:'companyNames') && attributes.key?(:'company_names')

      self.company_names = attributes[:'company_names'] if attributes[:'company_names']

      self.login_texts = attributes[:'loginTexts'] if attributes[:'loginTexts']

      raise 'You cannot provide both :loginTexts and :login_texts' if attributes.key?(:'loginTexts') && attributes.key?(:'login_texts')

      self.login_texts = attributes[:'login_texts'] if attributes[:'login_texts']

      self.images = attributes[:'images'] if attributes[:'images']
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] idcs_prevented_operations Object to be assigned
    def idcs_prevented_operations=(idcs_prevented_operations)
      # rubocop:disable Style/ConditionalAssignment
      if idcs_prevented_operations.nil?
        @idcs_prevented_operations = nil
      else
        @idcs_prevented_operations =
          idcs_prevented_operations.collect do |item|
            if IDCS_PREVENTED_OPERATIONS_ENUM.include?(item)
              item
            else
              OCI.logger.debug("Unknown value for 'idcs_prevented_operations' [#{item}]. Mapping to 'IDCS_PREVENTED_OPERATIONS_UNKNOWN_ENUM_VALUE'") if OCI.logger
              IDCS_PREVENTED_OPERATIONS_UNKNOWN_ENUM_VALUE
            end
          end
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] re_auth_factor Object to be assigned
    def re_auth_factor=(re_auth_factor)
      # rubocop:disable Style/ConditionalAssignment
      if re_auth_factor.nil?
        @re_auth_factor = nil
      else
        @re_auth_factor =
          re_auth_factor.collect do |item|
            if RE_AUTH_FACTOR_ENUM.include?(item)
              item
            else
              OCI.logger.debug("Unknown value for 're_auth_factor' [#{item}]. Mapping to 'RE_AUTH_FACTOR_UNKNOWN_ENUM_VALUE'") if OCI.logger
              RE_AUTH_FACTOR_UNKNOWN_ENUM_VALUE
            end
          end
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] csr_access Object to be assigned
    def csr_access=(csr_access)
      # rubocop:disable Style/ConditionalAssignment
      if csr_access && !CSR_ACCESS_ENUM.include?(csr_access)
        OCI.logger.debug("Unknown value for 'csr_access' [" + csr_access + "]. Mapping to 'CSR_ACCESS_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @csr_access = CSR_ACCESS_UNKNOWN_ENUM_VALUE
      else
        @csr_access = csr_access
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] default_trust_scope Object to be assigned
    def default_trust_scope=(default_trust_scope)
      # rubocop:disable Style/ConditionalAssignment
      if default_trust_scope && !DEFAULT_TRUST_SCOPE_ENUM.include?(default_trust_scope)
        OCI.logger.debug("Unknown value for 'default_trust_scope' [" + default_trust_scope + "]. Mapping to 'DEFAULT_TRUST_SCOPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @default_trust_scope = DEFAULT_TRUST_SCOPE_UNKNOWN_ENUM_VALUE
      else
        @default_trust_scope = default_trust_scope
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines


    # Checks equality by comparing each attribute.
    # @param [Object] other the other object to be compared
    def ==(other)
      return true if equal?(other)

      self.class == other.class &&
        id == other.id &&
        ocid == other.ocid &&
        schemas == other.schemas &&
        meta == other.meta &&
        idcs_created_by == other.idcs_created_by &&
        idcs_last_modified_by == other.idcs_last_modified_by &&
        idcs_prevented_operations == other.idcs_prevented_operations &&
        tags == other.tags &&
        delete_in_progress == other.delete_in_progress &&
        idcs_last_upgraded_in_release == other.idcs_last_upgraded_in_release &&
        domain_ocid == other.domain_ocid &&
        compartment_ocid == other.compartment_ocid &&
        tenancy_ocid == other.tenancy_ocid &&
        external_id == other.external_id &&
        contact_emails == other.contact_emails &&
        custom_branding == other.custom_branding &&
        preferred_language == other.preferred_language &&
        timezone == other.timezone &&
        diagnostic_record_for_search_identifies_returned_resources == other.diagnostic_record_for_search_identifies_returned_resources &&
        re_auth_when_changing_my_authentication_factors == other.re_auth_when_changing_my_authentication_factors &&
        re_auth_factor == other.re_auth_factor &&
        locale == other.locale &&
        csr_access == other.csr_access &&
        signing_cert_public_access == other.signing_cert_public_access &&
        sub_mapping_attr == other.sub_mapping_attr &&
        account_always_trust_scope == other.account_always_trust_scope &&
        default_trust_scope == other.default_trust_scope &&
        issuer == other.issuer &&
        prev_issuer == other.prev_issuer &&
        diagnostic_level == other.diagnostic_level &&
        diagnostic_tracing_upto == other.diagnostic_tracing_upto &&
        allowed_domains == other.allowed_domains &&
        enable_terms_of_use == other.enable_terms_of_use &&
        terms_of_use_url == other.terms_of_use_url &&
        privacy_policy_url == other.privacy_policy_url &&
        migration_status == other.migration_status &&
        on_premises_provisioning == other.on_premises_provisioning &&
        allowed_forgot_password_flow_return_urls == other.allowed_forgot_password_flow_return_urls &&
        allowed_notification_redirect_urls == other.allowed_notification_redirect_urls &&
        audit_event_retention_period == other.audit_event_retention_period &&
        is_hosted_page == other.is_hosted_page &&
        custom_html_location == other.custom_html_location &&
        custom_css_location == other.custom_css_location &&
        custom_translation == other.custom_translation &&
        cloud_account_name == other.cloud_account_name &&
        cloud_migration_url_enabled == other.cloud_migration_url_enabled &&
        cloud_migration_custom_url == other.cloud_migration_custom_url &&
        service_admin_cannot_list_other_users == other.service_admin_cannot_list_other_users &&
        max_no_of_app_role_members_to_return == other.max_no_of_app_role_members_to_return &&
        max_no_of_app_cmva_to_return == other.max_no_of_app_cmva_to_return &&
        iam_upst_session_expiry == other.iam_upst_session_expiry &&
        cloud_gate_cors_settings == other.cloud_gate_cors_settings &&
        certificate_validation == other.certificate_validation &&
        tenant_custom_claims == other.tenant_custom_claims &&
        purge_configs == other.purge_configs &&
        default_company_names == other.default_company_names &&
        default_login_texts == other.default_login_texts &&
        default_images == other.default_images &&
        company_names == other.company_names &&
        login_texts == other.login_texts &&
        images == other.images
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines

    # @see the `==` method
    # @param [Object] other the other object to be compared
    def eql?(other)
      self == other
    end

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [id, ocid, schemas, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, contact_emails, custom_branding, preferred_language, timezone, diagnostic_record_for_search_identifies_returned_resources, re_auth_when_changing_my_authentication_factors, re_auth_factor, locale, csr_access, signing_cert_public_access, sub_mapping_attr, account_always_trust_scope, default_trust_scope, issuer, prev_issuer, diagnostic_level, diagnostic_tracing_upto, allowed_domains, enable_terms_of_use, terms_of_use_url, privacy_policy_url, migration_status, on_premises_provisioning, allowed_forgot_password_flow_return_urls, allowed_notification_redirect_urls, audit_event_retention_period, is_hosted_page, custom_html_location, custom_css_location, custom_translation, cloud_account_name, cloud_migration_url_enabled, cloud_migration_custom_url, service_admin_cannot_list_other_users, max_no_of_app_role_members_to_return, max_no_of_app_cmva_to_return, iam_upst_session_expiry, cloud_gate_cors_settings, certificate_validation, tenant_custom_claims, purge_configs, default_company_names, default_login_texts, default_images, company_names, login_texts, images].hash
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)

      self.class.swagger_types.each_pair do |key, type|
        if type =~ /^Array<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            public_method("#{key}=").call(
              attributes[self.class.attribute_map[key]]
                .map { |v| OCI::Internal::Util.convert_to_type(Regexp.last_match(1), v) }
            )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          public_method("#{key}=").call(
            OCI::Internal::Util.convert_to_type(type, attributes[self.class.attribute_map[key]])
          )
        end
        # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = public_method(attr).call
        next if value.nil? && !instance_variable_defined?("@#{attr}")

        hash[param] = _to_hash(value)
      end
      hash
    end

    private

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
# rubocop:enable Lint/UnneededCopDisableDirective, Metrics/LineLength
