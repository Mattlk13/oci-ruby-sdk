# Copyright (c) 2016, 2023, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: v1
require 'date'
require 'logger'

# rubocop:disable Lint/UnneededCopDisableDirective, Metrics/LineLength
module OCI
  # Validate any given Authentication Factor
  class IdentityDomains::Models::MyAuthenticationFactorValidator
    IDCS_PREVENTED_OPERATIONS_ENUM = [
      IDCS_PREVENTED_OPERATIONS_REPLACE = 'replace'.freeze,
      IDCS_PREVENTED_OPERATIONS_UPDATE = 'update'.freeze,
      IDCS_PREVENTED_OPERATIONS_DELETE = 'delete'.freeze,
      IDCS_PREVENTED_OPERATIONS_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    AUTH_FACTOR_ENUM = [
      AUTH_FACTOR_USERNAME_PASSWORD = 'USERNAME_PASSWORD'.freeze,
      AUTH_FACTOR_PUSH = 'PUSH'.freeze,
      AUTH_FACTOR_TOTP = 'TOTP'.freeze,
      AUTH_FACTOR_EMAIL = 'EMAIL'.freeze,
      AUTH_FACTOR_SMS = 'SMS'.freeze,
      AUTH_FACTOR_VOICE = 'VOICE'.freeze,
      AUTH_FACTOR_BYPASSCODE = 'BYPASSCODE'.freeze,
      AUTH_FACTOR_SECURITY_QUESTIONS = 'SECURITY_QUESTIONS'.freeze,
      AUTH_FACTOR_TRUST_TOKEN = 'TRUST_TOKEN'.freeze,
      AUTH_FACTOR_PHONE_CALL = 'PHONE_CALL'.freeze,
      AUTH_FACTOR_THIRDPARTY = 'THIRDPARTY'.freeze,
      AUTH_FACTOR_FIDO_AUTHENTICATOR = 'FIDO_AUTHENTICATOR'.freeze,
      AUTH_FACTOR_YUBICO_OTP = 'YUBICO_OTP'.freeze,
      AUTH_FACTOR_KMSI_TOKEN = 'KMSI_TOKEN'.freeze,
      AUTH_FACTOR_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    SCENARIO_ENUM = [
      SCENARIO_ENROLLMENT = 'ENROLLMENT'.freeze,
      SCENARIO_AUTHENTICATION = 'AUTHENTICATION'.freeze,
      SCENARIO_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    STATUS_ENUM = [
      STATUS_SUCCESS = 'SUCCESS'.freeze,
      STATUS_FAILURE = 'FAILURE'.freeze,
      STATUS_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    TYPE_ENUM = [
      TYPE_SAML = 'SAML'.freeze,
      TYPE_OIDC = 'OIDC'.freeze,
      TYPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    PREFERENCE_TYPE_ENUM = [
      PREFERENCE_TYPE_PASSWORDLESS = 'PASSWORDLESS'.freeze,
      PREFERENCE_TYPE_MFA = 'MFA'.freeze,
      PREFERENCE_TYPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    # Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: always
    #  - type: string
    #  - uniqueness: global
    # @return [String]
    attr_accessor :id

    # Unique OCI identifier for the SCIM Resource.
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: immutable
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: global
    # @return [String]
    attr_accessor :ocid

    # **[Required]** REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: true
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :schemas

    # @return [OCI::IdentityDomains::Models::Meta]
    attr_accessor :meta

    # @return [OCI::IdentityDomains::Models::IdcsCreatedBy]
    attr_accessor :idcs_created_by

    # @return [OCI::IdentityDomains::Models::IdcsLastModifiedBy]
    attr_accessor :idcs_last_modified_by

    # Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
    #
    # **SCIM++ Properties:**
    #  - idcsSearchable: false
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: request
    #  - type: string
    #  - uniqueness: none
    # @return [Array<String>]
    attr_reader :idcs_prevented_operations

    # A list of tags on this resource.
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [key, value]
    #  - idcsSearchable: true
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: request
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::Tags>]
    attr_accessor :tags

    # A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :delete_in_progress

    # The release number when the resource was upgraded.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: request
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :idcs_last_upgraded_in_release

    # OCI Domain Id (ocid) in which the resource lives.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :domain_ocid

    # OCI Compartment Id (ocid) in which the resource lives.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :compartment_ocid

    # OCI Tenant Id (ocid) in which the resource lives.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    #  - uniqueness: none
    # @return [String]
    attr_accessor :tenancy_ocid

    # **[Required]** Authentication Factor which is being validated
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: true
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_reader :auth_factor

    # **[Required]** Specifies whether the service is being used to enroll or validate a factor
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: true
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_reader :scenario

    # Request ID which is being validated
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_accessor :request_id

    # The One Time Passcode which needs to be validated
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: never
    #  - uniqueness: none
    #  - idcsSensitive: encrypt
    #  - idcsSearchable: false
    # @return [String]
    attr_accessor :otp_code

    # Device id whose factor is being validated
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_accessor :device_id

    # Validation status returned in the response
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readOnly
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_reader :status

    # User guid for whom the validation has initiated. Optional.
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_accessor :user_id

    # User name for whom the validation has initiated
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    #  - idcsPii: true
    # @return [String]
    attr_accessor :user_name

    # Display name of the verified device
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_accessor :display_name

    # Validator message which is passed by the client. When it is a PUSH notification, it can be a rejection message.
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: readWrite
    #  - returned: default
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [String]
    attr_accessor :message

    # type indicating whether the flow is OIDC, SAML etc.,
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: default
    #  - uniqueness: none
    # @return [String]
    attr_reader :type

    # Indicates whether to update user preferred mfa factor or not
    #
    # **SCIM++ Properties:**
    #  - type: boolean
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :update_user_preference

    # Indicates whether to user passwordless factor to be updated or mfa factor to be updated
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [String]
    attr_reader :preference_type

    # List of security questions the user has submitted to get authenticated.
    #
    # **SCIM++ Properties:**
    #  - type: complex
    #  - multiValued: true
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    #  - idcsSearchable: false
    # @return [Array<OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorSecurityQuestions>]
    attr_accessor :security_questions

    # Name of the client to be trusted
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [String]
    attr_accessor :name

    # Platform of the client to be trusted
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [String]
    attr_accessor :platform

    # Location of the trusted client.
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [String]
    attr_accessor :location

    # Trusted token resource identifier.
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [String]
    attr_accessor :trusted_token_id

    # KMSI token resource identifier.
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [String]
    attr_accessor :kmsi_token_id

    # Sign-On Policy dictated allowed second factors.
    #
    # **SCIM++ Properties:**
    #  - type: string
    #  - multiValued: true
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [Array<String>]
    attr_accessor :policy_enabled_second_factors

    # Indicates to create trust token.
    #
    # **SCIM++ Properties:**
    #  - type: boolean
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :create_trusted_agent

    # Indicates to create kmsi token.
    #
    # **SCIM++ Properties:**
    #  - type: boolean
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :create_kmsi_token

    # Flag indicates whether the factor is enrolled in account recovery. If the value is not provided or false, then it will be treated as MFA factor validation.
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_acc_rec_enabled

    # Sign-On Policy dictated validity duration for trusted client in Minutes.
    #
    # **SCIM++ Properties:**
    #  - type: integer
    #  - multiValued: false
    #  - required: false
    #  - mutability: writeOnly
    #  - returned: never
    #  - uniqueness: none
    # @return [Integer]
    attr_accessor :policy_trusted_frequency_mins

    # @return [OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorThirdPartyFactor]
    attr_accessor :third_party_factor

    # Additional attributes which will be sent as part of a push notification
    #
    # **SCIM++ Properties:**
    #  - idcsSearchable: false
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorAdditionalAttributes>]
    attr_accessor :additional_attributes

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        # rubocop:disable Style/SymbolLiteral
        'id': :'id',
        'ocid': :'ocid',
        'schemas': :'schemas',
        'meta': :'meta',
        'idcs_created_by': :'idcsCreatedBy',
        'idcs_last_modified_by': :'idcsLastModifiedBy',
        'idcs_prevented_operations': :'idcsPreventedOperations',
        'tags': :'tags',
        'delete_in_progress': :'deleteInProgress',
        'idcs_last_upgraded_in_release': :'idcsLastUpgradedInRelease',
        'domain_ocid': :'domainOcid',
        'compartment_ocid': :'compartmentOcid',
        'tenancy_ocid': :'tenancyOcid',
        'auth_factor': :'authFactor',
        'scenario': :'scenario',
        'request_id': :'requestId',
        'otp_code': :'otpCode',
        'device_id': :'deviceId',
        'status': :'status',
        'user_id': :'userId',
        'user_name': :'userName',
        'display_name': :'displayName',
        'message': :'message',
        'type': :'type',
        'update_user_preference': :'updateUserPreference',
        'preference_type': :'preferenceType',
        'security_questions': :'securityQuestions',
        'name': :'name',
        'platform': :'platform',
        'location': :'location',
        'trusted_token_id': :'trustedTokenId',
        'kmsi_token_id': :'kmsiTokenId',
        'policy_enabled_second_factors': :'policyEnabledSecondFactors',
        'create_trusted_agent': :'createTrustedAgent',
        'create_kmsi_token': :'createKmsiToken',
        'is_acc_rec_enabled': :'isAccRecEnabled',
        'policy_trusted_frequency_mins': :'policyTrustedFrequencyMins',
        'third_party_factor': :'thirdPartyFactor',
        'additional_attributes': :'additionalAttributes'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        # rubocop:disable Style/SymbolLiteral
        'id': :'String',
        'ocid': :'String',
        'schemas': :'Array<String>',
        'meta': :'OCI::IdentityDomains::Models::Meta',
        'idcs_created_by': :'OCI::IdentityDomains::Models::IdcsCreatedBy',
        'idcs_last_modified_by': :'OCI::IdentityDomains::Models::IdcsLastModifiedBy',
        'idcs_prevented_operations': :'Array<String>',
        'tags': :'Array<OCI::IdentityDomains::Models::Tags>',
        'delete_in_progress': :'BOOLEAN',
        'idcs_last_upgraded_in_release': :'String',
        'domain_ocid': :'String',
        'compartment_ocid': :'String',
        'tenancy_ocid': :'String',
        'auth_factor': :'String',
        'scenario': :'String',
        'request_id': :'String',
        'otp_code': :'String',
        'device_id': :'String',
        'status': :'String',
        'user_id': :'String',
        'user_name': :'String',
        'display_name': :'String',
        'message': :'String',
        'type': :'String',
        'update_user_preference': :'BOOLEAN',
        'preference_type': :'String',
        'security_questions': :'Array<OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorSecurityQuestions>',
        'name': :'String',
        'platform': :'String',
        'location': :'String',
        'trusted_token_id': :'String',
        'kmsi_token_id': :'String',
        'policy_enabled_second_factors': :'Array<String>',
        'create_trusted_agent': :'BOOLEAN',
        'create_kmsi_token': :'BOOLEAN',
        'is_acc_rec_enabled': :'BOOLEAN',
        'policy_trusted_frequency_mins': :'Integer',
        'third_party_factor': :'OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorThirdPartyFactor',
        'additional_attributes': :'Array<OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorAdditionalAttributes>'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral


    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    # @option attributes [String] :id The value to assign to the {#id} property
    # @option attributes [String] :ocid The value to assign to the {#ocid} property
    # @option attributes [Array<String>] :schemas The value to assign to the {#schemas} property
    # @option attributes [OCI::IdentityDomains::Models::Meta] :meta The value to assign to the {#meta} property
    # @option attributes [OCI::IdentityDomains::Models::IdcsCreatedBy] :idcs_created_by The value to assign to the {#idcs_created_by} property
    # @option attributes [OCI::IdentityDomains::Models::IdcsLastModifiedBy] :idcs_last_modified_by The value to assign to the {#idcs_last_modified_by} property
    # @option attributes [Array<String>] :idcs_prevented_operations The value to assign to the {#idcs_prevented_operations} property
    # @option attributes [Array<OCI::IdentityDomains::Models::Tags>] :tags The value to assign to the {#tags} property
    # @option attributes [BOOLEAN] :delete_in_progress The value to assign to the {#delete_in_progress} property
    # @option attributes [String] :idcs_last_upgraded_in_release The value to assign to the {#idcs_last_upgraded_in_release} property
    # @option attributes [String] :domain_ocid The value to assign to the {#domain_ocid} property
    # @option attributes [String] :compartment_ocid The value to assign to the {#compartment_ocid} property
    # @option attributes [String] :tenancy_ocid The value to assign to the {#tenancy_ocid} property
    # @option attributes [String] :auth_factor The value to assign to the {#auth_factor} property
    # @option attributes [String] :scenario The value to assign to the {#scenario} property
    # @option attributes [String] :request_id The value to assign to the {#request_id} property
    # @option attributes [String] :otp_code The value to assign to the {#otp_code} property
    # @option attributes [String] :device_id The value to assign to the {#device_id} property
    # @option attributes [String] :status The value to assign to the {#status} property
    # @option attributes [String] :user_id The value to assign to the {#user_id} property
    # @option attributes [String] :user_name The value to assign to the {#user_name} property
    # @option attributes [String] :display_name The value to assign to the {#display_name} property
    # @option attributes [String] :message The value to assign to the {#message} property
    # @option attributes [String] :type The value to assign to the {#type} property
    # @option attributes [BOOLEAN] :update_user_preference The value to assign to the {#update_user_preference} property
    # @option attributes [String] :preference_type The value to assign to the {#preference_type} property
    # @option attributes [Array<OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorSecurityQuestions>] :security_questions The value to assign to the {#security_questions} property
    # @option attributes [String] :name The value to assign to the {#name} property
    # @option attributes [String] :platform The value to assign to the {#platform} property
    # @option attributes [String] :location The value to assign to the {#location} property
    # @option attributes [String] :trusted_token_id The value to assign to the {#trusted_token_id} property
    # @option attributes [String] :kmsi_token_id The value to assign to the {#kmsi_token_id} property
    # @option attributes [Array<String>] :policy_enabled_second_factors The value to assign to the {#policy_enabled_second_factors} property
    # @option attributes [BOOLEAN] :create_trusted_agent The value to assign to the {#create_trusted_agent} property
    # @option attributes [BOOLEAN] :create_kmsi_token The value to assign to the {#create_kmsi_token} property
    # @option attributes [BOOLEAN] :is_acc_rec_enabled The value to assign to the {#is_acc_rec_enabled} property
    # @option attributes [Integer] :policy_trusted_frequency_mins The value to assign to the {#policy_trusted_frequency_mins} property
    # @option attributes [OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorThirdPartyFactor] :third_party_factor The value to assign to the {#third_party_factor} property
    # @option attributes [Array<OCI::IdentityDomains::Models::MyAuthenticationFactorValidatorAdditionalAttributes>] :additional_attributes The value to assign to the {#additional_attributes} property
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      self.id = attributes[:'id'] if attributes[:'id']

      self.ocid = attributes[:'ocid'] if attributes[:'ocid']

      self.schemas = attributes[:'schemas'] if attributes[:'schemas']

      self.meta = attributes[:'meta'] if attributes[:'meta']

      self.idcs_created_by = attributes[:'idcsCreatedBy'] if attributes[:'idcsCreatedBy']

      raise 'You cannot provide both :idcsCreatedBy and :idcs_created_by' if attributes.key?(:'idcsCreatedBy') && attributes.key?(:'idcs_created_by')

      self.idcs_created_by = attributes[:'idcs_created_by'] if attributes[:'idcs_created_by']

      self.idcs_last_modified_by = attributes[:'idcsLastModifiedBy'] if attributes[:'idcsLastModifiedBy']

      raise 'You cannot provide both :idcsLastModifiedBy and :idcs_last_modified_by' if attributes.key?(:'idcsLastModifiedBy') && attributes.key?(:'idcs_last_modified_by')

      self.idcs_last_modified_by = attributes[:'idcs_last_modified_by'] if attributes[:'idcs_last_modified_by']

      self.idcs_prevented_operations = attributes[:'idcsPreventedOperations'] if attributes[:'idcsPreventedOperations']

      raise 'You cannot provide both :idcsPreventedOperations and :idcs_prevented_operations' if attributes.key?(:'idcsPreventedOperations') && attributes.key?(:'idcs_prevented_operations')

      self.idcs_prevented_operations = attributes[:'idcs_prevented_operations'] if attributes[:'idcs_prevented_operations']

      self.tags = attributes[:'tags'] if attributes[:'tags']

      self.delete_in_progress = attributes[:'deleteInProgress'] unless attributes[:'deleteInProgress'].nil?

      raise 'You cannot provide both :deleteInProgress and :delete_in_progress' if attributes.key?(:'deleteInProgress') && attributes.key?(:'delete_in_progress')

      self.delete_in_progress = attributes[:'delete_in_progress'] unless attributes[:'delete_in_progress'].nil?

      self.idcs_last_upgraded_in_release = attributes[:'idcsLastUpgradedInRelease'] if attributes[:'idcsLastUpgradedInRelease']

      raise 'You cannot provide both :idcsLastUpgradedInRelease and :idcs_last_upgraded_in_release' if attributes.key?(:'idcsLastUpgradedInRelease') && attributes.key?(:'idcs_last_upgraded_in_release')

      self.idcs_last_upgraded_in_release = attributes[:'idcs_last_upgraded_in_release'] if attributes[:'idcs_last_upgraded_in_release']

      self.domain_ocid = attributes[:'domainOcid'] if attributes[:'domainOcid']

      raise 'You cannot provide both :domainOcid and :domain_ocid' if attributes.key?(:'domainOcid') && attributes.key?(:'domain_ocid')

      self.domain_ocid = attributes[:'domain_ocid'] if attributes[:'domain_ocid']

      self.compartment_ocid = attributes[:'compartmentOcid'] if attributes[:'compartmentOcid']

      raise 'You cannot provide both :compartmentOcid and :compartment_ocid' if attributes.key?(:'compartmentOcid') && attributes.key?(:'compartment_ocid')

      self.compartment_ocid = attributes[:'compartment_ocid'] if attributes[:'compartment_ocid']

      self.tenancy_ocid = attributes[:'tenancyOcid'] if attributes[:'tenancyOcid']

      raise 'You cannot provide both :tenancyOcid and :tenancy_ocid' if attributes.key?(:'tenancyOcid') && attributes.key?(:'tenancy_ocid')

      self.tenancy_ocid = attributes[:'tenancy_ocid'] if attributes[:'tenancy_ocid']

      self.auth_factor = attributes[:'authFactor'] if attributes[:'authFactor']

      raise 'You cannot provide both :authFactor and :auth_factor' if attributes.key?(:'authFactor') && attributes.key?(:'auth_factor')

      self.auth_factor = attributes[:'auth_factor'] if attributes[:'auth_factor']

      self.scenario = attributes[:'scenario'] if attributes[:'scenario']

      self.request_id = attributes[:'requestId'] if attributes[:'requestId']

      raise 'You cannot provide both :requestId and :request_id' if attributes.key?(:'requestId') && attributes.key?(:'request_id')

      self.request_id = attributes[:'request_id'] if attributes[:'request_id']

      self.otp_code = attributes[:'otpCode'] if attributes[:'otpCode']

      raise 'You cannot provide both :otpCode and :otp_code' if attributes.key?(:'otpCode') && attributes.key?(:'otp_code')

      self.otp_code = attributes[:'otp_code'] if attributes[:'otp_code']

      self.device_id = attributes[:'deviceId'] if attributes[:'deviceId']

      raise 'You cannot provide both :deviceId and :device_id' if attributes.key?(:'deviceId') && attributes.key?(:'device_id')

      self.device_id = attributes[:'device_id'] if attributes[:'device_id']

      self.status = attributes[:'status'] if attributes[:'status']

      self.user_id = attributes[:'userId'] if attributes[:'userId']

      raise 'You cannot provide both :userId and :user_id' if attributes.key?(:'userId') && attributes.key?(:'user_id')

      self.user_id = attributes[:'user_id'] if attributes[:'user_id']

      self.user_name = attributes[:'userName'] if attributes[:'userName']

      raise 'You cannot provide both :userName and :user_name' if attributes.key?(:'userName') && attributes.key?(:'user_name')

      self.user_name = attributes[:'user_name'] if attributes[:'user_name']

      self.display_name = attributes[:'displayName'] if attributes[:'displayName']

      raise 'You cannot provide both :displayName and :display_name' if attributes.key?(:'displayName') && attributes.key?(:'display_name')

      self.display_name = attributes[:'display_name'] if attributes[:'display_name']

      self.message = attributes[:'message'] if attributes[:'message']

      self.type = attributes[:'type'] if attributes[:'type']

      self.update_user_preference = attributes[:'updateUserPreference'] unless attributes[:'updateUserPreference'].nil?

      raise 'You cannot provide both :updateUserPreference and :update_user_preference' if attributes.key?(:'updateUserPreference') && attributes.key?(:'update_user_preference')

      self.update_user_preference = attributes[:'update_user_preference'] unless attributes[:'update_user_preference'].nil?

      self.preference_type = attributes[:'preferenceType'] if attributes[:'preferenceType']

      raise 'You cannot provide both :preferenceType and :preference_type' if attributes.key?(:'preferenceType') && attributes.key?(:'preference_type')

      self.preference_type = attributes[:'preference_type'] if attributes[:'preference_type']

      self.security_questions = attributes[:'securityQuestions'] if attributes[:'securityQuestions']

      raise 'You cannot provide both :securityQuestions and :security_questions' if attributes.key?(:'securityQuestions') && attributes.key?(:'security_questions')

      self.security_questions = attributes[:'security_questions'] if attributes[:'security_questions']

      self.name = attributes[:'name'] if attributes[:'name']

      self.platform = attributes[:'platform'] if attributes[:'platform']

      self.location = attributes[:'location'] if attributes[:'location']

      self.trusted_token_id = attributes[:'trustedTokenId'] if attributes[:'trustedTokenId']

      raise 'You cannot provide both :trustedTokenId and :trusted_token_id' if attributes.key?(:'trustedTokenId') && attributes.key?(:'trusted_token_id')

      self.trusted_token_id = attributes[:'trusted_token_id'] if attributes[:'trusted_token_id']

      self.kmsi_token_id = attributes[:'kmsiTokenId'] if attributes[:'kmsiTokenId']

      raise 'You cannot provide both :kmsiTokenId and :kmsi_token_id' if attributes.key?(:'kmsiTokenId') && attributes.key?(:'kmsi_token_id')

      self.kmsi_token_id = attributes[:'kmsi_token_id'] if attributes[:'kmsi_token_id']

      self.policy_enabled_second_factors = attributes[:'policyEnabledSecondFactors'] if attributes[:'policyEnabledSecondFactors']

      raise 'You cannot provide both :policyEnabledSecondFactors and :policy_enabled_second_factors' if attributes.key?(:'policyEnabledSecondFactors') && attributes.key?(:'policy_enabled_second_factors')

      self.policy_enabled_second_factors = attributes[:'policy_enabled_second_factors'] if attributes[:'policy_enabled_second_factors']

      self.create_trusted_agent = attributes[:'createTrustedAgent'] unless attributes[:'createTrustedAgent'].nil?

      raise 'You cannot provide both :createTrustedAgent and :create_trusted_agent' if attributes.key?(:'createTrustedAgent') && attributes.key?(:'create_trusted_agent')

      self.create_trusted_agent = attributes[:'create_trusted_agent'] unless attributes[:'create_trusted_agent'].nil?

      self.create_kmsi_token = attributes[:'createKmsiToken'] unless attributes[:'createKmsiToken'].nil?

      raise 'You cannot provide both :createKmsiToken and :create_kmsi_token' if attributes.key?(:'createKmsiToken') && attributes.key?(:'create_kmsi_token')

      self.create_kmsi_token = attributes[:'create_kmsi_token'] unless attributes[:'create_kmsi_token'].nil?

      self.is_acc_rec_enabled = attributes[:'isAccRecEnabled'] unless attributes[:'isAccRecEnabled'].nil?

      raise 'You cannot provide both :isAccRecEnabled and :is_acc_rec_enabled' if attributes.key?(:'isAccRecEnabled') && attributes.key?(:'is_acc_rec_enabled')

      self.is_acc_rec_enabled = attributes[:'is_acc_rec_enabled'] unless attributes[:'is_acc_rec_enabled'].nil?

      self.policy_trusted_frequency_mins = attributes[:'policyTrustedFrequencyMins'] if attributes[:'policyTrustedFrequencyMins']

      raise 'You cannot provide both :policyTrustedFrequencyMins and :policy_trusted_frequency_mins' if attributes.key?(:'policyTrustedFrequencyMins') && attributes.key?(:'policy_trusted_frequency_mins')

      self.policy_trusted_frequency_mins = attributes[:'policy_trusted_frequency_mins'] if attributes[:'policy_trusted_frequency_mins']

      self.third_party_factor = attributes[:'thirdPartyFactor'] if attributes[:'thirdPartyFactor']

      raise 'You cannot provide both :thirdPartyFactor and :third_party_factor' if attributes.key?(:'thirdPartyFactor') && attributes.key?(:'third_party_factor')

      self.third_party_factor = attributes[:'third_party_factor'] if attributes[:'third_party_factor']

      self.additional_attributes = attributes[:'additionalAttributes'] if attributes[:'additionalAttributes']

      raise 'You cannot provide both :additionalAttributes and :additional_attributes' if attributes.key?(:'additionalAttributes') && attributes.key?(:'additional_attributes')

      self.additional_attributes = attributes[:'additional_attributes'] if attributes[:'additional_attributes']
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] idcs_prevented_operations Object to be assigned
    def idcs_prevented_operations=(idcs_prevented_operations)
      # rubocop:disable Style/ConditionalAssignment
      if idcs_prevented_operations.nil?
        @idcs_prevented_operations = nil
      else
        @idcs_prevented_operations =
          idcs_prevented_operations.collect do |item|
            if IDCS_PREVENTED_OPERATIONS_ENUM.include?(item)
              item
            else
              OCI.logger.debug("Unknown value for 'idcs_prevented_operations' [#{item}]. Mapping to 'IDCS_PREVENTED_OPERATIONS_UNKNOWN_ENUM_VALUE'") if OCI.logger
              IDCS_PREVENTED_OPERATIONS_UNKNOWN_ENUM_VALUE
            end
          end
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] auth_factor Object to be assigned
    def auth_factor=(auth_factor)
      # rubocop:disable Style/ConditionalAssignment
      if auth_factor && !AUTH_FACTOR_ENUM.include?(auth_factor)
        OCI.logger.debug("Unknown value for 'auth_factor' [" + auth_factor + "]. Mapping to 'AUTH_FACTOR_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @auth_factor = AUTH_FACTOR_UNKNOWN_ENUM_VALUE
      else
        @auth_factor = auth_factor
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] scenario Object to be assigned
    def scenario=(scenario)
      # rubocop:disable Style/ConditionalAssignment
      if scenario && !SCENARIO_ENUM.include?(scenario)
        OCI.logger.debug("Unknown value for 'scenario' [" + scenario + "]. Mapping to 'SCENARIO_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @scenario = SCENARIO_UNKNOWN_ENUM_VALUE
      else
        @scenario = scenario
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] status Object to be assigned
    def status=(status)
      # rubocop:disable Style/ConditionalAssignment
      if status && !STATUS_ENUM.include?(status)
        OCI.logger.debug("Unknown value for 'status' [" + status + "]. Mapping to 'STATUS_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @status = STATUS_UNKNOWN_ENUM_VALUE
      else
        @status = status
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] type Object to be assigned
    def type=(type)
      # rubocop:disable Style/ConditionalAssignment
      if type && !TYPE_ENUM.include?(type)
        OCI.logger.debug("Unknown value for 'type' [" + type + "]. Mapping to 'TYPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @type = TYPE_UNKNOWN_ENUM_VALUE
      else
        @type = type
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] preference_type Object to be assigned
    def preference_type=(preference_type)
      # rubocop:disable Style/ConditionalAssignment
      if preference_type && !PREFERENCE_TYPE_ENUM.include?(preference_type)
        OCI.logger.debug("Unknown value for 'preference_type' [" + preference_type + "]. Mapping to 'PREFERENCE_TYPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @preference_type = PREFERENCE_TYPE_UNKNOWN_ENUM_VALUE
      else
        @preference_type = preference_type
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines


    # Checks equality by comparing each attribute.
    # @param [Object] other the other object to be compared
    def ==(other)
      return true if equal?(other)

      self.class == other.class &&
        id == other.id &&
        ocid == other.ocid &&
        schemas == other.schemas &&
        meta == other.meta &&
        idcs_created_by == other.idcs_created_by &&
        idcs_last_modified_by == other.idcs_last_modified_by &&
        idcs_prevented_operations == other.idcs_prevented_operations &&
        tags == other.tags &&
        delete_in_progress == other.delete_in_progress &&
        idcs_last_upgraded_in_release == other.idcs_last_upgraded_in_release &&
        domain_ocid == other.domain_ocid &&
        compartment_ocid == other.compartment_ocid &&
        tenancy_ocid == other.tenancy_ocid &&
        auth_factor == other.auth_factor &&
        scenario == other.scenario &&
        request_id == other.request_id &&
        otp_code == other.otp_code &&
        device_id == other.device_id &&
        status == other.status &&
        user_id == other.user_id &&
        user_name == other.user_name &&
        display_name == other.display_name &&
        message == other.message &&
        type == other.type &&
        update_user_preference == other.update_user_preference &&
        preference_type == other.preference_type &&
        security_questions == other.security_questions &&
        name == other.name &&
        platform == other.platform &&
        location == other.location &&
        trusted_token_id == other.trusted_token_id &&
        kmsi_token_id == other.kmsi_token_id &&
        policy_enabled_second_factors == other.policy_enabled_second_factors &&
        create_trusted_agent == other.create_trusted_agent &&
        create_kmsi_token == other.create_kmsi_token &&
        is_acc_rec_enabled == other.is_acc_rec_enabled &&
        policy_trusted_frequency_mins == other.policy_trusted_frequency_mins &&
        third_party_factor == other.third_party_factor &&
        additional_attributes == other.additional_attributes
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines

    # @see the `==` method
    # @param [Object] other the other object to be compared
    def eql?(other)
      self == other
    end

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [id, ocid, schemas, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, auth_factor, scenario, request_id, otp_code, device_id, status, user_id, user_name, display_name, message, type, update_user_preference, preference_type, security_questions, name, platform, location, trusted_token_id, kmsi_token_id, policy_enabled_second_factors, create_trusted_agent, create_kmsi_token, is_acc_rec_enabled, policy_trusted_frequency_mins, third_party_factor, additional_attributes].hash
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)

      self.class.swagger_types.each_pair do |key, type|
        if type =~ /^Array<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            public_method("#{key}=").call(
              attributes[self.class.attribute_map[key]]
                .map { |v| OCI::Internal::Util.convert_to_type(Regexp.last_match(1), v) }
            )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          public_method("#{key}=").call(
            OCI::Internal::Util.convert_to_type(type, attributes[self.class.attribute_map[key]])
          )
        end
        # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = public_method(attr).call
        next if value.nil? && !instance_variable_defined?("@#{attr}")

        hash[param] = _to_hash(value)
      end
      hash
    end

    private

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
# rubocop:enable Lint/UnneededCopDisableDirective, Metrics/LineLength
