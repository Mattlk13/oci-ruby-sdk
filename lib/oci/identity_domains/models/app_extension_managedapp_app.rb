# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: v1
require 'date'

# rubocop:disable Lint/UnneededCopDisableDirective, Metrics/LineLength
module OCI
  # Managed App
  class IdentityDomains::Models::AppExtensionManagedappApp
    # If true, the accounts of the application are managed through an ICF connector bundle
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :connected

    # If true, the managed app can be authoritative.
    #
    # **Added In:** 17.4.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :can_be_authoritative

    # If true, sync from the managed app will be performed as authoritative sync.
    #
    # **Added In:** 17.4.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_authoritative

    # If true, the managed app is an On-Premise app.
    #
    # **Added In:** 19.1.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_on_premise_app

    # If true, the managed app is a directory.
    #
    # **Added In:** 19.1.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_directory

    # If true, the managed app supports schema discovery.
    #
    # **Added In:** 19.1.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_schema_discovery_supported

    # If true, the managed app supports schema customization.
    #
    # **Added In:** 19.1.4
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_schema_customization_supported

    # If true, sync run-time operations are enabled for this App.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :enable_sync

    # If true, send sync summary as notification upon job completion.
    #
    # **Added In:** 20.1.3
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :enable_sync_summary_report_notification

    # If true, send activation email to new users created from authoritative sync.
    #
    # **Added In:** 19.2.1
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :enable_auth_sync_new_user_notification

    # If true, admin has granted consent to perform managed app run-time operations.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :admin_consent_granted

    # If true, the managed app requires 3-legged OAuth for authorization.
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_three_legged_o_auth_enabled

    # If true, indicates that Oracle Identity Cloud Service can use two-legged OAuth to connect to this ManagedApp.
    #
    # **Added In:** 18.2.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :is_two_legged_o_auth_enabled

    # Three legged OAuth provider name in Oracle Identity Cloud Service.
    #
    # **SCIM++ Properties:**
    #  - caseExact: true
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: string
    # @return [String]
    attr_accessor :three_legged_o_auth_provider_name

    # The most recent DateTime that the configuration of this App was updated. AppServices updates this timestamp whenever AppServices updates an App's configuration with respect to synchronization.
    #
    # **Added In:** 18.2.6
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: true
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: request
    #  - type: dateTime
    #  - uniqueness: none
    # @return [String]
    attr_accessor :sync_config_last_modified

    # If true, then the account form will be displayed in the Oracle Identity Cloud Service UI to interactively create or update an account for this App. If a value is not specified for this attribute, a default value of \\\"false\\\" will be assumed as the value for this attribute.
    #
    # **Added In:** 18.4.2
    #
    # **SCIM++ Properties:**
    #  - caseExact: false
    #  - idcsSearchable: false
    #  - multiValued: false
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: boolean
    #  - uniqueness: none
    # @return [BOOLEAN]
    attr_accessor :account_form_visible

    # IdentityBridges associated with this App
    #
    # **Added In:** 19.1.4
    #
    # **SCIM++ Properties:**
    #  - idcsSearchable: true
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: request
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::AppIdentityBridges>]
    attr_accessor :identity_bridges

    # @return [OCI::IdentityDomains::Models::AppConnectorBundle]
    attr_accessor :connector_bundle

    # ConnectorBundle configuration properties
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [name]
    #  - idcsSearchable: true
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::AppBundleConfigurationProperties>]
    attr_accessor :bundle_configuration_properties

    # Object classes
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [value]
    #  - idcsSearchable: true
    #  - multiValued: true
    #  - mutability: readOnly
    #  - required: false
    #  - returned: default
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::AppObjectClasses>]
    attr_accessor :object_classes

    # @return [OCI::IdentityDomains::Models::AppBundlePoolConfiguration]
    attr_accessor :bundle_pool_configuration

    # @return [OCI::IdentityDomains::Models::AppFlatFileConnectorBundle]
    attr_accessor :flat_file_connector_bundle

    # Flat file connector bundle configuration properties
    #
    # **SCIM++ Properties:**
    #  - idcsCompositeKey: [name]
    #  - idcsSearchable: true
    #  - multiValued: true
    #  - mutability: readWrite
    #  - required: false
    #  - returned: default
    #  - type: complex
    #  - uniqueness: none
    # @return [Array<OCI::IdentityDomains::Models::AppFlatFileBundleConfigurationProperties>]
    attr_accessor :flat_file_bundle_configuration_properties

    # @return [OCI::IdentityDomains::Models::AppThreeLeggedOAuthCredential]
    attr_accessor :three_legged_o_auth_credential

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        # rubocop:disable Style/SymbolLiteral
        'connected': :'connected',
        'can_be_authoritative': :'canBeAuthoritative',
        'is_authoritative': :'isAuthoritative',
        'is_on_premise_app': :'isOnPremiseApp',
        'is_directory': :'isDirectory',
        'is_schema_discovery_supported': :'isSchemaDiscoverySupported',
        'is_schema_customization_supported': :'isSchemaCustomizationSupported',
        'enable_sync': :'enableSync',
        'enable_sync_summary_report_notification': :'enableSyncSummaryReportNotification',
        'enable_auth_sync_new_user_notification': :'enableAuthSyncNewUserNotification',
        'admin_consent_granted': :'adminConsentGranted',
        'is_three_legged_o_auth_enabled': :'isThreeLeggedOAuthEnabled',
        'is_two_legged_o_auth_enabled': :'isTwoLeggedOAuthEnabled',
        'three_legged_o_auth_provider_name': :'threeLeggedOAuthProviderName',
        'sync_config_last_modified': :'syncConfigLastModified',
        'account_form_visible': :'accountFormVisible',
        'identity_bridges': :'identityBridges',
        'connector_bundle': :'connectorBundle',
        'bundle_configuration_properties': :'bundleConfigurationProperties',
        'object_classes': :'objectClasses',
        'bundle_pool_configuration': :'bundlePoolConfiguration',
        'flat_file_connector_bundle': :'flatFileConnectorBundle',
        'flat_file_bundle_configuration_properties': :'flatFileBundleConfigurationProperties',
        'three_legged_o_auth_credential': :'threeLeggedOAuthCredential'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        # rubocop:disable Style/SymbolLiteral
        'connected': :'BOOLEAN',
        'can_be_authoritative': :'BOOLEAN',
        'is_authoritative': :'BOOLEAN',
        'is_on_premise_app': :'BOOLEAN',
        'is_directory': :'BOOLEAN',
        'is_schema_discovery_supported': :'BOOLEAN',
        'is_schema_customization_supported': :'BOOLEAN',
        'enable_sync': :'BOOLEAN',
        'enable_sync_summary_report_notification': :'BOOLEAN',
        'enable_auth_sync_new_user_notification': :'BOOLEAN',
        'admin_consent_granted': :'BOOLEAN',
        'is_three_legged_o_auth_enabled': :'BOOLEAN',
        'is_two_legged_o_auth_enabled': :'BOOLEAN',
        'three_legged_o_auth_provider_name': :'String',
        'sync_config_last_modified': :'String',
        'account_form_visible': :'BOOLEAN',
        'identity_bridges': :'Array<OCI::IdentityDomains::Models::AppIdentityBridges>',
        'connector_bundle': :'OCI::IdentityDomains::Models::AppConnectorBundle',
        'bundle_configuration_properties': :'Array<OCI::IdentityDomains::Models::AppBundleConfigurationProperties>',
        'object_classes': :'Array<OCI::IdentityDomains::Models::AppObjectClasses>',
        'bundle_pool_configuration': :'OCI::IdentityDomains::Models::AppBundlePoolConfiguration',
        'flat_file_connector_bundle': :'OCI::IdentityDomains::Models::AppFlatFileConnectorBundle',
        'flat_file_bundle_configuration_properties': :'Array<OCI::IdentityDomains::Models::AppFlatFileBundleConfigurationProperties>',
        'three_legged_o_auth_credential': :'OCI::IdentityDomains::Models::AppThreeLeggedOAuthCredential'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral


    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    # @option attributes [BOOLEAN] :connected The value to assign to the {#connected} property
    # @option attributes [BOOLEAN] :can_be_authoritative The value to assign to the {#can_be_authoritative} property
    # @option attributes [BOOLEAN] :is_authoritative The value to assign to the {#is_authoritative} property
    # @option attributes [BOOLEAN] :is_on_premise_app The value to assign to the {#is_on_premise_app} property
    # @option attributes [BOOLEAN] :is_directory The value to assign to the {#is_directory} property
    # @option attributes [BOOLEAN] :is_schema_discovery_supported The value to assign to the {#is_schema_discovery_supported} property
    # @option attributes [BOOLEAN] :is_schema_customization_supported The value to assign to the {#is_schema_customization_supported} property
    # @option attributes [BOOLEAN] :enable_sync The value to assign to the {#enable_sync} property
    # @option attributes [BOOLEAN] :enable_sync_summary_report_notification The value to assign to the {#enable_sync_summary_report_notification} property
    # @option attributes [BOOLEAN] :enable_auth_sync_new_user_notification The value to assign to the {#enable_auth_sync_new_user_notification} property
    # @option attributes [BOOLEAN] :admin_consent_granted The value to assign to the {#admin_consent_granted} property
    # @option attributes [BOOLEAN] :is_three_legged_o_auth_enabled The value to assign to the {#is_three_legged_o_auth_enabled} property
    # @option attributes [BOOLEAN] :is_two_legged_o_auth_enabled The value to assign to the {#is_two_legged_o_auth_enabled} property
    # @option attributes [String] :three_legged_o_auth_provider_name The value to assign to the {#three_legged_o_auth_provider_name} property
    # @option attributes [String] :sync_config_last_modified The value to assign to the {#sync_config_last_modified} property
    # @option attributes [BOOLEAN] :account_form_visible The value to assign to the {#account_form_visible} property
    # @option attributes [Array<OCI::IdentityDomains::Models::AppIdentityBridges>] :identity_bridges The value to assign to the {#identity_bridges} property
    # @option attributes [OCI::IdentityDomains::Models::AppConnectorBundle] :connector_bundle The value to assign to the {#connector_bundle} property
    # @option attributes [Array<OCI::IdentityDomains::Models::AppBundleConfigurationProperties>] :bundle_configuration_properties The value to assign to the {#bundle_configuration_properties} property
    # @option attributes [Array<OCI::IdentityDomains::Models::AppObjectClasses>] :object_classes The value to assign to the {#object_classes} property
    # @option attributes [OCI::IdentityDomains::Models::AppBundlePoolConfiguration] :bundle_pool_configuration The value to assign to the {#bundle_pool_configuration} property
    # @option attributes [OCI::IdentityDomains::Models::AppFlatFileConnectorBundle] :flat_file_connector_bundle The value to assign to the {#flat_file_connector_bundle} property
    # @option attributes [Array<OCI::IdentityDomains::Models::AppFlatFileBundleConfigurationProperties>] :flat_file_bundle_configuration_properties The value to assign to the {#flat_file_bundle_configuration_properties} property
    # @option attributes [OCI::IdentityDomains::Models::AppThreeLeggedOAuthCredential] :three_legged_o_auth_credential The value to assign to the {#three_legged_o_auth_credential} property
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      self.connected = attributes[:'connected'] unless attributes[:'connected'].nil?

      self.can_be_authoritative = attributes[:'canBeAuthoritative'] unless attributes[:'canBeAuthoritative'].nil?

      raise 'You cannot provide both :canBeAuthoritative and :can_be_authoritative' if attributes.key?(:'canBeAuthoritative') && attributes.key?(:'can_be_authoritative')

      self.can_be_authoritative = attributes[:'can_be_authoritative'] unless attributes[:'can_be_authoritative'].nil?

      self.is_authoritative = attributes[:'isAuthoritative'] unless attributes[:'isAuthoritative'].nil?

      raise 'You cannot provide both :isAuthoritative and :is_authoritative' if attributes.key?(:'isAuthoritative') && attributes.key?(:'is_authoritative')

      self.is_authoritative = attributes[:'is_authoritative'] unless attributes[:'is_authoritative'].nil?

      self.is_on_premise_app = attributes[:'isOnPremiseApp'] unless attributes[:'isOnPremiseApp'].nil?

      raise 'You cannot provide both :isOnPremiseApp and :is_on_premise_app' if attributes.key?(:'isOnPremiseApp') && attributes.key?(:'is_on_premise_app')

      self.is_on_premise_app = attributes[:'is_on_premise_app'] unless attributes[:'is_on_premise_app'].nil?

      self.is_directory = attributes[:'isDirectory'] unless attributes[:'isDirectory'].nil?

      raise 'You cannot provide both :isDirectory and :is_directory' if attributes.key?(:'isDirectory') && attributes.key?(:'is_directory')

      self.is_directory = attributes[:'is_directory'] unless attributes[:'is_directory'].nil?

      self.is_schema_discovery_supported = attributes[:'isSchemaDiscoverySupported'] unless attributes[:'isSchemaDiscoverySupported'].nil?

      raise 'You cannot provide both :isSchemaDiscoverySupported and :is_schema_discovery_supported' if attributes.key?(:'isSchemaDiscoverySupported') && attributes.key?(:'is_schema_discovery_supported')

      self.is_schema_discovery_supported = attributes[:'is_schema_discovery_supported'] unless attributes[:'is_schema_discovery_supported'].nil?

      self.is_schema_customization_supported = attributes[:'isSchemaCustomizationSupported'] unless attributes[:'isSchemaCustomizationSupported'].nil?

      raise 'You cannot provide both :isSchemaCustomizationSupported and :is_schema_customization_supported' if attributes.key?(:'isSchemaCustomizationSupported') && attributes.key?(:'is_schema_customization_supported')

      self.is_schema_customization_supported = attributes[:'is_schema_customization_supported'] unless attributes[:'is_schema_customization_supported'].nil?

      self.enable_sync = attributes[:'enableSync'] unless attributes[:'enableSync'].nil?

      raise 'You cannot provide both :enableSync and :enable_sync' if attributes.key?(:'enableSync') && attributes.key?(:'enable_sync')

      self.enable_sync = attributes[:'enable_sync'] unless attributes[:'enable_sync'].nil?

      self.enable_sync_summary_report_notification = attributes[:'enableSyncSummaryReportNotification'] unless attributes[:'enableSyncSummaryReportNotification'].nil?

      raise 'You cannot provide both :enableSyncSummaryReportNotification and :enable_sync_summary_report_notification' if attributes.key?(:'enableSyncSummaryReportNotification') && attributes.key?(:'enable_sync_summary_report_notification')

      self.enable_sync_summary_report_notification = attributes[:'enable_sync_summary_report_notification'] unless attributes[:'enable_sync_summary_report_notification'].nil?

      self.enable_auth_sync_new_user_notification = attributes[:'enableAuthSyncNewUserNotification'] unless attributes[:'enableAuthSyncNewUserNotification'].nil?

      raise 'You cannot provide both :enableAuthSyncNewUserNotification and :enable_auth_sync_new_user_notification' if attributes.key?(:'enableAuthSyncNewUserNotification') && attributes.key?(:'enable_auth_sync_new_user_notification')

      self.enable_auth_sync_new_user_notification = attributes[:'enable_auth_sync_new_user_notification'] unless attributes[:'enable_auth_sync_new_user_notification'].nil?

      self.admin_consent_granted = attributes[:'adminConsentGranted'] unless attributes[:'adminConsentGranted'].nil?

      raise 'You cannot provide both :adminConsentGranted and :admin_consent_granted' if attributes.key?(:'adminConsentGranted') && attributes.key?(:'admin_consent_granted')

      self.admin_consent_granted = attributes[:'admin_consent_granted'] unless attributes[:'admin_consent_granted'].nil?

      self.is_three_legged_o_auth_enabled = attributes[:'isThreeLeggedOAuthEnabled'] unless attributes[:'isThreeLeggedOAuthEnabled'].nil?

      raise 'You cannot provide both :isThreeLeggedOAuthEnabled and :is_three_legged_o_auth_enabled' if attributes.key?(:'isThreeLeggedOAuthEnabled') && attributes.key?(:'is_three_legged_o_auth_enabled')

      self.is_three_legged_o_auth_enabled = attributes[:'is_three_legged_o_auth_enabled'] unless attributes[:'is_three_legged_o_auth_enabled'].nil?

      self.is_two_legged_o_auth_enabled = attributes[:'isTwoLeggedOAuthEnabled'] unless attributes[:'isTwoLeggedOAuthEnabled'].nil?

      raise 'You cannot provide both :isTwoLeggedOAuthEnabled and :is_two_legged_o_auth_enabled' if attributes.key?(:'isTwoLeggedOAuthEnabled') && attributes.key?(:'is_two_legged_o_auth_enabled')

      self.is_two_legged_o_auth_enabled = attributes[:'is_two_legged_o_auth_enabled'] unless attributes[:'is_two_legged_o_auth_enabled'].nil?

      self.three_legged_o_auth_provider_name = attributes[:'threeLeggedOAuthProviderName'] if attributes[:'threeLeggedOAuthProviderName']

      raise 'You cannot provide both :threeLeggedOAuthProviderName and :three_legged_o_auth_provider_name' if attributes.key?(:'threeLeggedOAuthProviderName') && attributes.key?(:'three_legged_o_auth_provider_name')

      self.three_legged_o_auth_provider_name = attributes[:'three_legged_o_auth_provider_name'] if attributes[:'three_legged_o_auth_provider_name']

      self.sync_config_last_modified = attributes[:'syncConfigLastModified'] if attributes[:'syncConfigLastModified']

      raise 'You cannot provide both :syncConfigLastModified and :sync_config_last_modified' if attributes.key?(:'syncConfigLastModified') && attributes.key?(:'sync_config_last_modified')

      self.sync_config_last_modified = attributes[:'sync_config_last_modified'] if attributes[:'sync_config_last_modified']

      self.account_form_visible = attributes[:'accountFormVisible'] unless attributes[:'accountFormVisible'].nil?

      raise 'You cannot provide both :accountFormVisible and :account_form_visible' if attributes.key?(:'accountFormVisible') && attributes.key?(:'account_form_visible')

      self.account_form_visible = attributes[:'account_form_visible'] unless attributes[:'account_form_visible'].nil?

      self.identity_bridges = attributes[:'identityBridges'] if attributes[:'identityBridges']

      raise 'You cannot provide both :identityBridges and :identity_bridges' if attributes.key?(:'identityBridges') && attributes.key?(:'identity_bridges')

      self.identity_bridges = attributes[:'identity_bridges'] if attributes[:'identity_bridges']

      self.connector_bundle = attributes[:'connectorBundle'] if attributes[:'connectorBundle']

      raise 'You cannot provide both :connectorBundle and :connector_bundle' if attributes.key?(:'connectorBundle') && attributes.key?(:'connector_bundle')

      self.connector_bundle = attributes[:'connector_bundle'] if attributes[:'connector_bundle']

      self.bundle_configuration_properties = attributes[:'bundleConfigurationProperties'] if attributes[:'bundleConfigurationProperties']

      raise 'You cannot provide both :bundleConfigurationProperties and :bundle_configuration_properties' if attributes.key?(:'bundleConfigurationProperties') && attributes.key?(:'bundle_configuration_properties')

      self.bundle_configuration_properties = attributes[:'bundle_configuration_properties'] if attributes[:'bundle_configuration_properties']

      self.object_classes = attributes[:'objectClasses'] if attributes[:'objectClasses']

      raise 'You cannot provide both :objectClasses and :object_classes' if attributes.key?(:'objectClasses') && attributes.key?(:'object_classes')

      self.object_classes = attributes[:'object_classes'] if attributes[:'object_classes']

      self.bundle_pool_configuration = attributes[:'bundlePoolConfiguration'] if attributes[:'bundlePoolConfiguration']

      raise 'You cannot provide both :bundlePoolConfiguration and :bundle_pool_configuration' if attributes.key?(:'bundlePoolConfiguration') && attributes.key?(:'bundle_pool_configuration')

      self.bundle_pool_configuration = attributes[:'bundle_pool_configuration'] if attributes[:'bundle_pool_configuration']

      self.flat_file_connector_bundle = attributes[:'flatFileConnectorBundle'] if attributes[:'flatFileConnectorBundle']

      raise 'You cannot provide both :flatFileConnectorBundle and :flat_file_connector_bundle' if attributes.key?(:'flatFileConnectorBundle') && attributes.key?(:'flat_file_connector_bundle')

      self.flat_file_connector_bundle = attributes[:'flat_file_connector_bundle'] if attributes[:'flat_file_connector_bundle']

      self.flat_file_bundle_configuration_properties = attributes[:'flatFileBundleConfigurationProperties'] if attributes[:'flatFileBundleConfigurationProperties']

      raise 'You cannot provide both :flatFileBundleConfigurationProperties and :flat_file_bundle_configuration_properties' if attributes.key?(:'flatFileBundleConfigurationProperties') && attributes.key?(:'flat_file_bundle_configuration_properties')

      self.flat_file_bundle_configuration_properties = attributes[:'flat_file_bundle_configuration_properties'] if attributes[:'flat_file_bundle_configuration_properties']

      self.three_legged_o_auth_credential = attributes[:'threeLeggedOAuthCredential'] if attributes[:'threeLeggedOAuthCredential']

      raise 'You cannot provide both :threeLeggedOAuthCredential and :three_legged_o_auth_credential' if attributes.key?(:'threeLeggedOAuthCredential') && attributes.key?(:'three_legged_o_auth_credential')

      self.three_legged_o_auth_credential = attributes[:'three_legged_o_auth_credential'] if attributes[:'three_legged_o_auth_credential']
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines


    # Checks equality by comparing each attribute.
    # @param [Object] other the other object to be compared
    def ==(other)
      return true if equal?(other)

      self.class == other.class &&
        connected == other.connected &&
        can_be_authoritative == other.can_be_authoritative &&
        is_authoritative == other.is_authoritative &&
        is_on_premise_app == other.is_on_premise_app &&
        is_directory == other.is_directory &&
        is_schema_discovery_supported == other.is_schema_discovery_supported &&
        is_schema_customization_supported == other.is_schema_customization_supported &&
        enable_sync == other.enable_sync &&
        enable_sync_summary_report_notification == other.enable_sync_summary_report_notification &&
        enable_auth_sync_new_user_notification == other.enable_auth_sync_new_user_notification &&
        admin_consent_granted == other.admin_consent_granted &&
        is_three_legged_o_auth_enabled == other.is_three_legged_o_auth_enabled &&
        is_two_legged_o_auth_enabled == other.is_two_legged_o_auth_enabled &&
        three_legged_o_auth_provider_name == other.three_legged_o_auth_provider_name &&
        sync_config_last_modified == other.sync_config_last_modified &&
        account_form_visible == other.account_form_visible &&
        identity_bridges == other.identity_bridges &&
        connector_bundle == other.connector_bundle &&
        bundle_configuration_properties == other.bundle_configuration_properties &&
        object_classes == other.object_classes &&
        bundle_pool_configuration == other.bundle_pool_configuration &&
        flat_file_connector_bundle == other.flat_file_connector_bundle &&
        flat_file_bundle_configuration_properties == other.flat_file_bundle_configuration_properties &&
        three_legged_o_auth_credential == other.three_legged_o_auth_credential
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines

    # @see the `==` method
    # @param [Object] other the other object to be compared
    def eql?(other)
      self == other
    end

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [connected, can_be_authoritative, is_authoritative, is_on_premise_app, is_directory, is_schema_discovery_supported, is_schema_customization_supported, enable_sync, enable_sync_summary_report_notification, enable_auth_sync_new_user_notification, admin_consent_granted, is_three_legged_o_auth_enabled, is_two_legged_o_auth_enabled, three_legged_o_auth_provider_name, sync_config_last_modified, account_form_visible, identity_bridges, connector_bundle, bundle_configuration_properties, object_classes, bundle_pool_configuration, flat_file_connector_bundle, flat_file_bundle_configuration_properties, three_legged_o_auth_credential].hash
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)

      self.class.swagger_types.each_pair do |key, type|
        if type =~ /^Array<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            public_method("#{key}=").call(
              attributes[self.class.attribute_map[key]]
                .map { |v| OCI::Internal::Util.convert_to_type(Regexp.last_match(1), v) }
            )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          public_method("#{key}=").call(
            OCI::Internal::Util.convert_to_type(type, attributes[self.class.attribute_map[key]])
          )
        end
        # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = public_method(attr).call
        next if value.nil? && !instance_variable_defined?("@#{attr}")

        hash[param] = _to_hash(value)
      end
      hash
    end

    private

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
# rubocop:enable Lint/UnneededCopDisableDirective, Metrics/LineLength
