# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20190415
require 'date'
require 'logger'

# rubocop:disable Lint/UnneededCopDisableDirective, Metrics/LineLength
module OCI
  # User-defined service variables.
  class Mysql::Models::ConfigurationVariables
    COMPLETION_TYPE_ENUM = [
      COMPLETION_TYPE_NO_CHAIN = 'NO_CHAIN'.freeze,
      COMPLETION_TYPE_CHAIN = 'CHAIN'.freeze,
      COMPLETION_TYPE_RELEASE = 'RELEASE'.freeze,
      COMPLETION_TYPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    CHARACTER_SET_SERVER_ENUM = [
      CHARACTER_SET_SERVER_ARMSCII8 = 'ARMSCII8'.freeze,
      CHARACTER_SET_SERVER_ASCII = 'ASCII'.freeze,
      CHARACTER_SET_SERVER_BIG5 = 'BIG5'.freeze,
      CHARACTER_SET_SERVER_BINARY = 'BINARY'.freeze,
      CHARACTER_SET_SERVER_CP1250 = 'CP1250'.freeze,
      CHARACTER_SET_SERVER_CP1251 = 'CP1251'.freeze,
      CHARACTER_SET_SERVER_CP1256 = 'CP1256'.freeze,
      CHARACTER_SET_SERVER_CP1257 = 'CP1257'.freeze,
      CHARACTER_SET_SERVER_CP850 = 'CP850'.freeze,
      CHARACTER_SET_SERVER_CP852 = 'CP852'.freeze,
      CHARACTER_SET_SERVER_CP866 = 'CP866'.freeze,
      CHARACTER_SET_SERVER_CP932 = 'CP932'.freeze,
      CHARACTER_SET_SERVER_DEC8 = 'DEC8'.freeze,
      CHARACTER_SET_SERVER_EUCJPMS = 'EUCJPMS'.freeze,
      CHARACTER_SET_SERVER_EUCKR = 'EUCKR'.freeze,
      CHARACTER_SET_SERVER_GB18030 = 'GB18030'.freeze,
      CHARACTER_SET_SERVER_GB2312 = 'GB2312'.freeze,
      CHARACTER_SET_SERVER_GBK = 'GBK'.freeze,
      CHARACTER_SET_SERVER_GEOSTD8 = 'GEOSTD8'.freeze,
      CHARACTER_SET_SERVER_GREEK = 'GREEK'.freeze,
      CHARACTER_SET_SERVER_HEBREW = 'HEBREW'.freeze,
      CHARACTER_SET_SERVER_HP8 = 'HP8'.freeze,
      CHARACTER_SET_SERVER_KEYBCS2 = 'KEYBCS2'.freeze,
      CHARACTER_SET_SERVER_KOI8_R = 'KOI8R'.freeze,
      CHARACTER_SET_SERVER_KOI8_U = 'KOI8U'.freeze,
      CHARACTER_SET_SERVER_LATIN1 = 'LATIN1'.freeze,
      CHARACTER_SET_SERVER_LATIN2 = 'LATIN2'.freeze,
      CHARACTER_SET_SERVER_LATIN5 = 'LATIN5'.freeze,
      CHARACTER_SET_SERVER_LATIN7 = 'LATIN7'.freeze,
      CHARACTER_SET_SERVER_MACCE = 'MACCE'.freeze,
      CHARACTER_SET_SERVER_MACROMAN = 'MACROMAN'.freeze,
      CHARACTER_SET_SERVER_SJIS = 'SJIS'.freeze,
      CHARACTER_SET_SERVER_SWE7 = 'SWE7'.freeze,
      CHARACTER_SET_SERVER_TIS620 = 'TIS620'.freeze,
      CHARACTER_SET_SERVER_UCS2 = 'UCS2'.freeze,
      CHARACTER_SET_SERVER_UJIS = 'UJIS'.freeze,
      CHARACTER_SET_SERVER_UTF16 = 'UTF16'.freeze,
      CHARACTER_SET_SERVER_UTF16_LE = 'UTF16LE'.freeze,
      CHARACTER_SET_SERVER_UTF32 = 'UTF32'.freeze,
      CHARACTER_SET_SERVER_UTF8_MB3 = 'UTF8MB3'.freeze,
      CHARACTER_SET_SERVER_UTF8_MB4 = 'UTF8MB4'.freeze,
      CHARACTER_SET_SERVER_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    COLLATION_SERVER_ENUM = [
      COLLATION_SERVER_ARMSCII8_GENERAL_CI = 'ARMSCII8_GENERAL_CI'.freeze,
      COLLATION_SERVER_ARMSCII8_BIN = 'ARMSCII8_BIN'.freeze,
      COLLATION_SERVER_ASCII_GENERAL_CI = 'ASCII_GENERAL_CI'.freeze,
      COLLATION_SERVER_ASCII_BIN = 'ASCII_BIN'.freeze,
      COLLATION_SERVER_BIG5_CHINESE_CI = 'BIG5_CHINESE_CI'.freeze,
      COLLATION_SERVER_BIG5_BIN = 'BIG5_BIN'.freeze,
      COLLATION_SERVER_BINARY = 'BINARY'.freeze,
      COLLATION_SERVER_CP1250_GENERAL_CI = 'CP1250_GENERAL_CI'.freeze,
      COLLATION_SERVER_CP1250_BIN = 'CP1250_BIN'.freeze,
      COLLATION_SERVER_CP1250_CROATIAN_CI = 'CP1250_CROATIAN_CI'.freeze,
      COLLATION_SERVER_CP1250_CZECH_CS = 'CP1250_CZECH_CS'.freeze,
      COLLATION_SERVER_CP1250_POLISH_CI = 'CP1250_POLISH_CI'.freeze,
      COLLATION_SERVER_CP1251_GENERAL_CI = 'CP1251_GENERAL_CI'.freeze,
      COLLATION_SERVER_CP1251_BIN = 'CP1251_BIN'.freeze,
      COLLATION_SERVER_CP1251_BULGARIAN_CI = 'CP1251_BULGARIAN_CI'.freeze,
      COLLATION_SERVER_CP1251_GENERAL_CS = 'CP1251_GENERAL_CS'.freeze,
      COLLATION_SERVER_CP1251_UKRAINIAN_CI = 'CP1251_UKRAINIAN_CI'.freeze,
      COLLATION_SERVER_CP1256_GENERAL_CI = 'CP1256_GENERAL_CI'.freeze,
      COLLATION_SERVER_CP1256_BIN = 'CP1256_BIN'.freeze,
      COLLATION_SERVER_CP1257_GENERAL_CI = 'CP1257_GENERAL_CI'.freeze,
      COLLATION_SERVER_CP1257_BIN = 'CP1257_BIN'.freeze,
      COLLATION_SERVER_CP1257_LITHUANIAN_CI = 'CP1257_LITHUANIAN_CI'.freeze,
      COLLATION_SERVER_CP850_GENERAL_CI = 'CP850_GENERAL_CI'.freeze,
      COLLATION_SERVER_CP850_BIN = 'CP850_BIN'.freeze,
      COLLATION_SERVER_CP852_GENERAL_CI = 'CP852_GENERAL_CI'.freeze,
      COLLATION_SERVER_CP852_BIN = 'CP852_BIN'.freeze,
      COLLATION_SERVER_CP866_GENERAL_CI = 'CP866_GENERAL_CI'.freeze,
      COLLATION_SERVER_CP866_BIN = 'CP866_BIN'.freeze,
      COLLATION_SERVER_CP932_JAPANESE_CI = 'CP932_JAPANESE_CI'.freeze,
      COLLATION_SERVER_CP932_BIN = 'CP932_BIN'.freeze,
      COLLATION_SERVER_DEC8_SWEDISH_CI = 'DEC8_SWEDISH_CI'.freeze,
      COLLATION_SERVER_DEC8_BIN = 'DEC8_BIN'.freeze,
      COLLATION_SERVER_EUCJPMS_JAPANESE_CI = 'EUCJPMS_JAPANESE_CI'.freeze,
      COLLATION_SERVER_EUCJPMS_BIN = 'EUCJPMS_BIN'.freeze,
      COLLATION_SERVER_EUCKR_KOREAN_CI = 'EUCKR_KOREAN_CI'.freeze,
      COLLATION_SERVER_EUCKR_BIN = 'EUCKR_BIN'.freeze,
      COLLATION_SERVER_GB18030_CHINESE_CI = 'GB18030_CHINESE_CI'.freeze,
      COLLATION_SERVER_GB18030_BIN = 'GB18030_BIN'.freeze,
      COLLATION_SERVER_GB18030_UNICODE_520_CI = 'GB18030_UNICODE_520_CI'.freeze,
      COLLATION_SERVER_GB2312_CHINESE_CI = 'GB2312_CHINESE_CI'.freeze,
      COLLATION_SERVER_GB2312_BIN = 'GB2312_BIN'.freeze,
      COLLATION_SERVER_GBK_CHINESE_CI = 'GBK_CHINESE_CI'.freeze,
      COLLATION_SERVER_GBK_BIN = 'GBK_BIN'.freeze,
      COLLATION_SERVER_GEOSTD8_GENERAL_CI = 'GEOSTD8_GENERAL_CI'.freeze,
      COLLATION_SERVER_GEOSTD8_BIN = 'GEOSTD8_BIN'.freeze,
      COLLATION_SERVER_GREEK_GENERAL_CI = 'GREEK_GENERAL_CI'.freeze,
      COLLATION_SERVER_GREEK_BIN = 'GREEK_BIN'.freeze,
      COLLATION_SERVER_HEBREW_GENERAL_CI = 'HEBREW_GENERAL_CI'.freeze,
      COLLATION_SERVER_HEBREW_BIN = 'HEBREW_BIN'.freeze,
      COLLATION_SERVER_HP8_ENGLISH_CI = 'HP8_ENGLISH_CI'.freeze,
      COLLATION_SERVER_HP8_BIN = 'HP8_BIN'.freeze,
      COLLATION_SERVER_KEYBCS2_GENERAL_CI = 'KEYBCS2_GENERAL_CI'.freeze,
      COLLATION_SERVER_KEYBCS2_BIN = 'KEYBCS2_BIN'.freeze,
      COLLATION_SERVER_KOI8_R_GENERAL_CI = 'KOI8R_GENERAL_CI'.freeze,
      COLLATION_SERVER_KOI8_R_BIN = 'KOI8R_BIN'.freeze,
      COLLATION_SERVER_KOI8_U_GENERAL_CI = 'KOI8U_GENERAL_CI'.freeze,
      COLLATION_SERVER_KOI8_U_BIN = 'KOI8U_BIN'.freeze,
      COLLATION_SERVER_LATIN1_SWEDISH_CI = 'LATIN1_SWEDISH_CI'.freeze,
      COLLATION_SERVER_LATIN1_BIN = 'LATIN1_BIN'.freeze,
      COLLATION_SERVER_LATIN1_DANISH_CI = 'LATIN1_DANISH_CI'.freeze,
      COLLATION_SERVER_LATIN1_GENERAL_CI = 'LATIN1_GENERAL_CI'.freeze,
      COLLATION_SERVER_LATIN1_GENERAL_CS = 'LATIN1_GENERAL_CS'.freeze,
      COLLATION_SERVER_LATIN1_GERMAN1_CI = 'LATIN1_GERMAN1_CI'.freeze,
      COLLATION_SERVER_LATIN1_GERMAN2_CI = 'LATIN1_GERMAN2_CI'.freeze,
      COLLATION_SERVER_LATIN1_SPANISH_CI = 'LATIN1_SPANISH_CI'.freeze,
      COLLATION_SERVER_LATIN2_GENERAL_CI = 'LATIN2_GENERAL_CI'.freeze,
      COLLATION_SERVER_LATIN2_BIN = 'LATIN2_BIN'.freeze,
      COLLATION_SERVER_LATIN2_CROATIAN_CI = 'LATIN2_CROATIAN_CI'.freeze,
      COLLATION_SERVER_LATIN2_CZECH_CS = 'LATIN2_CZECH_CS'.freeze,
      COLLATION_SERVER_LATIN2_HUNGARIAN_CI = 'LATIN2_HUNGARIAN_CI'.freeze,
      COLLATION_SERVER_LATIN5_TURKISH_CI = 'LATIN5_TURKISH_CI'.freeze,
      COLLATION_SERVER_LATIN5_BIN = 'LATIN5_BIN'.freeze,
      COLLATION_SERVER_LATIN7_GENERAL_CI = 'LATIN7_GENERAL_CI'.freeze,
      COLLATION_SERVER_LATIN7_BIN = 'LATIN7_BIN'.freeze,
      COLLATION_SERVER_LATIN7_ESTONIAN_CS = 'LATIN7_ESTONIAN_CS'.freeze,
      COLLATION_SERVER_LATIN7_GENERAL_CS = 'LATIN7_GENERAL_CS'.freeze,
      COLLATION_SERVER_MACCE_GENERAL_CI = 'MACCE_GENERAL_CI'.freeze,
      COLLATION_SERVER_MACCE_BIN = 'MACCE_BIN'.freeze,
      COLLATION_SERVER_MACROMAN_GENERAL_CI = 'MACROMAN_GENERAL_CI'.freeze,
      COLLATION_SERVER_MACROMAN_BIN = 'MACROMAN_BIN'.freeze,
      COLLATION_SERVER_SJIS_JAPANESE_CI = 'SJIS_JAPANESE_CI'.freeze,
      COLLATION_SERVER_SJIS_BIN = 'SJIS_BIN'.freeze,
      COLLATION_SERVER_SWE7_SWEDISH_CI = 'SWE7_SWEDISH_CI'.freeze,
      COLLATION_SERVER_SWE7_BIN = 'SWE7_BIN'.freeze,
      COLLATION_SERVER_TIS620_THAI_CI = 'TIS620_THAI_CI'.freeze,
      COLLATION_SERVER_TIS620_BIN = 'TIS620_BIN'.freeze,
      COLLATION_SERVER_UCS2_GENERAL_CI = 'UCS2_GENERAL_CI'.freeze,
      COLLATION_SERVER_UCS2_BIN = 'UCS2_BIN'.freeze,
      COLLATION_SERVER_UCS2_CROATIAN_CI = 'UCS2_CROATIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_CZECH_CI = 'UCS2_CZECH_CI'.freeze,
      COLLATION_SERVER_UCS2_DANISH_CI = 'UCS2_DANISH_CI'.freeze,
      COLLATION_SERVER_UCS2_ESPERANTO_CI = 'UCS2_ESPERANTO_CI'.freeze,
      COLLATION_SERVER_UCS2_ESTONIAN_CI = 'UCS2_ESTONIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_GENERAL_MYSQL500_CI = 'UCS2_GENERAL_MYSQL500_CI'.freeze,
      COLLATION_SERVER_UCS2_GERMAN2_CI = 'UCS2_GERMAN2_CI'.freeze,
      COLLATION_SERVER_UCS2_HUNGARIAN_CI = 'UCS2_HUNGARIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_ICELANDIC_CI = 'UCS2_ICELANDIC_CI'.freeze,
      COLLATION_SERVER_UCS2_LATVIAN_CI = 'UCS2_LATVIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_LITHUANIAN_CI = 'UCS2_LITHUANIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_PERSIAN_CI = 'UCS2_PERSIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_POLISH_CI = 'UCS2_POLISH_CI'.freeze,
      COLLATION_SERVER_UCS2_ROMANIAN_CI = 'UCS2_ROMANIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_ROMAN_CI = 'UCS2_ROMAN_CI'.freeze,
      COLLATION_SERVER_UCS2_SINHALA_CI = 'UCS2_SINHALA_CI'.freeze,
      COLLATION_SERVER_UCS2_SLOVAK_CI = 'UCS2_SLOVAK_CI'.freeze,
      COLLATION_SERVER_UCS2_SLOVENIAN_CI = 'UCS2_SLOVENIAN_CI'.freeze,
      COLLATION_SERVER_UCS2_SPANISH2_CI = 'UCS2_SPANISH2_CI'.freeze,
      COLLATION_SERVER_UCS2_SPANISH_CI = 'UCS2_SPANISH_CI'.freeze,
      COLLATION_SERVER_UCS2_SWEDISH_CI = 'UCS2_SWEDISH_CI'.freeze,
      COLLATION_SERVER_UCS2_TURKISH_CI = 'UCS2_TURKISH_CI'.freeze,
      COLLATION_SERVER_UCS2_UNICODE_520_CI = 'UCS2_UNICODE_520_CI'.freeze,
      COLLATION_SERVER_UCS2_UNICODE_CI = 'UCS2_UNICODE_CI'.freeze,
      COLLATION_SERVER_UCS2_VIETNAMESE_CI = 'UCS2_VIETNAMESE_CI'.freeze,
      COLLATION_SERVER_UJIS_JAPANESE_CI = 'UJIS_JAPANESE_CI'.freeze,
      COLLATION_SERVER_UJIS_BIN = 'UJIS_BIN'.freeze,
      COLLATION_SERVER_UTF16_GENERAL_CI = 'UTF16_GENERAL_CI'.freeze,
      COLLATION_SERVER_UTF16_BIN = 'UTF16_BIN'.freeze,
      COLLATION_SERVER_UTF16_CROATIAN_CI = 'UTF16_CROATIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_CZECH_CI = 'UTF16_CZECH_CI'.freeze,
      COLLATION_SERVER_UTF16_DANISH_CI = 'UTF16_DANISH_CI'.freeze,
      COLLATION_SERVER_UTF16_ESPERANTO_CI = 'UTF16_ESPERANTO_CI'.freeze,
      COLLATION_SERVER_UTF16_ESTONIAN_CI = 'UTF16_ESTONIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_GERMAN2_CI = 'UTF16_GERMAN2_CI'.freeze,
      COLLATION_SERVER_UTF16_HUNGARIAN_CI = 'UTF16_HUNGARIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_ICELANDIC_CI = 'UTF16_ICELANDIC_CI'.freeze,
      COLLATION_SERVER_UTF16_LATVIAN_CI = 'UTF16_LATVIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_LITHUANIAN_CI = 'UTF16_LITHUANIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_PERSIAN_CI = 'UTF16_PERSIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_POLISH_CI = 'UTF16_POLISH_CI'.freeze,
      COLLATION_SERVER_UTF16_ROMANIAN_CI = 'UTF16_ROMANIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_ROMAN_CI = 'UTF16_ROMAN_CI'.freeze,
      COLLATION_SERVER_UTF16_SINHALA_CI = 'UTF16_SINHALA_CI'.freeze,
      COLLATION_SERVER_UTF16_SLOVAK_CI = 'UTF16_SLOVAK_CI'.freeze,
      COLLATION_SERVER_UTF16_SLOVENIAN_CI = 'UTF16_SLOVENIAN_CI'.freeze,
      COLLATION_SERVER_UTF16_SPANISH2_CI = 'UTF16_SPANISH2_CI'.freeze,
      COLLATION_SERVER_UTF16_SPANISH_CI = 'UTF16_SPANISH_CI'.freeze,
      COLLATION_SERVER_UTF16_SWEDISH_CI = 'UTF16_SWEDISH_CI'.freeze,
      COLLATION_SERVER_UTF16_TURKISH_CI = 'UTF16_TURKISH_CI'.freeze,
      COLLATION_SERVER_UTF16_UNICODE_520_CI = 'UTF16_UNICODE_520_CI'.freeze,
      COLLATION_SERVER_UTF16_UNICODE_CI = 'UTF16_UNICODE_CI'.freeze,
      COLLATION_SERVER_UTF16_VIETNAMESE_CI = 'UTF16_VIETNAMESE_CI'.freeze,
      COLLATION_SERVER_UTF16_LE_GENERAL_CI = 'UTF16LE_GENERAL_CI'.freeze,
      COLLATION_SERVER_UTF16_LE_BIN = 'UTF16LE_BIN'.freeze,
      COLLATION_SERVER_UTF32_GENERAL_CI = 'UTF32_GENERAL_CI'.freeze,
      COLLATION_SERVER_UTF32_BIN = 'UTF32_BIN'.freeze,
      COLLATION_SERVER_UTF32_CROATIAN_CI = 'UTF32_CROATIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_CZECH_CI = 'UTF32_CZECH_CI'.freeze,
      COLLATION_SERVER_UTF32_DANISH_CI = 'UTF32_DANISH_CI'.freeze,
      COLLATION_SERVER_UTF32_ESPERANTO_CI = 'UTF32_ESPERANTO_CI'.freeze,
      COLLATION_SERVER_UTF32_ESTONIAN_CI = 'UTF32_ESTONIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_GERMAN2_CI = 'UTF32_GERMAN2_CI'.freeze,
      COLLATION_SERVER_UTF32_HUNGARIAN_CI = 'UTF32_HUNGARIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_ICELANDIC_CI = 'UTF32_ICELANDIC_CI'.freeze,
      COLLATION_SERVER_UTF32_LATVIAN_CI = 'UTF32_LATVIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_LITHUANIAN_CI = 'UTF32_LITHUANIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_PERSIAN_CI = 'UTF32_PERSIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_POLISH_CI = 'UTF32_POLISH_CI'.freeze,
      COLLATION_SERVER_UTF32_ROMANIAN_CI = 'UTF32_ROMANIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_ROMAN_CI = 'UTF32_ROMAN_CI'.freeze,
      COLLATION_SERVER_UTF32_SINHALA_CI = 'UTF32_SINHALA_CI'.freeze,
      COLLATION_SERVER_UTF32_SLOVAK_CI = 'UTF32_SLOVAK_CI'.freeze,
      COLLATION_SERVER_UTF32_SLOVENIAN_CI = 'UTF32_SLOVENIAN_CI'.freeze,
      COLLATION_SERVER_UTF32_SPANISH2_CI = 'UTF32_SPANISH2_CI'.freeze,
      COLLATION_SERVER_UTF32_SPANISH_CI = 'UTF32_SPANISH_CI'.freeze,
      COLLATION_SERVER_UTF32_SWEDISH_CI = 'UTF32_SWEDISH_CI'.freeze,
      COLLATION_SERVER_UTF32_TURKISH_CI = 'UTF32_TURKISH_CI'.freeze,
      COLLATION_SERVER_UTF32_UNICODE_520_CI = 'UTF32_UNICODE_520_CI'.freeze,
      COLLATION_SERVER_UTF32_UNICODE_CI = 'UTF32_UNICODE_CI'.freeze,
      COLLATION_SERVER_UTF32_VIETNAMESE_CI = 'UTF32_VIETNAMESE_CI'.freeze,
      COLLATION_SERVER_UTF8_GENERAL_CI = 'UTF8_GENERAL_CI'.freeze,
      COLLATION_SERVER_UTF8_BIN = 'UTF8_BIN'.freeze,
      COLLATION_SERVER_UTF8_CROATIAN_CI = 'UTF8_CROATIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_CZECH_CI = 'UTF8_CZECH_CI'.freeze,
      COLLATION_SERVER_UTF8_DANISH_CI = 'UTF8_DANISH_CI'.freeze,
      COLLATION_SERVER_UTF8_ESPERANTO_CI = 'UTF8_ESPERANTO_CI'.freeze,
      COLLATION_SERVER_UTF8_ESTONIAN_CI = 'UTF8_ESTONIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_GENERAL_MYSQL500_CI = 'UTF8_GENERAL_MYSQL500_CI'.freeze,
      COLLATION_SERVER_UTF8_GERMAN2_CI = 'UTF8_GERMAN2_CI'.freeze,
      COLLATION_SERVER_UTF8_HUNGARIAN_CI = 'UTF8_HUNGARIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_ICELANDIC_CI = 'UTF8_ICELANDIC_CI'.freeze,
      COLLATION_SERVER_UTF8_LATVIAN_CI = 'UTF8_LATVIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_LITHUANIAN_CI = 'UTF8_LITHUANIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_PERSIAN_CI = 'UTF8_PERSIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_POLISH_CI = 'UTF8_POLISH_CI'.freeze,
      COLLATION_SERVER_UTF8_ROMANIAN_CI = 'UTF8_ROMANIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_ROMAN_CI = 'UTF8_ROMAN_CI'.freeze,
      COLLATION_SERVER_UTF8_SINHALA_CI = 'UTF8_SINHALA_CI'.freeze,
      COLLATION_SERVER_UTF8_SLOVAK_CI = 'UTF8_SLOVAK_CI'.freeze,
      COLLATION_SERVER_UTF8_SLOVENIAN_CI = 'UTF8_SLOVENIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_SPANISH2_CI = 'UTF8_SPANISH2_CI'.freeze,
      COLLATION_SERVER_UTF8_SPANISH_CI = 'UTF8_SPANISH_CI'.freeze,
      COLLATION_SERVER_UTF8_SWEDISH_CI = 'UTF8_SWEDISH_CI'.freeze,
      COLLATION_SERVER_UTF8_TOLOWER_CI = 'UTF8_TOLOWER_CI'.freeze,
      COLLATION_SERVER_UTF8_TURKISH_CI = 'UTF8_TURKISH_CI'.freeze,
      COLLATION_SERVER_UTF8_UNICODE_520_CI = 'UTF8_UNICODE_520_CI'.freeze,
      COLLATION_SERVER_UTF8_UNICODE_CI = 'UTF8_UNICODE_CI'.freeze,
      COLLATION_SERVER_UTF8_VIETNAMESE_CI = 'UTF8_VIETNAMESE_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_0900_AI_CI = 'UTF8MB4_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_0900_AS_CI = 'UTF8MB4_0900_AS_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_0900_AS_CS = 'UTF8MB4_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_0900_BIN = 'UTF8MB4_0900_BIN'.freeze,
      COLLATION_SERVER_UTF8_MB4_BIN = 'UTF8MB4_BIN'.freeze,
      COLLATION_SERVER_UTF8_MB4_CROATIAN_CI = 'UTF8MB4_CROATIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_CS_0900_AI_CI = 'UTF8MB4_CS_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_CS_0900_AS_CS = 'UTF8MB4_CS_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_CZECH_CI = 'UTF8MB4_CZECH_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_DANISH_CI = 'UTF8MB4_DANISH_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_DA_0900_AI_CI = 'UTF8MB4_DA_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_DA_0900_AS_CS = 'UTF8MB4_DA_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_DE_PB_0900_AI_CI = 'UTF8MB4_DE_PB_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_DE_PB_0900_AS_CS = 'UTF8MB4_DE_PB_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_EO_0900_AI_CI = 'UTF8MB4_EO_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_EO_0900_AS_CS = 'UTF8MB4_EO_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_ESPERANTO_CI = 'UTF8MB4_ESPERANTO_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_ESTONIAN_CI = 'UTF8MB4_ESTONIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_ES_0900_AI_CI = 'UTF8MB4_ES_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_ES_0900_AS_CS = 'UTF8MB4_ES_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_ES_TRAD_0900_AI_CI = 'UTF8MB4_ES_TRAD_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_ES_TRAD_0900_AS_CS = 'UTF8MB4_ES_TRAD_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_ET_0900_AI_CI = 'UTF8MB4_ET_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_ET_0900_AS_CS = 'UTF8MB4_ET_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_GENERAL_CI = 'UTF8MB4_GENERAL_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_GERMAN2_CI = 'UTF8MB4_GERMAN2_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_HR_0900_AI_CI = 'UTF8MB4_HR_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_HR_0900_AS_CS = 'UTF8MB4_HR_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_HUNGARIAN_CI = 'UTF8MB4_HUNGARIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_HU_0900_AI_CI = 'UTF8MB4_HU_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_HU_0900_AS_CS = 'UTF8MB4_HU_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_ICELANDIC_CI = 'UTF8MB4_ICELANDIC_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_IS_0900_AI_CI = 'UTF8MB4_IS_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_IS_0900_AS_CS = 'UTF8MB4_IS_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_JA_0900_AS_CS = 'UTF8MB4_JA_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_JA_0900_AS_CS_KS = 'UTF8MB4_JA_0900_AS_CS_KS'.freeze,
      COLLATION_SERVER_UTF8_MB4_LATVIAN_CI = 'UTF8MB4_LATVIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_LA_0900_AI_CI = 'UTF8MB4_LA_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_LA_0900_AS_CS = 'UTF8MB4_LA_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_LITHUANIAN_CI = 'UTF8MB4_LITHUANIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_LT_0900_AI_CI = 'UTF8MB4_LT_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_LT_0900_AS_CS = 'UTF8MB4_LT_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_LV_0900_AI_CI = 'UTF8MB4_LV_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_LV_0900_AS_CS = 'UTF8MB4_LV_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_PERSIAN_CI = 'UTF8MB4_PERSIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_PL_0900_AI_CI = 'UTF8MB4_PL_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_PL_0900_AS_CS = 'UTF8MB4_PL_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_POLISH_CI = 'UTF8MB4_POLISH_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_ROMANIAN_CI = 'UTF8MB4_ROMANIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_ROMAN_CI = 'UTF8MB4_ROMAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_RO_0900_AI_CI = 'UTF8MB4_RO_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_RO_0900_AS_CS = 'UTF8MB4_RO_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_RU_0900_AI_CI = 'UTF8MB4_RU_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_RU_0900_AS_CS = 'UTF8MB4_RU_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_SINHALA_CI = 'UTF8MB4_SINHALA_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SK_0900_AI_CI = 'UTF8MB4_SK_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SK_0900_AS_CS = 'UTF8MB4_SK_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_SLOVAK_CI = 'UTF8MB4_SLOVAK_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SLOVENIAN_CI = 'UTF8MB4_SLOVENIAN_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SL_0900_AI_CI = 'UTF8MB4_SL_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SL_0900_AS_CS = 'UTF8MB4_SL_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_SPANISH2_CI = 'UTF8MB4_SPANISH2_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SPANISH_CI = 'UTF8MB4_SPANISH_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SV_0900_AI_CI = 'UTF8MB4_SV_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_SV_0900_AS_CS = 'UTF8MB4_SV_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_SWEDISH_CI = 'UTF8MB4_SWEDISH_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_TR_0900_AI_CI = 'UTF8MB4_TR_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_TR_0900_AS_CS = 'UTF8MB4_TR_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_TURKISH_CI = 'UTF8MB4_TURKISH_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_UNICODE_520_CI = 'UTF8MB4_UNICODE_520_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_UNICODE_CI = 'UTF8MB4_UNICODE_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_VIETNAMESE_CI = 'UTF8MB4_VIETNAMESE_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_VI_0900_AI_CI = 'UTF8MB4_VI_0900_AI_CI'.freeze,
      COLLATION_SERVER_UTF8_MB4_VI_0900_AS_CS = 'UTF8MB4_VI_0900_AS_CS'.freeze,
      COLLATION_SERVER_UTF8_MB4_ZH_0900_AS_CS = 'UTF8MB4_ZH_0900_AS_CS'.freeze,
      COLLATION_SERVER_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    DEFAULT_AUTHENTICATION_PLUGIN_ENUM = [
      DEFAULT_AUTHENTICATION_PLUGIN_MYSQL_NATIVE_PASSWORD = 'mysql_native_password'.freeze,
      DEFAULT_AUTHENTICATION_PLUGIN_SHA256_PASSWORD = 'sha256_password'.freeze,
      DEFAULT_AUTHENTICATION_PLUGIN_CACHING_SHA2_PASSWORD = 'caching_sha2_password'.freeze,
      DEFAULT_AUTHENTICATION_PLUGIN_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    TRANSACTION_ISOLATION_ENUM = [
      TRANSACTION_ISOLATION_READ_UNCOMMITTED = 'READ-UNCOMMITTED'.freeze,
      TRANSACTION_ISOLATION_READ_COMMITED = 'READ-COMMITED'.freeze,
      TRANSACTION_ISOLATION_READ_COMMITTED = 'READ-COMMITTED'.freeze,
      TRANSACTION_ISOLATION_REPEATABLE_READ = 'REPEATABLE-READ'.freeze,
      TRANSACTION_ISOLATION_SERIALIZABLE = 'SERIALIZABLE'.freeze,
      TRANSACTION_ISOLATION_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    GROUP_REPLICATION_CONSISTENCY_ENUM = [
      GROUP_REPLICATION_CONSISTENCY_EVENTUAL = 'EVENTUAL'.freeze,
      GROUP_REPLICATION_CONSISTENCY_BEFORE_ON_PRIMARY_FAILOVER = 'BEFORE_ON_PRIMARY_FAILOVER'.freeze,
      GROUP_REPLICATION_CONSISTENCY_BEFORE = 'BEFORE'.freeze,
      GROUP_REPLICATION_CONSISTENCY_AFTER = 'AFTER'.freeze,
      GROUP_REPLICATION_CONSISTENCY_BEFORE_AND_AFTER = 'BEFORE_AND_AFTER'.freeze,
      GROUP_REPLICATION_CONSISTENCY_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    BINLOG_ROW_METADATA_ENUM = [
      BINLOG_ROW_METADATA_FULL = 'FULL'.freeze,
      BINLOG_ROW_METADATA_MINIMAL = 'MINIMAL'.freeze,
      BINLOG_ROW_METADATA_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    EXPLAIN_FORMAT_ENUM = [
      EXPLAIN_FORMAT_TRADITIONAL = 'TRADITIONAL'.freeze,
      EXPLAIN_FORMAT_JSON = 'JSON'.freeze,
      EXPLAIN_FORMAT_TREE = 'TREE'.freeze,
      EXPLAIN_FORMAT_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    INNODB_CHANGE_BUFFERING_ENUM = [
      INNODB_CHANGE_BUFFERING_NONE = 'NONE'.freeze,
      INNODB_CHANGE_BUFFERING_INSERTS = 'INSERTS'.freeze,
      INNODB_CHANGE_BUFFERING_DELETES = 'DELETES'.freeze,
      INNODB_CHANGE_BUFFERING_CHANGES = 'CHANGES'.freeze,
      INNODB_CHANGE_BUFFERING_PURGES = 'PURGES'.freeze,
      INNODB_CHANGE_BUFFERING_ALL = 'ALL'.freeze,
      INNODB_CHANGE_BUFFERING_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    # (\"completion_type\")
    # @return [String]
    attr_reader :completion_type

    # If enabled, the server stores all temporary tables on disk rather than in memory.
    #
    # bigTables corresponds to the MySQL server variable [big_tables](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_big_tables).
    #
    # @return [BOOLEAN]
    attr_accessor :big_tables

    # The server's default character set. If you set this variable, you should also set collation_server to specify the collation for the character set.
    #
    # characterSetServer corresponds to the MySQL server variable [character_set_server](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_character_set_server).
    #
    # @return [String]
    attr_reader :character_set_server

    # The server's default collation.
    #
    # collationServer corresponds to the MySQL server variable [collation_server](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_collation_server).
    #
    # @return [String]
    attr_reader :collation_server

    # Set the chunking size for updates to the global memory usage counter Global_connection_memory.
    #
    # connectionMemoryChunkSize corresponds to the MySQL system variable [connection_memory_chunk_size](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_chunk_size).
    #
    # @return [Integer]
    attr_accessor :connection_memory_chunk_size

    # Set the maximum amount of memory that can be used by a single user connection.
    #
    # connectionMemoryLimit corresponds to the MySQL system variable [connection_memory_limit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_limit).
    #
    # @return [Integer]
    attr_accessor :connection_memory_limit

    # The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted:
    # mysql_native_password, sha256_password, caching_sha2_password.
    #
    # As of MySQL 8.0.27, which introduces multifactor authentication, default_authentication_plugin is still used,
    # but in conjunction with and at a lower precedence than the authentication_policy system variable.
    # For details, see The Default Authentication Plugin. Because of this diminished role, default_authentication_plugin is deprecated as of MySQL 8.0.27
    # and subject to removal in a future MySQL version.
    #
    # defaultAuthenticationPlugin corresponds to the MySQL system variable
    # [default_authentication_plugin](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin).
    #
    # @return [String]
    attr_reader :default_authentication_plugin

    # Set the total amount of memory that can be used by all user connections.
    #
    # globalConnectionMemoryLimit corresponds to the MySQL system variable [global_connection_memory_limit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_limit).
    #
    # @return [Integer]
    attr_accessor :global_connection_memory_limit

    # Determines whether the MySQL server calculates Global_connection_memory.
    #
    # globalConnectionMemoryTracking corresponds to the MySQL system variable [global_connection_memory_tracking](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_tracking).
    #
    # @return [BOOLEAN]
    attr_accessor :global_connection_memory_tracking

    # (\"transaction_isolation\")
    # @return [String]
    attr_reader :transaction_isolation

    # (\"innodb_ft_server_stopword_table\")
    # @return [String]
    attr_accessor :innodb_ft_server_stopword_table

    # (\"mandatory_roles\")
    # @return [String]
    attr_accessor :mandatory_roles

    # (\"autocommit\")
    # @return [BOOLEAN]
    attr_accessor :autocommit

    # (\"foreign_key_checks\")
    # @return [BOOLEAN]
    attr_accessor :foreign_key_checks

    # - EVENTUAL:
    #     Both RO and RW transactions do not wait for preceding transactions to be applied before executing.
    #     A RW transaction does not wait for other members to apply a transaction. This means that a transaction
    #     could be externalized on one member before the others. This also means that in the event of a primary failover,
    #     the new primary can accept new RO and RW transactions before the previous primary transactions are all applied.
    #     RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
    # - BEFORE_ON_PRIMARY_FAILOVER:
    #     New RO or RW transactions with a newly elected primary that is applying backlog from the old
    #     primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens,
    #     intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that
    #     clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal,
    #     but does depend on the size of the backlog.
    # - BEFORE:
    #     A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding
    #     transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the
    #     latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is
    #     used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
    # - AFTER:
    #     A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions.
    #     This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or
    #     a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that
    #     applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent
    #     reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction,
    #     by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees
    #     provided by BEFORE_ON_PRIMARY_FAILOVER.
    # - BEFORE_AND_AFTER:
    #     A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been
    #     applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place.
    #     This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
    #
    # @return [String]
    attr_reader :group_replication_consistency

    # Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
    #
    # This is the MySQL variable \"group_concat_max_len\". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_group_concat_max_len)
    #
    # @return [Integer]
    attr_accessor :group_concat_max_len

    # (\"innodb_ft_enable_stopword\")
    # @return [BOOLEAN]
    attr_accessor :innodb_ft_enable_stopword

    # Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
    #
    # This is the MySQL variable \"innodb_log_writer_threads\". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_log_writer_threads)
    #
    # @return [BOOLEAN]
    attr_accessor :innodb_log_writer_threads

    # This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the local_infile setting,
    # the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
    #
    # local_infile corresponds to the MySQL Server system variable
    # [local_infile](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_local_infile)
    #
    # @return [BOOLEAN]
    attr_accessor :local_infile

    # (\"mysql_firewall_mode\")
    # @return [BOOLEAN]
    attr_accessor :mysql_firewall_mode

    # (\"mysqlx_enable_hello_notice\") DEPRECATED -- variable should not be settable and will be ignored
    # @return [BOOLEAN]
    attr_accessor :mysqlx_enable_hello_notice

    # (\"sql_require_primary_key\")
    # @return [BOOLEAN]
    attr_accessor :sql_require_primary_key

    # (\"sql_warnings\")
    # @return [BOOLEAN]
    attr_accessor :sql_warnings

    # Sets the binary log expiration period in seconds.
    # binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlog_expire_logs_seconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
    #
    # @return [Integer]
    attr_accessor :binlog_expire_logs_seconds

    # Configures the amount of table metadata added to the binary log when using row-based logging.
    # binlogRowMetadata corresponds to the MySQL binary logging system variable [binlog_row_metadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
    #
    # @return [String]
    attr_reader :binlog_row_metadata

    # When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document.
    # binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlog_row_value_options](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
    #
    # @return [String]
    attr_accessor :binlog_row_value_options

    # Enables compression for transactions that are written to binary log files on this server.
    # binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlog_transaction_compression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
    #
    # @return [BOOLEAN]
    attr_accessor :binlog_transaction_compression

    # The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
    #
    # innodbBufferPoolSize corresponds to the MySQL server system variable
    # [innodb_buffer_pool_size](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
    #
    # The default and maximum values depend on the amount of RAM provisioned by the shape.
    # See [Default User Variables](https://docs.cloud.oracle.com/mysql-database/doc/configuring-db-system.html#GUID-B5504C19-F6F4-4DAB-8506-189A4E8F4A6A).
    #
    # @return [Integer]
    attr_accessor :innodb_buffer_pool_size

    # (\"innodb_ft_result_cache_limit\")
    # @return [Integer]
    attr_accessor :innodb_ft_result_cache_limit

    # Sets the size of the transaction cache.
    #
    # maxBinlogCacheSize corresponds to the MySQL server system variable [max_binlog_cache_size](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_max_binlog_cache_size).
    #
    # @return [Integer]
    attr_accessor :max_binlog_cache_size

    # (\"max_connect_errors\")
    # @return [Integer]
    attr_accessor :max_connect_errors

    # This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
    #
    # maxHeapTableSize corresponds to the MySQL system variable
    # [max_heap_table_size](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_heap_table_size)
    #
    # @return [Integer]
    attr_accessor :max_heap_table_size

    # (\"max_connections\")
    # @return [Integer]
    attr_accessor :max_connections

    # (\"max_prepared_stmt_count\")
    # @return [Integer]
    attr_accessor :max_prepared_stmt_count

    # The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
    #
    # connectTimeout corresponds to the MySQL system variable
    # [connect_timeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_connect_timeout)
    #
    # Increasing the connect_timeout value might help if clients frequently encounter errors of the form
    # \"Lost connection to MySQL server at 'XXX', system error: errno\".
    #
    # @return [Integer]
    attr_accessor :connect_timeout

    # (\"cte_max_recursion_depth\")
    # @return [Integer]
    attr_accessor :cte_max_recursion_depth

    # (\"generated_random_password_length\") DEPRECATED -- variable should not be settable and will be ignored
    # @return [Integer]
    attr_accessor :generated_random_password_length

    # (\"information_schema_stats_expiry\")
    # @return [Integer]
    attr_accessor :information_schema_stats_expiry

    # Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
    #
    # innodbBufferPoolDumpPct corresponds to the MySQL InnoDB system variable
    # [innodb_buffer_pool_dump_pct](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct).
    #
    # The range is 1 to 100. The default value is 25.
    #
    # For example, if there are 4 buffer pools with 100 pages each, and innodb_buffer_pool_dump_pct is set to 25,
    # the 25 most recently used pages from each buffer pool are dumped.
    #
    # @return [Integer]
    attr_accessor :innodb_buffer_pool_dump_pct

    # (\"innodb_buffer_pool_instances\")
    # @return [Integer]
    attr_accessor :innodb_buffer_pool_instances

    # innodbDdlBufferSize corresponds to the MySQL system variable [innodb_ddl_buffer_size] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
    #
    # @return [Integer]
    attr_accessor :innodb_ddl_buffer_size

    # innodbDdlThreads corresponds to the MySQL system variable [innodb_ddl_threads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
    #
    # @return [Integer]
    attr_accessor :innodb_ddl_threads

    # (\"innodb_ft_max_token_size\")
    # @return [Integer]
    attr_accessor :innodb_ft_max_token_size

    # (\"innodb_ft_min_token_size\")
    # @return [Integer]
    attr_accessor :innodb_ft_min_token_size

    # (\"innodb_ft_num_word_optimize\")
    # @return [Integer]
    attr_accessor :innodb_ft_num_word_optimize

    # (\"innodb_lock_wait_timeout\")
    # @return [Integer]
    attr_accessor :innodb_lock_wait_timeout

    # The desired maximum purge lag in terms of transactions.
    #
    # InnoDB maintains a list of transactions that have index records delete-marked by UPDATE or DELETE operations. The length of the list is the purge lag.
    #
    # If this value is exceeded, a delay is imposed on INSERT, UPDATE, and DELETE operations to allow time for purge to catch up.
    #
    # The default value is 0, which means there is no maximum purge lag and no delay.
    #
    # innodbMaxPurgeLag corresponds to the MySQL server system variable
    # [innodb_max_purge_lag](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag).
    #
    # @return [Integer]
    attr_accessor :innodb_max_purge_lag

    # The maximum delay in microseconds for the delay imposed when the innodb_max_purge_lag threshold is exceeded.
    #
    # The specified innodb_max_purge_lag_delay value is an upper limit on the delay period.
    #
    # innodbMaxPurgeLagDelay corresponds to the MySQL server system variable
    # [innodb_max_purge_lag_delay](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag_delay).
    #
    # @return [Integer]
    attr_accessor :innodb_max_purge_lag_delay

    # The number of seconds the server waits for activity on an interactive connection before closing it.
    #
    # interactiveTimeout corresponds to the MySQL system variable.
    # [interactive_timeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_interactive_timeout)
    #
    # @return [Integer]
    attr_accessor :interactive_timeout

    # The number of index pages to sample when estimating cardinality and other statistics for an indexed column,
    # such as those calculated by ANALYZE TABLE.
    #
    # innodbStatsPersistentSamplePages corresponds to the MySQL InnoDB system variable
    # [innodb_stats_persistent_sample_pages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    #
    # innodb_stats_persistent_sample_pages only applies when innodb_stats_persistent is enabled for a table;
    # when innodb_stats_persistent is disabled, innodb_stats_transient_sample_pages applies instead.
    #
    # @return [Integer]
    attr_accessor :innodb_stats_persistent_sample_pages

    # The number of index pages to sample when estimating cardinality and other statistics for an indexed column,
    # such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
    #
    # innodbStatsTransientSamplePages corresponds to the MySQL InnoDB system variable
    # [innodb_stats_transient_sample_pages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
    #
    # innodb_stats_transient_sample_pages only applies when innodb_stats_persistent is disabled for a table;
    # when innodb_stats_persistent is enabled, innodb_stats_persistent_sample_pages applies instead.
    #
    # innodb_stats_persistent is ON by default and cannot be changed. It is possible to override it using the
    # STATS_PERSISTENT clause of the [CREATE TABLE](https://dev.mysql.com/doc/refman/8.0/en/create-table.html) and
    # [ALTER TABLE](https://dev.mysql.com/doc/refman/8.0/en/alter-table.html) statements.
    #
    # @return [Integer]
    attr_accessor :innodb_stats_transient_sample_pages

    # When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
    #
    # innodbStrictMode corresponds to the MySQL InnoDB system variable
    # [innodb_strict_mode](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_strict_mode)
    #
    # @return [BOOLEAN]
    attr_accessor :innodb_strict_mode

    # The maximum size of one packet or any generated/intermediate string.
    #
    # This is the mysql variable \"max_allowed_packet\".
    #
    # @return [Integer]
    attr_accessor :max_allowed_packet

    # (\"max_execution_time\")
    # @return [Integer]
    attr_accessor :max_execution_time

    # The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
    #
    # mysqlxConnectTimeout corresponds to the MySQL X Plugin system variable
    # [mysqlx_connect_timeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_connect_timeout)
    #
    # @return [Integer]
    attr_accessor :mysqlx_connect_timeout

    # (\"mysqlx_document_id_unique_prefix\") DEPRECATED -- variable should not be settable and will be ignored
    # @return [Integer]
    attr_accessor :mysqlx_document_id_unique_prefix

    # (\"mysqlx_idle_worker_thread_timeout\") DEPRECATED -- variable should not be settable and will be ignored
    # @return [Integer]
    attr_accessor :mysqlx_idle_worker_thread_timeout

    # The number of seconds to wait for interactive clients to timeout.
    #
    # mysqlxInteractiveTimeout corresponds to the MySQL X Plugin system variable.
    # [mysqlx_interactive_timeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_interactive_timeout)
    #
    # @return [Integer]
    attr_accessor :mysqlx_interactive_timeout

    # The maximum size of network packets that can be received by X Plugin.
    #
    # This is the mysql variable \"mysqlx_max_allowed_packet\".
    #
    # @return [Integer]
    attr_accessor :mysqlx_max_allowed_packet

    # (\"mysqlx_min_worker_threads\") DEPRECATED -- variable should not be settable and will be ignored
    # @return [Integer]
    attr_accessor :mysqlx_min_worker_threads

    # The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the
    # read operation is not successful, X Plugin closes the connection and returns a warning notice with the error
    # code ER_IO_READ_ERROR to the client application.
    #
    # mysqlxReadTimeout corresponds to the MySQL X Plugin system variable
    # [mysqlx_read_timeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_read_timeout)
    #
    # @return [Integer]
    attr_accessor :mysqlx_read_timeout

    # The number of seconds that X Plugin waits for activity on a connection.
    #
    # mysqlxWaitTimeout corresponds to the MySQL X Plugin system variable.
    # [mysqlx_wait_timeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_wait_timeout)
    #
    # @return [Integer]
    attr_accessor :mysqlx_wait_timeout

    # The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the
    # write operation is not successful, X Plugin closes the connection.
    #
    # mysqlxReadmysqlxWriteTimeoutTimeout corresponds to the MySQL X Plugin system variable
    # [mysqlx_write_timeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_write_timeout)
    #
    # @return [Integer]
    attr_accessor :mysqlx_write_timeout

    # The number of seconds to wait for more data from a connection before aborting the read.
    #
    # netReadTimeout corresponds to the MySQL system variable
    # [net_read_timeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_read_timeout)
    #
    # @return [Integer]
    attr_accessor :net_read_timeout

    # The number of seconds to wait for a block to be written to a connection before aborting the write.
    #
    # netWriteTimeout corresponds to the MySQL system variable
    # [net_write_timeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_write_timeout)
    #
    # @return [Integer]
    attr_accessor :net_write_timeout

    # (\"parser_max_mem_size\")
    # @return [Integer]
    attr_accessor :parser_max_mem_size

    # (\"query_alloc_block_size\") DEPRECATED -- variable should not be settable and will be ignored
    # @return [Integer]
    attr_accessor :query_alloc_block_size

    # (\"query_prealloc_size\") DEPRECATED -- variable should not be settable and will be ignored
    # @return [Integer]
    attr_accessor :query_prealloc_size

    # regexpTimeLimit corresponds to the MySQL system variable [regexp_time_limit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
    #
    # @return [Integer]
    attr_accessor :regexp_time_limit

    # (\"sql_mode\")
    # @return [String]
    attr_accessor :sql_mode

    # The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
    #
    # tmp_table_size corresponds to the MySQL system variable
    # [tmp_table_size](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmp_table_size)
    #
    # @return [Integer]
    attr_accessor :tmp_table_size

    # Set the default compression level for the deflate algorithm. (\"mysqlx_deflate_default_compression_level\")
    # @return [Integer]
    attr_accessor :mysqlx_deflate_default_compression_level

    # Limit the upper bound of accepted compression levels for the deflate algorithm. (\"mysqlx_deflate_max_client_compression_level\")
    # @return [Integer]
    attr_accessor :mysqlx_deflate_max_client_compression_level

    # Limit the upper bound of accepted compression levels for the lz4 algorithm. (\"mysqlx_lz4_max_client_compression_level\")
    # @return [Integer]
    attr_accessor :mysqlx_lz4_max_client_compression_level

    # Set the default compression level for the lz4 algorithm. (\"mysqlx_lz4_default_compression_level\")
    # @return [Integer]
    attr_accessor :mysqlx_lz4_default_compression_level

    # Limit the upper bound of accepted compression levels for the zstd algorithm. (\"mysqlx_zstd_max_client_compression_level\")
    # @return [Integer]
    attr_accessor :mysqlx_zstd_max_client_compression_level

    # Set the default compression level for the zstd algorithm. (\"mysqlx_zstd_default_compression_level\")
    # @return [Integer]
    attr_accessor :mysqlx_zstd_default_compression_level

    # DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
    # @return [Integer]
    attr_accessor :mysql_zstd_default_compression_level

    # Each session that must perform a sort allocates a buffer of this size.
    #
    # sortBufferSize corresponds to the MySQL system variable [sort_buffer_size](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_sort_buffer_size)
    #
    # @return [Integer]
    attr_accessor :sort_buffer_size

    # The number of seconds the server waits for activity on a noninteractive connection before closing it.
    #
    # waitTimeout corresponds to the MySQL system variable.
    # [wait_timeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_wait_timeout)
    #
    # @return [Integer]
    attr_accessor :wait_timeout

    # Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening
    # for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit.
    # threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
    #
    # @return [BOOLEAN]
    attr_accessor :thread_pool_dedicated_listeners

    # Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit.
    # threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
    #
    # @return [Integer]
    attr_accessor :thread_pool_max_transactions_limit

    # Initializes the time zone for each client that connects.
    #
    # This corresponds to the MySQL System Variable \"time_zone\".
    #
    # The values can be given in one of the following formats, none of which are case-sensitive:
    #
    # - As a string indicating an offset from UTC of the form [H]H:MM, prefixed with a + or -, such as '+10:00', '-6:00', or '+05:30'. The permitted range is '-13:59' to '+14:00', inclusive.
    # - As a named time zone, as defined by the \"IANA Time Zone database\", such as 'Europe/Helsinki', 'US/Eastern', 'MET', or 'UTC'.
    #
    # @return [String]
    attr_accessor :time_zone

    # This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT().
    #
    # block_encryption_mode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive.
    # Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
    #
    # block_encryption_mode corresponds to the MySQL Server Administration system variable
    # [block_encryption_mode](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_block_encryption_mode)
    #
    # @return [String]
    attr_accessor :block_encryption_mode

    # Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk.
    # There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized
    # together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required
    # fewer time units per group.
    #
    # binlogGroupCommitSyncDelay corresponds to the MySQL Replication system variable
    # [binlog_group_commit_sync_delay](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    #
    # @return [Integer]
    attr_accessor :binlog_group_commit_sync_delay

    # The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay.
    # If binlog_group_commit_sync_delay is set to 0, then this option has no effect.
    #
    # binlogGroupCommitSyncNoDelayCount corresponds to the MySQL Replication system variable
    # [binlog_group_commit_sync_no_delay_count](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)
    #
    # @return [Integer]
    attr_accessor :binlog_group_commit_sync_no_delay_count

    # Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken,
    # aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
    #
    # replicaNetTimeout corresponds to the MySQL Replica server system variable
    # [replica_net_timeout](https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_net_timeout)
    #
    # @return [Integer]
    attr_accessor :replica_net_timeout

    # Whether client connections to the server are required to use some form of secure transport.
    # When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory.
    # The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
    #
    # require_secure_transport corresponds to the MySQL Server Administration system variable
    # [require_secure_transport](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_require_secure_transport)
    #
    # @return [BOOLEAN]
    attr_accessor :require_secure_transport

    # Defines the amount of disk space occupied by redo log files. innodb_redo_log_capacity supercedes the innodb_log_files_in_group and innodb_log_file_size variables,
    # which are both ignored if innodb_redo_log_capacity is defined. If innodb_redo_log_capacity is not defined, and if neither innodb_log_file_size or innodb_log_files_in_group are defined,
    # then the default innodb_redo_log_capacity value is used.
    #
    # innodbRedoLogCapacity corresponds to the InnoDB Startup Options and System Variables
    # [innodb_redo_log_capacity](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_redo_log_capacity)
    #
    # @return [Integer]
    attr_accessor :innodb_redo_log_capacity

    # The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes).
    # A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention.
    # For example, if parallel transactions affect index creation or an online buffer pool resizing operation,
    # you can configure a transaction delay to reduce resource contention while those operations are running.
    #
    # threadPoolTransactionDelay corresponds to the MySQL Server system variable
    # [thread_pool_transaction_delay](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_transaction_delay)
    #
    # @return [Integer]
    attr_accessor :thread_pool_transaction_delay

    # The maximum number of query threads permitted in a thread group.
    # The maximum value is 4096, but if thread_pool_max_transactions_limit is set, thread_pool_query_threads_per_group must not exceed that value.
    # The default value of 1 means there is one active query thread in each thread group, which works well for many loads.
    # When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1),
    # consider increasing the value if you experience slower response times due to long-running transactions.
    #
    # threadPoolQueryThreadsPerGroup corresponds to the MySQL Server system variable
    # [thread_pool_query_threads_per_group](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_query_threads_per_group)
    #
    # @return [Integer]
    attr_accessor :thread_pool_query_threads_per_group

    # This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
    #
    # explainFormat corresponds to the MySQL system variable
    # [explain_format](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explain_format).
    #
    # @return [String]
    attr_reader :explain_format

    # This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns.
    # By default, explicit_defaults_for_timestamp is enabled, which disables the nonstandard behaviors. Disabling explicit_defaults_for_timestamp results in a warning.
    #
    # explicit_defaults_for_timestamp corresponds to the MySQL Server Administration system variable
    # [explicit_defaults_for_timestamp](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp)
    #
    # @return [BOOLEAN]
    attr_accessor :explicit_defaults_for_timestamp

    # Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
    #
    # sqlGenerateInvisiblePrimaryKey corresponds to the MySQL system variable
    # [sql_generate_invisible_primary_key] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_generate_invisible_primary_key).
    #
    # @return [BOOLEAN]
    attr_accessor :sql_generate_invisible_primary_key

    # Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk.
    # The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, \u201CInternal Temporary Table Use in MySQL\u201D.
    #
    # temptableMaxRam corresponds to the MySQL system variable
    # [temptable_max_ram] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_temptable_max_ram).
    #
    # @return [Integer]
    attr_accessor :temptable_max_ram

    # Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially.
    # Permitted values are described in the following table. Values may also be specified numerically.
    #
    # innodbChangeBuffering corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_change_buffering] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_change_buffering).
    #
    # @return [String]
    attr_reader :innodb_change_buffering

    # Whether the InnoDB adaptive hash index is enabled or disabled.
    # It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance.
    # Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
    #
    # innodbAdaptiveHashIndex corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_adaptive_hash_index] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_adaptive_hash_index).
    #
    # @return [BOOLEAN]
    attr_accessor :innodb_adaptive_hash_index

    # When enabled, undo tablespaces that exceed the threshold value defined by innodb_max_undo_log_size are marked for truncation.
    # Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported.
    # For truncation to occur, there must be at least two undo tablespaces.
    #
    # innodbUndoLogTruncate corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_undo_log_truncate] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_undo_log_truncate).
    #
    # @return [BOOLEAN]
    attr_accessor :innodb_undo_log_truncate

    # The number of table definitions that can be stored in the table definition cache.
    # If you use a large number of tables, you can create a large table definition cache to speed up opening of tables.
    # The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
    #
    # table_definition_cache corresponds to the MySQL Server Administration system variable
    # [table_definition_cache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache)
    #
    # @return [Integer]
    attr_accessor :table_definition_cache

    # The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
    #
    # table_open_cache corresponds to the MySQL Server Administration system variable
    # [table_open_cache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_open_cache)
    #
    # @return [Integer]
    attr_accessor :table_open_cache

    # The maximum amount of space to use for all relay logs.
    #
    # relayLogSpaceLimit corresponds to the MySQL Replica Server Options variable
    # [relay_log_space_limit] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_relay_log_space_limit).
    #
    # @return [Integer]
    attr_accessor :relay_log_space_limit

    # The optimizer_switch system variable enables control over optimizer behavior.
    # The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled.
    # This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
    #
    # Setting hypergraph_optimizer=on for cloud builds below 9.0.0 will fail.
    #
    # optimizerSwitch corresponds to the MySQL Server System variable
    # [optimizer_switch] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_optimizer_switch).
    #
    # @return [String]
    attr_accessor :optimizer_switch

    # From MySQL 8.0.26, use replica_type_conversions in place of slave_type_conversions, which is deprecated from that release.
    # In releases before MySQL 8.0.26, use slave_type_conversions.
    #
    # replica_type_conversions controls the type conversion mode in effect on the replica when using row-based replication.
    # Its value is a comma-delimited set of zero or more elements from the list: ALL_LOSSY, ALL_NON_LOSSY, ALL_SIGNED, ALL_UNSIGNED.
    # Set this variable to an empty string to disallow type conversions between the source and the replica.
    # Setting this variable takes effect for all replication channels immediately, including running channels.
    #
    # replica_type_conversions corresponds to the MySQL Replica Server Options variable
    # [replica_type_conversions] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_type_conversions).
    #
    # @return [String]
    attr_accessor :replica_type_conversions

    # Beginning with MySQL 8.0.26, slave_parallel_workers is deprecated, and you should use replica_parallel_workers instead.
    # (Prior to MySQL 8.0.26, you must use slave_parallel_workers to set the number of applier threads.)
    #
    # replicaParallelWorkers corresponds to the MySQL Replica Server Options variable
    # [replica_parallel_workers] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_parallel_workers).
    #
    # @return [Integer]
    attr_accessor :replica_parallel_workers

    # Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections.
    # If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses.
    # See Section 7.1.12.3, \u201CDNS Lookups and the Host Cache\u201D.
    #
    # skipNameResolve corresponds to the MySQL Server System variable
    # [skip_name_resolve] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_skip_name_resolve).
    #
    # @return [BOOLEAN]
    attr_accessor :skip_name_resolve

    # The maximum number of simultaneous connections permitted to any given MySQL user account.
    # A value of 0 (the default) means \u201Cno limit.\u201D This variable has a global value that can be set at server startup or runtime.
    # It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
    #
    # maxUserConnections corresponds to the MySQL Server System variable
    # [max_user_connections] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_user_connections).
    #
    # @return [Integer]
    attr_accessor :max_user_connections

    # The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans.
    # In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes.
    # Increase the value of join_buffer_size to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables.
    # For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
    #
    # joinBufferSize corresponds to the MySQL Server System variable
    # [join_buffer_size] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_join_buffer_size).
    #
    # @return [Integer]
    attr_accessor :join_buffer_size

    # Limit the assumed maximum number of seeks when looking up rows based on a key.
    # The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index,
    # regardless of the actual cardinality of the index (see Section 15.7.7.22, \u201CSHOW INDEX Statement\u201D).
    # By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
    #
    # maxSeeksForKey corresponds to the MySQL Server System variable
    # [max_seeks_for_key] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_seeks_for_key).
    #
    # @return [Integer]
    attr_accessor :max_seeks_for_key

    # The limit on memory consumption for the range optimizer. A value of 0 means \u201Cno limit.\u201D
    # If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit,
    # it abandons the plan and considers other plans.
    #
    # rangeOptimizerMaxMemSize corresponds to the MySQL Server System variable
    # [range_optimizer_max_mem_size] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_range_optimizer_max_mem_size).
    #
    # @return [Integer]
    attr_accessor :range_optimizer_max_mem_size

    # auto_increment_increment and auto_increment_offset are intended for use with circular (source-to-source) replication,
    # and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values,
    # and each can assume an integer value between 1 and 65,535 inclusive.
    #
    # autoIncrementIncrement corresponds to the MySQL Replication Source Options variable
    # [auto_increment_increment] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_increment).
    #
    # @return [Integer]
    attr_accessor :auto_increment_increment

    # This variable has a default value of 1. If it is left with its default value,
    # and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
    #
    # autoIncrementOffset corresponds to the MySQL Replication Source Options variable
    # [auto_increment_offset] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_offset).
    #
    # @return [Integer]
    attr_accessor :auto_increment_offset

    # The lock mode to use for generating auto-increment values.
    # Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
    #
    # innodbAutoincLockMode corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_autoinc_lock_mode] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_autoinc_lock_mode).
    #
    # @return [Integer]
    attr_accessor :innodb_autoinc_lock_mode

    # InnoDB rolls back only the last statement on a transaction timeout by default.
    # If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
    #
    # innodbRollbackOnTimeout corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_rollback_on_timeout] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_rollback_on_timeout).
    #
    # @return [BOOLEAN]
    attr_accessor :innodb_rollback_on_timeout

    # Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
    # There is one such log file for each index being created or table being altered.
    # This log file stores data inserted, updated, or deleted in the table during the DDL operation.
    #
    # innodbOnlineAlterLogMaxSize corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_online_alter_log_max_size] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_online_alter_log_max_size).
    #
    # @return [Integer]
    attr_accessor :innodb_online_alter_log_max_size

    # This variable defines:
    #
    # * The sort buffer size for online DDL operations that create or rebuild secondary indexes.
    #   However, as of MySQL 8.0.27, this responsibility is subsumed by the innodb_ddl_buffer_size variable.
    #
    # * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation,
    #   and the size of the temporary log file read buffer and write buffer.
    #
    # innodbSortBufferSize corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_sort_buffer_size] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_sort_buffer_size).
    #
    # @return [Integer]
    attr_accessor :innodb_sort_buffer_size

    # Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool.
    # When innodb_numa_interleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process.
    # After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT.
    # For the innodb_numa_interleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
    #
    # innodbNumaInterleave corresponds to the MySQL InnoDB Startup Options and System Variables
    # [innodb_numa_interleave] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_numa_interleave).
    #
    # @return [BOOLEAN]
    attr_accessor :innodb_numa_interleave

    # The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance.
    # It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified,
    # the thread pool plugin does not load and the server writes a message to the error log.
    #
    # threadPoolSize corresponds to the MySQL Server System variable
    # [thread_pool_size] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_size).
    #
    # @return [Integer]
    attr_accessor :thread_pool_size

    # If a query takes longer than this many seconds, the server increments the Slow_queries status variable.
    # If the slow query log is enabled, the query is logged to the slow query log file.
    # This value is measured in real time, not CPU time,
    # so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
    #
    # longQueryTime corresponds to the MySQL Server System variable
    # [long_query_time] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_long_query_time).
    #
    # @return [Integer]
    attr_accessor :long_query_time

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        # rubocop:disable Style/SymbolLiteral
        'completion_type': :'completionType',
        'big_tables': :'bigTables',
        'character_set_server': :'characterSetServer',
        'collation_server': :'collationServer',
        'connection_memory_chunk_size': :'connectionMemoryChunkSize',
        'connection_memory_limit': :'connectionMemoryLimit',
        'default_authentication_plugin': :'defaultAuthenticationPlugin',
        'global_connection_memory_limit': :'globalConnectionMemoryLimit',
        'global_connection_memory_tracking': :'globalConnectionMemoryTracking',
        'transaction_isolation': :'transactionIsolation',
        'innodb_ft_server_stopword_table': :'innodbFtServerStopwordTable',
        'mandatory_roles': :'mandatoryRoles',
        'autocommit': :'autocommit',
        'foreign_key_checks': :'foreignKeyChecks',
        'group_replication_consistency': :'groupReplicationConsistency',
        'group_concat_max_len': :'groupConcatMaxLen',
        'innodb_ft_enable_stopword': :'innodbFtEnableStopword',
        'innodb_log_writer_threads': :'innodbLogWriterThreads',
        'local_infile': :'localInfile',
        'mysql_firewall_mode': :'mysqlFirewallMode',
        'mysqlx_enable_hello_notice': :'mysqlxEnableHelloNotice',
        'sql_require_primary_key': :'sqlRequirePrimaryKey',
        'sql_warnings': :'sqlWarnings',
        'binlog_expire_logs_seconds': :'binlogExpireLogsSeconds',
        'binlog_row_metadata': :'binlogRowMetadata',
        'binlog_row_value_options': :'binlogRowValueOptions',
        'binlog_transaction_compression': :'binlogTransactionCompression',
        'innodb_buffer_pool_size': :'innodbBufferPoolSize',
        'innodb_ft_result_cache_limit': :'innodbFtResultCacheLimit',
        'max_binlog_cache_size': :'maxBinlogCacheSize',
        'max_connect_errors': :'maxConnectErrors',
        'max_heap_table_size': :'maxHeapTableSize',
        'max_connections': :'maxConnections',
        'max_prepared_stmt_count': :'maxPreparedStmtCount',
        'connect_timeout': :'connectTimeout',
        'cte_max_recursion_depth': :'cteMaxRecursionDepth',
        'generated_random_password_length': :'generatedRandomPasswordLength',
        'information_schema_stats_expiry': :'informationSchemaStatsExpiry',
        'innodb_buffer_pool_dump_pct': :'innodbBufferPoolDumpPct',
        'innodb_buffer_pool_instances': :'innodbBufferPoolInstances',
        'innodb_ddl_buffer_size': :'innodbDdlBufferSize',
        'innodb_ddl_threads': :'innodbDdlThreads',
        'innodb_ft_max_token_size': :'innodbFtMaxTokenSize',
        'innodb_ft_min_token_size': :'innodbFtMinTokenSize',
        'innodb_ft_num_word_optimize': :'innodbFtNumWordOptimize',
        'innodb_lock_wait_timeout': :'innodbLockWaitTimeout',
        'innodb_max_purge_lag': :'innodbMaxPurgeLag',
        'innodb_max_purge_lag_delay': :'innodbMaxPurgeLagDelay',
        'interactive_timeout': :'interactiveTimeout',
        'innodb_stats_persistent_sample_pages': :'innodbStatsPersistentSamplePages',
        'innodb_stats_transient_sample_pages': :'innodbStatsTransientSamplePages',
        'innodb_strict_mode': :'innodbStrictMode',
        'max_allowed_packet': :'maxAllowedPacket',
        'max_execution_time': :'maxExecutionTime',
        'mysqlx_connect_timeout': :'mysqlxConnectTimeout',
        'mysqlx_document_id_unique_prefix': :'mysqlxDocumentIdUniquePrefix',
        'mysqlx_idle_worker_thread_timeout': :'mysqlxIdleWorkerThreadTimeout',
        'mysqlx_interactive_timeout': :'mysqlxInteractiveTimeout',
        'mysqlx_max_allowed_packet': :'mysqlxMaxAllowedPacket',
        'mysqlx_min_worker_threads': :'mysqlxMinWorkerThreads',
        'mysqlx_read_timeout': :'mysqlxReadTimeout',
        'mysqlx_wait_timeout': :'mysqlxWaitTimeout',
        'mysqlx_write_timeout': :'mysqlxWriteTimeout',
        'net_read_timeout': :'netReadTimeout',
        'net_write_timeout': :'netWriteTimeout',
        'parser_max_mem_size': :'parserMaxMemSize',
        'query_alloc_block_size': :'queryAllocBlockSize',
        'query_prealloc_size': :'queryPreallocSize',
        'regexp_time_limit': :'regexpTimeLimit',
        'sql_mode': :'sqlMode',
        'tmp_table_size': :'tmpTableSize',
        'mysqlx_deflate_default_compression_level': :'mysqlxDeflateDefaultCompressionLevel',
        'mysqlx_deflate_max_client_compression_level': :'mysqlxDeflateMaxClientCompressionLevel',
        'mysqlx_lz4_max_client_compression_level': :'mysqlxLz4MaxClientCompressionLevel',
        'mysqlx_lz4_default_compression_level': :'mysqlxLz4DefaultCompressionLevel',
        'mysqlx_zstd_max_client_compression_level': :'mysqlxZstdMaxClientCompressionLevel',
        'mysqlx_zstd_default_compression_level': :'mysqlxZstdDefaultCompressionLevel',
        'mysql_zstd_default_compression_level': :'mysqlZstdDefaultCompressionLevel',
        'sort_buffer_size': :'sortBufferSize',
        'wait_timeout': :'waitTimeout',
        'thread_pool_dedicated_listeners': :'threadPoolDedicatedListeners',
        'thread_pool_max_transactions_limit': :'threadPoolMaxTransactionsLimit',
        'time_zone': :'timeZone',
        'block_encryption_mode': :'blockEncryptionMode',
        'binlog_group_commit_sync_delay': :'binlogGroupCommitSyncDelay',
        'binlog_group_commit_sync_no_delay_count': :'binlogGroupCommitSyncNoDelayCount',
        'replica_net_timeout': :'replicaNetTimeout',
        'require_secure_transport': :'requireSecureTransport',
        'innodb_redo_log_capacity': :'innodbRedoLogCapacity',
        'thread_pool_transaction_delay': :'threadPoolTransactionDelay',
        'thread_pool_query_threads_per_group': :'threadPoolQueryThreadsPerGroup',
        'explain_format': :'explainFormat',
        'explicit_defaults_for_timestamp': :'explicitDefaultsForTimestamp',
        'sql_generate_invisible_primary_key': :'sqlGenerateInvisiblePrimaryKey',
        'temptable_max_ram': :'temptableMaxRam',
        'innodb_change_buffering': :'innodbChangeBuffering',
        'innodb_adaptive_hash_index': :'innodbAdaptiveHashIndex',
        'innodb_undo_log_truncate': :'innodbUndoLogTruncate',
        'table_definition_cache': :'tableDefinitionCache',
        'table_open_cache': :'tableOpenCache',
        'relay_log_space_limit': :'relayLogSpaceLimit',
        'optimizer_switch': :'optimizerSwitch',
        'replica_type_conversions': :'replicaTypeConversions',
        'replica_parallel_workers': :'replicaParallelWorkers',
        'skip_name_resolve': :'skipNameResolve',
        'max_user_connections': :'maxUserConnections',
        'join_buffer_size': :'joinBufferSize',
        'max_seeks_for_key': :'maxSeeksForKey',
        'range_optimizer_max_mem_size': :'rangeOptimizerMaxMemSize',
        'auto_increment_increment': :'autoIncrementIncrement',
        'auto_increment_offset': :'autoIncrementOffset',
        'innodb_autoinc_lock_mode': :'innodbAutoincLockMode',
        'innodb_rollback_on_timeout': :'innodbRollbackOnTimeout',
        'innodb_online_alter_log_max_size': :'innodbOnlineAlterLogMaxSize',
        'innodb_sort_buffer_size': :'innodbSortBufferSize',
        'innodb_numa_interleave': :'innodbNumaInterleave',
        'thread_pool_size': :'threadPoolSize',
        'long_query_time': :'longQueryTime'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        # rubocop:disable Style/SymbolLiteral
        'completion_type': :'String',
        'big_tables': :'BOOLEAN',
        'character_set_server': :'String',
        'collation_server': :'String',
        'connection_memory_chunk_size': :'Integer',
        'connection_memory_limit': :'Integer',
        'default_authentication_plugin': :'String',
        'global_connection_memory_limit': :'Integer',
        'global_connection_memory_tracking': :'BOOLEAN',
        'transaction_isolation': :'String',
        'innodb_ft_server_stopword_table': :'String',
        'mandatory_roles': :'String',
        'autocommit': :'BOOLEAN',
        'foreign_key_checks': :'BOOLEAN',
        'group_replication_consistency': :'String',
        'group_concat_max_len': :'Integer',
        'innodb_ft_enable_stopword': :'BOOLEAN',
        'innodb_log_writer_threads': :'BOOLEAN',
        'local_infile': :'BOOLEAN',
        'mysql_firewall_mode': :'BOOLEAN',
        'mysqlx_enable_hello_notice': :'BOOLEAN',
        'sql_require_primary_key': :'BOOLEAN',
        'sql_warnings': :'BOOLEAN',
        'binlog_expire_logs_seconds': :'Integer',
        'binlog_row_metadata': :'String',
        'binlog_row_value_options': :'String',
        'binlog_transaction_compression': :'BOOLEAN',
        'innodb_buffer_pool_size': :'Integer',
        'innodb_ft_result_cache_limit': :'Integer',
        'max_binlog_cache_size': :'Integer',
        'max_connect_errors': :'Integer',
        'max_heap_table_size': :'Integer',
        'max_connections': :'Integer',
        'max_prepared_stmt_count': :'Integer',
        'connect_timeout': :'Integer',
        'cte_max_recursion_depth': :'Integer',
        'generated_random_password_length': :'Integer',
        'information_schema_stats_expiry': :'Integer',
        'innodb_buffer_pool_dump_pct': :'Integer',
        'innodb_buffer_pool_instances': :'Integer',
        'innodb_ddl_buffer_size': :'Integer',
        'innodb_ddl_threads': :'Integer',
        'innodb_ft_max_token_size': :'Integer',
        'innodb_ft_min_token_size': :'Integer',
        'innodb_ft_num_word_optimize': :'Integer',
        'innodb_lock_wait_timeout': :'Integer',
        'innodb_max_purge_lag': :'Integer',
        'innodb_max_purge_lag_delay': :'Integer',
        'interactive_timeout': :'Integer',
        'innodb_stats_persistent_sample_pages': :'Integer',
        'innodb_stats_transient_sample_pages': :'Integer',
        'innodb_strict_mode': :'BOOLEAN',
        'max_allowed_packet': :'Integer',
        'max_execution_time': :'Integer',
        'mysqlx_connect_timeout': :'Integer',
        'mysqlx_document_id_unique_prefix': :'Integer',
        'mysqlx_idle_worker_thread_timeout': :'Integer',
        'mysqlx_interactive_timeout': :'Integer',
        'mysqlx_max_allowed_packet': :'Integer',
        'mysqlx_min_worker_threads': :'Integer',
        'mysqlx_read_timeout': :'Integer',
        'mysqlx_wait_timeout': :'Integer',
        'mysqlx_write_timeout': :'Integer',
        'net_read_timeout': :'Integer',
        'net_write_timeout': :'Integer',
        'parser_max_mem_size': :'Integer',
        'query_alloc_block_size': :'Integer',
        'query_prealloc_size': :'Integer',
        'regexp_time_limit': :'Integer',
        'sql_mode': :'String',
        'tmp_table_size': :'Integer',
        'mysqlx_deflate_default_compression_level': :'Integer',
        'mysqlx_deflate_max_client_compression_level': :'Integer',
        'mysqlx_lz4_max_client_compression_level': :'Integer',
        'mysqlx_lz4_default_compression_level': :'Integer',
        'mysqlx_zstd_max_client_compression_level': :'Integer',
        'mysqlx_zstd_default_compression_level': :'Integer',
        'mysql_zstd_default_compression_level': :'Integer',
        'sort_buffer_size': :'Integer',
        'wait_timeout': :'Integer',
        'thread_pool_dedicated_listeners': :'BOOLEAN',
        'thread_pool_max_transactions_limit': :'Integer',
        'time_zone': :'String',
        'block_encryption_mode': :'String',
        'binlog_group_commit_sync_delay': :'Integer',
        'binlog_group_commit_sync_no_delay_count': :'Integer',
        'replica_net_timeout': :'Integer',
        'require_secure_transport': :'BOOLEAN',
        'innodb_redo_log_capacity': :'Integer',
        'thread_pool_transaction_delay': :'Integer',
        'thread_pool_query_threads_per_group': :'Integer',
        'explain_format': :'String',
        'explicit_defaults_for_timestamp': :'BOOLEAN',
        'sql_generate_invisible_primary_key': :'BOOLEAN',
        'temptable_max_ram': :'Integer',
        'innodb_change_buffering': :'String',
        'innodb_adaptive_hash_index': :'BOOLEAN',
        'innodb_undo_log_truncate': :'BOOLEAN',
        'table_definition_cache': :'Integer',
        'table_open_cache': :'Integer',
        'relay_log_space_limit': :'Integer',
        'optimizer_switch': :'String',
        'replica_type_conversions': :'String',
        'replica_parallel_workers': :'Integer',
        'skip_name_resolve': :'BOOLEAN',
        'max_user_connections': :'Integer',
        'join_buffer_size': :'Integer',
        'max_seeks_for_key': :'Integer',
        'range_optimizer_max_mem_size': :'Integer',
        'auto_increment_increment': :'Integer',
        'auto_increment_offset': :'Integer',
        'innodb_autoinc_lock_mode': :'Integer',
        'innodb_rollback_on_timeout': :'BOOLEAN',
        'innodb_online_alter_log_max_size': :'Integer',
        'innodb_sort_buffer_size': :'Integer',
        'innodb_numa_interleave': :'BOOLEAN',
        'thread_pool_size': :'Integer',
        'long_query_time': :'Integer'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral


    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    # @option attributes [String] :completion_type The value to assign to the {#completion_type} property
    # @option attributes [BOOLEAN] :big_tables The value to assign to the {#big_tables} property
    # @option attributes [String] :character_set_server The value to assign to the {#character_set_server} property
    # @option attributes [String] :collation_server The value to assign to the {#collation_server} property
    # @option attributes [Integer] :connection_memory_chunk_size The value to assign to the {#connection_memory_chunk_size} property
    # @option attributes [Integer] :connection_memory_limit The value to assign to the {#connection_memory_limit} property
    # @option attributes [String] :default_authentication_plugin The value to assign to the {#default_authentication_plugin} property
    # @option attributes [Integer] :global_connection_memory_limit The value to assign to the {#global_connection_memory_limit} property
    # @option attributes [BOOLEAN] :global_connection_memory_tracking The value to assign to the {#global_connection_memory_tracking} property
    # @option attributes [String] :transaction_isolation The value to assign to the {#transaction_isolation} property
    # @option attributes [String] :innodb_ft_server_stopword_table The value to assign to the {#innodb_ft_server_stopword_table} property
    # @option attributes [String] :mandatory_roles The value to assign to the {#mandatory_roles} property
    # @option attributes [BOOLEAN] :autocommit The value to assign to the {#autocommit} property
    # @option attributes [BOOLEAN] :foreign_key_checks The value to assign to the {#foreign_key_checks} property
    # @option attributes [String] :group_replication_consistency The value to assign to the {#group_replication_consistency} property
    # @option attributes [Integer] :group_concat_max_len The value to assign to the {#group_concat_max_len} property
    # @option attributes [BOOLEAN] :innodb_ft_enable_stopword The value to assign to the {#innodb_ft_enable_stopword} property
    # @option attributes [BOOLEAN] :innodb_log_writer_threads The value to assign to the {#innodb_log_writer_threads} property
    # @option attributes [BOOLEAN] :local_infile The value to assign to the {#local_infile} property
    # @option attributes [BOOLEAN] :mysql_firewall_mode The value to assign to the {#mysql_firewall_mode} property
    # @option attributes [BOOLEAN] :mysqlx_enable_hello_notice The value to assign to the {#mysqlx_enable_hello_notice} property
    # @option attributes [BOOLEAN] :sql_require_primary_key The value to assign to the {#sql_require_primary_key} property
    # @option attributes [BOOLEAN] :sql_warnings The value to assign to the {#sql_warnings} property
    # @option attributes [Integer] :binlog_expire_logs_seconds The value to assign to the {#binlog_expire_logs_seconds} property
    # @option attributes [String] :binlog_row_metadata The value to assign to the {#binlog_row_metadata} property
    # @option attributes [String] :binlog_row_value_options The value to assign to the {#binlog_row_value_options} property
    # @option attributes [BOOLEAN] :binlog_transaction_compression The value to assign to the {#binlog_transaction_compression} property
    # @option attributes [Integer] :innodb_buffer_pool_size The value to assign to the {#innodb_buffer_pool_size} property
    # @option attributes [Integer] :innodb_ft_result_cache_limit The value to assign to the {#innodb_ft_result_cache_limit} property
    # @option attributes [Integer] :max_binlog_cache_size The value to assign to the {#max_binlog_cache_size} property
    # @option attributes [Integer] :max_connect_errors The value to assign to the {#max_connect_errors} property
    # @option attributes [Integer] :max_heap_table_size The value to assign to the {#max_heap_table_size} property
    # @option attributes [Integer] :max_connections The value to assign to the {#max_connections} property
    # @option attributes [Integer] :max_prepared_stmt_count The value to assign to the {#max_prepared_stmt_count} property
    # @option attributes [Integer] :connect_timeout The value to assign to the {#connect_timeout} property
    # @option attributes [Integer] :cte_max_recursion_depth The value to assign to the {#cte_max_recursion_depth} property
    # @option attributes [Integer] :generated_random_password_length The value to assign to the {#generated_random_password_length} property
    # @option attributes [Integer] :information_schema_stats_expiry The value to assign to the {#information_schema_stats_expiry} property
    # @option attributes [Integer] :innodb_buffer_pool_dump_pct The value to assign to the {#innodb_buffer_pool_dump_pct} property
    # @option attributes [Integer] :innodb_buffer_pool_instances The value to assign to the {#innodb_buffer_pool_instances} property
    # @option attributes [Integer] :innodb_ddl_buffer_size The value to assign to the {#innodb_ddl_buffer_size} property
    # @option attributes [Integer] :innodb_ddl_threads The value to assign to the {#innodb_ddl_threads} property
    # @option attributes [Integer] :innodb_ft_max_token_size The value to assign to the {#innodb_ft_max_token_size} property
    # @option attributes [Integer] :innodb_ft_min_token_size The value to assign to the {#innodb_ft_min_token_size} property
    # @option attributes [Integer] :innodb_ft_num_word_optimize The value to assign to the {#innodb_ft_num_word_optimize} property
    # @option attributes [Integer] :innodb_lock_wait_timeout The value to assign to the {#innodb_lock_wait_timeout} property
    # @option attributes [Integer] :innodb_max_purge_lag The value to assign to the {#innodb_max_purge_lag} property
    # @option attributes [Integer] :innodb_max_purge_lag_delay The value to assign to the {#innodb_max_purge_lag_delay} property
    # @option attributes [Integer] :interactive_timeout The value to assign to the {#interactive_timeout} property
    # @option attributes [Integer] :innodb_stats_persistent_sample_pages The value to assign to the {#innodb_stats_persistent_sample_pages} property
    # @option attributes [Integer] :innodb_stats_transient_sample_pages The value to assign to the {#innodb_stats_transient_sample_pages} property
    # @option attributes [BOOLEAN] :innodb_strict_mode The value to assign to the {#innodb_strict_mode} property
    # @option attributes [Integer] :max_allowed_packet The value to assign to the {#max_allowed_packet} property
    # @option attributes [Integer] :max_execution_time The value to assign to the {#max_execution_time} property
    # @option attributes [Integer] :mysqlx_connect_timeout The value to assign to the {#mysqlx_connect_timeout} property
    # @option attributes [Integer] :mysqlx_document_id_unique_prefix The value to assign to the {#mysqlx_document_id_unique_prefix} property
    # @option attributes [Integer] :mysqlx_idle_worker_thread_timeout The value to assign to the {#mysqlx_idle_worker_thread_timeout} property
    # @option attributes [Integer] :mysqlx_interactive_timeout The value to assign to the {#mysqlx_interactive_timeout} property
    # @option attributes [Integer] :mysqlx_max_allowed_packet The value to assign to the {#mysqlx_max_allowed_packet} property
    # @option attributes [Integer] :mysqlx_min_worker_threads The value to assign to the {#mysqlx_min_worker_threads} property
    # @option attributes [Integer] :mysqlx_read_timeout The value to assign to the {#mysqlx_read_timeout} property
    # @option attributes [Integer] :mysqlx_wait_timeout The value to assign to the {#mysqlx_wait_timeout} property
    # @option attributes [Integer] :mysqlx_write_timeout The value to assign to the {#mysqlx_write_timeout} property
    # @option attributes [Integer] :net_read_timeout The value to assign to the {#net_read_timeout} property
    # @option attributes [Integer] :net_write_timeout The value to assign to the {#net_write_timeout} property
    # @option attributes [Integer] :parser_max_mem_size The value to assign to the {#parser_max_mem_size} property
    # @option attributes [Integer] :query_alloc_block_size The value to assign to the {#query_alloc_block_size} property
    # @option attributes [Integer] :query_prealloc_size The value to assign to the {#query_prealloc_size} property
    # @option attributes [Integer] :regexp_time_limit The value to assign to the {#regexp_time_limit} property
    # @option attributes [String] :sql_mode The value to assign to the {#sql_mode} property
    # @option attributes [Integer] :tmp_table_size The value to assign to the {#tmp_table_size} property
    # @option attributes [Integer] :mysqlx_deflate_default_compression_level The value to assign to the {#mysqlx_deflate_default_compression_level} property
    # @option attributes [Integer] :mysqlx_deflate_max_client_compression_level The value to assign to the {#mysqlx_deflate_max_client_compression_level} property
    # @option attributes [Integer] :mysqlx_lz4_max_client_compression_level The value to assign to the {#mysqlx_lz4_max_client_compression_level} property
    # @option attributes [Integer] :mysqlx_lz4_default_compression_level The value to assign to the {#mysqlx_lz4_default_compression_level} property
    # @option attributes [Integer] :mysqlx_zstd_max_client_compression_level The value to assign to the {#mysqlx_zstd_max_client_compression_level} property
    # @option attributes [Integer] :mysqlx_zstd_default_compression_level The value to assign to the {#mysqlx_zstd_default_compression_level} property
    # @option attributes [Integer] :mysql_zstd_default_compression_level The value to assign to the {#mysql_zstd_default_compression_level} property
    # @option attributes [Integer] :sort_buffer_size The value to assign to the {#sort_buffer_size} property
    # @option attributes [Integer] :wait_timeout The value to assign to the {#wait_timeout} property
    # @option attributes [BOOLEAN] :thread_pool_dedicated_listeners The value to assign to the {#thread_pool_dedicated_listeners} property
    # @option attributes [Integer] :thread_pool_max_transactions_limit The value to assign to the {#thread_pool_max_transactions_limit} property
    # @option attributes [String] :time_zone The value to assign to the {#time_zone} property
    # @option attributes [String] :block_encryption_mode The value to assign to the {#block_encryption_mode} property
    # @option attributes [Integer] :binlog_group_commit_sync_delay The value to assign to the {#binlog_group_commit_sync_delay} property
    # @option attributes [Integer] :binlog_group_commit_sync_no_delay_count The value to assign to the {#binlog_group_commit_sync_no_delay_count} property
    # @option attributes [Integer] :replica_net_timeout The value to assign to the {#replica_net_timeout} property
    # @option attributes [BOOLEAN] :require_secure_transport The value to assign to the {#require_secure_transport} property
    # @option attributes [Integer] :innodb_redo_log_capacity The value to assign to the {#innodb_redo_log_capacity} property
    # @option attributes [Integer] :thread_pool_transaction_delay The value to assign to the {#thread_pool_transaction_delay} property
    # @option attributes [Integer] :thread_pool_query_threads_per_group The value to assign to the {#thread_pool_query_threads_per_group} property
    # @option attributes [String] :explain_format The value to assign to the {#explain_format} property
    # @option attributes [BOOLEAN] :explicit_defaults_for_timestamp The value to assign to the {#explicit_defaults_for_timestamp} property
    # @option attributes [BOOLEAN] :sql_generate_invisible_primary_key The value to assign to the {#sql_generate_invisible_primary_key} property
    # @option attributes [Integer] :temptable_max_ram The value to assign to the {#temptable_max_ram} property
    # @option attributes [String] :innodb_change_buffering The value to assign to the {#innodb_change_buffering} property
    # @option attributes [BOOLEAN] :innodb_adaptive_hash_index The value to assign to the {#innodb_adaptive_hash_index} property
    # @option attributes [BOOLEAN] :innodb_undo_log_truncate The value to assign to the {#innodb_undo_log_truncate} property
    # @option attributes [Integer] :table_definition_cache The value to assign to the {#table_definition_cache} property
    # @option attributes [Integer] :table_open_cache The value to assign to the {#table_open_cache} property
    # @option attributes [Integer] :relay_log_space_limit The value to assign to the {#relay_log_space_limit} property
    # @option attributes [String] :optimizer_switch The value to assign to the {#optimizer_switch} property
    # @option attributes [String] :replica_type_conversions The value to assign to the {#replica_type_conversions} property
    # @option attributes [Integer] :replica_parallel_workers The value to assign to the {#replica_parallel_workers} property
    # @option attributes [BOOLEAN] :skip_name_resolve The value to assign to the {#skip_name_resolve} property
    # @option attributes [Integer] :max_user_connections The value to assign to the {#max_user_connections} property
    # @option attributes [Integer] :join_buffer_size The value to assign to the {#join_buffer_size} property
    # @option attributes [Integer] :max_seeks_for_key The value to assign to the {#max_seeks_for_key} property
    # @option attributes [Integer] :range_optimizer_max_mem_size The value to assign to the {#range_optimizer_max_mem_size} property
    # @option attributes [Integer] :auto_increment_increment The value to assign to the {#auto_increment_increment} property
    # @option attributes [Integer] :auto_increment_offset The value to assign to the {#auto_increment_offset} property
    # @option attributes [Integer] :innodb_autoinc_lock_mode The value to assign to the {#innodb_autoinc_lock_mode} property
    # @option attributes [BOOLEAN] :innodb_rollback_on_timeout The value to assign to the {#innodb_rollback_on_timeout} property
    # @option attributes [Integer] :innodb_online_alter_log_max_size The value to assign to the {#innodb_online_alter_log_max_size} property
    # @option attributes [Integer] :innodb_sort_buffer_size The value to assign to the {#innodb_sort_buffer_size} property
    # @option attributes [BOOLEAN] :innodb_numa_interleave The value to assign to the {#innodb_numa_interleave} property
    # @option attributes [Integer] :thread_pool_size The value to assign to the {#thread_pool_size} property
    # @option attributes [Integer] :long_query_time The value to assign to the {#long_query_time} property
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      self.completion_type = attributes[:'completionType'] if attributes[:'completionType']
      self.completion_type = "NO_CHAIN" if completion_type.nil? && !attributes.key?(:'completionType') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :completionType and :completion_type' if attributes.key?(:'completionType') && attributes.key?(:'completion_type')

      self.completion_type = attributes[:'completion_type'] if attributes[:'completion_type']
      self.completion_type = "NO_CHAIN" if completion_type.nil? && !attributes.key?(:'completionType') && !attributes.key?(:'completion_type') # rubocop:disable Style/StringLiterals

      self.big_tables = attributes[:'bigTables'] unless attributes[:'bigTables'].nil?
      self.big_tables = false if big_tables.nil? && !attributes.key?(:'bigTables') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :bigTables and :big_tables' if attributes.key?(:'bigTables') && attributes.key?(:'big_tables')

      self.big_tables = attributes[:'big_tables'] unless attributes[:'big_tables'].nil?
      self.big_tables = false if big_tables.nil? && !attributes.key?(:'bigTables') && !attributes.key?(:'big_tables') # rubocop:disable Style/StringLiterals

      self.character_set_server = attributes[:'characterSetServer'] if attributes[:'characterSetServer']

      raise 'You cannot provide both :characterSetServer and :character_set_server' if attributes.key?(:'characterSetServer') && attributes.key?(:'character_set_server')

      self.character_set_server = attributes[:'character_set_server'] if attributes[:'character_set_server']

      self.collation_server = attributes[:'collationServer'] if attributes[:'collationServer']

      raise 'You cannot provide both :collationServer and :collation_server' if attributes.key?(:'collationServer') && attributes.key?(:'collation_server')

      self.collation_server = attributes[:'collation_server'] if attributes[:'collation_server']

      self.connection_memory_chunk_size = attributes[:'connectionMemoryChunkSize'] if attributes[:'connectionMemoryChunkSize']

      raise 'You cannot provide both :connectionMemoryChunkSize and :connection_memory_chunk_size' if attributes.key?(:'connectionMemoryChunkSize') && attributes.key?(:'connection_memory_chunk_size')

      self.connection_memory_chunk_size = attributes[:'connection_memory_chunk_size'] if attributes[:'connection_memory_chunk_size']

      self.connection_memory_limit = attributes[:'connectionMemoryLimit'] if attributes[:'connectionMemoryLimit']

      raise 'You cannot provide both :connectionMemoryLimit and :connection_memory_limit' if attributes.key?(:'connectionMemoryLimit') && attributes.key?(:'connection_memory_limit')

      self.connection_memory_limit = attributes[:'connection_memory_limit'] if attributes[:'connection_memory_limit']

      self.default_authentication_plugin = attributes[:'defaultAuthenticationPlugin'] if attributes[:'defaultAuthenticationPlugin']
      self.default_authentication_plugin = "caching_sha2_password" if default_authentication_plugin.nil? && !attributes.key?(:'defaultAuthenticationPlugin') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :defaultAuthenticationPlugin and :default_authentication_plugin' if attributes.key?(:'defaultAuthenticationPlugin') && attributes.key?(:'default_authentication_plugin')

      self.default_authentication_plugin = attributes[:'default_authentication_plugin'] if attributes[:'default_authentication_plugin']
      self.default_authentication_plugin = "caching_sha2_password" if default_authentication_plugin.nil? && !attributes.key?(:'defaultAuthenticationPlugin') && !attributes.key?(:'default_authentication_plugin') # rubocop:disable Style/StringLiterals

      self.global_connection_memory_limit = attributes[:'globalConnectionMemoryLimit'] if attributes[:'globalConnectionMemoryLimit']

      raise 'You cannot provide both :globalConnectionMemoryLimit and :global_connection_memory_limit' if attributes.key?(:'globalConnectionMemoryLimit') && attributes.key?(:'global_connection_memory_limit')

      self.global_connection_memory_limit = attributes[:'global_connection_memory_limit'] if attributes[:'global_connection_memory_limit']

      self.global_connection_memory_tracking = attributes[:'globalConnectionMemoryTracking'] unless attributes[:'globalConnectionMemoryTracking'].nil?
      self.global_connection_memory_tracking = false if global_connection_memory_tracking.nil? && !attributes.key?(:'globalConnectionMemoryTracking') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :globalConnectionMemoryTracking and :global_connection_memory_tracking' if attributes.key?(:'globalConnectionMemoryTracking') && attributes.key?(:'global_connection_memory_tracking')

      self.global_connection_memory_tracking = attributes[:'global_connection_memory_tracking'] unless attributes[:'global_connection_memory_tracking'].nil?
      self.global_connection_memory_tracking = false if global_connection_memory_tracking.nil? && !attributes.key?(:'globalConnectionMemoryTracking') && !attributes.key?(:'global_connection_memory_tracking') # rubocop:disable Style/StringLiterals

      self.transaction_isolation = attributes[:'transactionIsolation'] if attributes[:'transactionIsolation']
      self.transaction_isolation = "REPEATABLE-READ" if transaction_isolation.nil? && !attributes.key?(:'transactionIsolation') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :transactionIsolation and :transaction_isolation' if attributes.key?(:'transactionIsolation') && attributes.key?(:'transaction_isolation')

      self.transaction_isolation = attributes[:'transaction_isolation'] if attributes[:'transaction_isolation']
      self.transaction_isolation = "REPEATABLE-READ" if transaction_isolation.nil? && !attributes.key?(:'transactionIsolation') && !attributes.key?(:'transaction_isolation') # rubocop:disable Style/StringLiterals

      self.innodb_ft_server_stopword_table = attributes[:'innodbFtServerStopwordTable'] if attributes[:'innodbFtServerStopwordTable']
      self.innodb_ft_server_stopword_table = "null" if innodb_ft_server_stopword_table.nil? && !attributes.key?(:'innodbFtServerStopwordTable') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbFtServerStopwordTable and :innodb_ft_server_stopword_table' if attributes.key?(:'innodbFtServerStopwordTable') && attributes.key?(:'innodb_ft_server_stopword_table')

      self.innodb_ft_server_stopword_table = attributes[:'innodb_ft_server_stopword_table'] if attributes[:'innodb_ft_server_stopword_table']
      self.innodb_ft_server_stopword_table = "null" if innodb_ft_server_stopword_table.nil? && !attributes.key?(:'innodbFtServerStopwordTable') && !attributes.key?(:'innodb_ft_server_stopword_table') # rubocop:disable Style/StringLiterals

      self.mandatory_roles = attributes[:'mandatoryRoles'] if attributes[:'mandatoryRoles']
      self.mandatory_roles = "" if mandatory_roles.nil? && !attributes.key?(:'mandatoryRoles') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :mandatoryRoles and :mandatory_roles' if attributes.key?(:'mandatoryRoles') && attributes.key?(:'mandatory_roles')

      self.mandatory_roles = attributes[:'mandatory_roles'] if attributes[:'mandatory_roles']
      self.mandatory_roles = "" if mandatory_roles.nil? && !attributes.key?(:'mandatoryRoles') && !attributes.key?(:'mandatory_roles') # rubocop:disable Style/StringLiterals

      self.autocommit = attributes[:'autocommit'] unless attributes[:'autocommit'].nil?
      self.autocommit = true if autocommit.nil? && !attributes.key?(:'autocommit') # rubocop:disable Style/StringLiterals

      self.foreign_key_checks = attributes[:'foreignKeyChecks'] unless attributes[:'foreignKeyChecks'].nil?
      self.foreign_key_checks = true if foreign_key_checks.nil? && !attributes.key?(:'foreignKeyChecks') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :foreignKeyChecks and :foreign_key_checks' if attributes.key?(:'foreignKeyChecks') && attributes.key?(:'foreign_key_checks')

      self.foreign_key_checks = attributes[:'foreign_key_checks'] unless attributes[:'foreign_key_checks'].nil?
      self.foreign_key_checks = true if foreign_key_checks.nil? && !attributes.key?(:'foreignKeyChecks') && !attributes.key?(:'foreign_key_checks') # rubocop:disable Style/StringLiterals

      self.group_replication_consistency = attributes[:'groupReplicationConsistency'] if attributes[:'groupReplicationConsistency']
      self.group_replication_consistency = "BEFORE_ON_PRIMARY_FAILOVER" if group_replication_consistency.nil? && !attributes.key?(:'groupReplicationConsistency') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :groupReplicationConsistency and :group_replication_consistency' if attributes.key?(:'groupReplicationConsistency') && attributes.key?(:'group_replication_consistency')

      self.group_replication_consistency = attributes[:'group_replication_consistency'] if attributes[:'group_replication_consistency']
      self.group_replication_consistency = "BEFORE_ON_PRIMARY_FAILOVER" if group_replication_consistency.nil? && !attributes.key?(:'groupReplicationConsistency') && !attributes.key?(:'group_replication_consistency') # rubocop:disable Style/StringLiterals

      self.group_concat_max_len = attributes[:'groupConcatMaxLen'] if attributes[:'groupConcatMaxLen']
      self.group_concat_max_len = 1024 if group_concat_max_len.nil? && !attributes.key?(:'groupConcatMaxLen') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :groupConcatMaxLen and :group_concat_max_len' if attributes.key?(:'groupConcatMaxLen') && attributes.key?(:'group_concat_max_len')

      self.group_concat_max_len = attributes[:'group_concat_max_len'] if attributes[:'group_concat_max_len']
      self.group_concat_max_len = 1024 if group_concat_max_len.nil? && !attributes.key?(:'groupConcatMaxLen') && !attributes.key?(:'group_concat_max_len') # rubocop:disable Style/StringLiterals

      self.innodb_ft_enable_stopword = attributes[:'innodbFtEnableStopword'] unless attributes[:'innodbFtEnableStopword'].nil?
      self.innodb_ft_enable_stopword = true if innodb_ft_enable_stopword.nil? && !attributes.key?(:'innodbFtEnableStopword') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbFtEnableStopword and :innodb_ft_enable_stopword' if attributes.key?(:'innodbFtEnableStopword') && attributes.key?(:'innodb_ft_enable_stopword')

      self.innodb_ft_enable_stopword = attributes[:'innodb_ft_enable_stopword'] unless attributes[:'innodb_ft_enable_stopword'].nil?
      self.innodb_ft_enable_stopword = true if innodb_ft_enable_stopword.nil? && !attributes.key?(:'innodbFtEnableStopword') && !attributes.key?(:'innodb_ft_enable_stopword') # rubocop:disable Style/StringLiterals

      self.innodb_log_writer_threads = attributes[:'innodbLogWriterThreads'] unless attributes[:'innodbLogWriterThreads'].nil?
      self.innodb_log_writer_threads = true if innodb_log_writer_threads.nil? && !attributes.key?(:'innodbLogWriterThreads') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbLogWriterThreads and :innodb_log_writer_threads' if attributes.key?(:'innodbLogWriterThreads') && attributes.key?(:'innodb_log_writer_threads')

      self.innodb_log_writer_threads = attributes[:'innodb_log_writer_threads'] unless attributes[:'innodb_log_writer_threads'].nil?
      self.innodb_log_writer_threads = true if innodb_log_writer_threads.nil? && !attributes.key?(:'innodbLogWriterThreads') && !attributes.key?(:'innodb_log_writer_threads') # rubocop:disable Style/StringLiterals

      self.local_infile = attributes[:'localInfile'] unless attributes[:'localInfile'].nil?
      self.local_infile = false if local_infile.nil? && !attributes.key?(:'localInfile') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :localInfile and :local_infile' if attributes.key?(:'localInfile') && attributes.key?(:'local_infile')

      self.local_infile = attributes[:'local_infile'] unless attributes[:'local_infile'].nil?
      self.local_infile = false if local_infile.nil? && !attributes.key?(:'localInfile') && !attributes.key?(:'local_infile') # rubocop:disable Style/StringLiterals

      self.mysql_firewall_mode = attributes[:'mysqlFirewallMode'] unless attributes[:'mysqlFirewallMode'].nil?
      self.mysql_firewall_mode = true if mysql_firewall_mode.nil? && !attributes.key?(:'mysqlFirewallMode') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :mysqlFirewallMode and :mysql_firewall_mode' if attributes.key?(:'mysqlFirewallMode') && attributes.key?(:'mysql_firewall_mode')

      self.mysql_firewall_mode = attributes[:'mysql_firewall_mode'] unless attributes[:'mysql_firewall_mode'].nil?
      self.mysql_firewall_mode = true if mysql_firewall_mode.nil? && !attributes.key?(:'mysqlFirewallMode') && !attributes.key?(:'mysql_firewall_mode') # rubocop:disable Style/StringLiterals

      self.mysqlx_enable_hello_notice = attributes[:'mysqlxEnableHelloNotice'] unless attributes[:'mysqlxEnableHelloNotice'].nil?
      self.mysqlx_enable_hello_notice = true if mysqlx_enable_hello_notice.nil? && !attributes.key?(:'mysqlxEnableHelloNotice') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :mysqlxEnableHelloNotice and :mysqlx_enable_hello_notice' if attributes.key?(:'mysqlxEnableHelloNotice') && attributes.key?(:'mysqlx_enable_hello_notice')

      self.mysqlx_enable_hello_notice = attributes[:'mysqlx_enable_hello_notice'] unless attributes[:'mysqlx_enable_hello_notice'].nil?
      self.mysqlx_enable_hello_notice = true if mysqlx_enable_hello_notice.nil? && !attributes.key?(:'mysqlxEnableHelloNotice') && !attributes.key?(:'mysqlx_enable_hello_notice') # rubocop:disable Style/StringLiterals

      self.sql_require_primary_key = attributes[:'sqlRequirePrimaryKey'] unless attributes[:'sqlRequirePrimaryKey'].nil?
      self.sql_require_primary_key = false if sql_require_primary_key.nil? && !attributes.key?(:'sqlRequirePrimaryKey') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :sqlRequirePrimaryKey and :sql_require_primary_key' if attributes.key?(:'sqlRequirePrimaryKey') && attributes.key?(:'sql_require_primary_key')

      self.sql_require_primary_key = attributes[:'sql_require_primary_key'] unless attributes[:'sql_require_primary_key'].nil?
      self.sql_require_primary_key = false if sql_require_primary_key.nil? && !attributes.key?(:'sqlRequirePrimaryKey') && !attributes.key?(:'sql_require_primary_key') # rubocop:disable Style/StringLiterals

      self.sql_warnings = attributes[:'sqlWarnings'] unless attributes[:'sqlWarnings'].nil?
      self.sql_warnings = false if sql_warnings.nil? && !attributes.key?(:'sqlWarnings') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :sqlWarnings and :sql_warnings' if attributes.key?(:'sqlWarnings') && attributes.key?(:'sql_warnings')

      self.sql_warnings = attributes[:'sql_warnings'] unless attributes[:'sql_warnings'].nil?
      self.sql_warnings = false if sql_warnings.nil? && !attributes.key?(:'sqlWarnings') && !attributes.key?(:'sql_warnings') # rubocop:disable Style/StringLiterals

      self.binlog_expire_logs_seconds = attributes[:'binlogExpireLogsSeconds'] if attributes[:'binlogExpireLogsSeconds']

      raise 'You cannot provide both :binlogExpireLogsSeconds and :binlog_expire_logs_seconds' if attributes.key?(:'binlogExpireLogsSeconds') && attributes.key?(:'binlog_expire_logs_seconds')

      self.binlog_expire_logs_seconds = attributes[:'binlog_expire_logs_seconds'] if attributes[:'binlog_expire_logs_seconds']

      self.binlog_row_metadata = attributes[:'binlogRowMetadata'] if attributes[:'binlogRowMetadata']
      self.binlog_row_metadata = "MINIMAL" if binlog_row_metadata.nil? && !attributes.key?(:'binlogRowMetadata') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :binlogRowMetadata and :binlog_row_metadata' if attributes.key?(:'binlogRowMetadata') && attributes.key?(:'binlog_row_metadata')

      self.binlog_row_metadata = attributes[:'binlog_row_metadata'] if attributes[:'binlog_row_metadata']
      self.binlog_row_metadata = "MINIMAL" if binlog_row_metadata.nil? && !attributes.key?(:'binlogRowMetadata') && !attributes.key?(:'binlog_row_metadata') # rubocop:disable Style/StringLiterals

      self.binlog_row_value_options = attributes[:'binlogRowValueOptions'] if attributes[:'binlogRowValueOptions']
      self.binlog_row_value_options = "PARTIAL_JSON" if binlog_row_value_options.nil? && !attributes.key?(:'binlogRowValueOptions') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :binlogRowValueOptions and :binlog_row_value_options' if attributes.key?(:'binlogRowValueOptions') && attributes.key?(:'binlog_row_value_options')

      self.binlog_row_value_options = attributes[:'binlog_row_value_options'] if attributes[:'binlog_row_value_options']
      self.binlog_row_value_options = "PARTIAL_JSON" if binlog_row_value_options.nil? && !attributes.key?(:'binlogRowValueOptions') && !attributes.key?(:'binlog_row_value_options') # rubocop:disable Style/StringLiterals

      self.binlog_transaction_compression = attributes[:'binlogTransactionCompression'] unless attributes[:'binlogTransactionCompression'].nil?
      self.binlog_transaction_compression = true if binlog_transaction_compression.nil? && !attributes.key?(:'binlogTransactionCompression') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :binlogTransactionCompression and :binlog_transaction_compression' if attributes.key?(:'binlogTransactionCompression') && attributes.key?(:'binlog_transaction_compression')

      self.binlog_transaction_compression = attributes[:'binlog_transaction_compression'] unless attributes[:'binlog_transaction_compression'].nil?
      self.binlog_transaction_compression = true if binlog_transaction_compression.nil? && !attributes.key?(:'binlogTransactionCompression') && !attributes.key?(:'binlog_transaction_compression') # rubocop:disable Style/StringLiterals

      self.innodb_buffer_pool_size = attributes[:'innodbBufferPoolSize'] if attributes[:'innodbBufferPoolSize']
      self.innodb_buffer_pool_size = 134217728 if innodb_buffer_pool_size.nil? && !attributes.key?(:'innodbBufferPoolSize') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbBufferPoolSize and :innodb_buffer_pool_size' if attributes.key?(:'innodbBufferPoolSize') && attributes.key?(:'innodb_buffer_pool_size')

      self.innodb_buffer_pool_size = attributes[:'innodb_buffer_pool_size'] if attributes[:'innodb_buffer_pool_size']
      self.innodb_buffer_pool_size = 134217728 if innodb_buffer_pool_size.nil? && !attributes.key?(:'innodbBufferPoolSize') && !attributes.key?(:'innodb_buffer_pool_size') # rubocop:disable Style/StringLiterals

      self.innodb_ft_result_cache_limit = attributes[:'innodbFtResultCacheLimit'] if attributes[:'innodbFtResultCacheLimit']
      self.innodb_ft_result_cache_limit = 2000000000 if innodb_ft_result_cache_limit.nil? && !attributes.key?(:'innodbFtResultCacheLimit') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbFtResultCacheLimit and :innodb_ft_result_cache_limit' if attributes.key?(:'innodbFtResultCacheLimit') && attributes.key?(:'innodb_ft_result_cache_limit')

      self.innodb_ft_result_cache_limit = attributes[:'innodb_ft_result_cache_limit'] if attributes[:'innodb_ft_result_cache_limit']
      self.innodb_ft_result_cache_limit = 2000000000 if innodb_ft_result_cache_limit.nil? && !attributes.key?(:'innodbFtResultCacheLimit') && !attributes.key?(:'innodb_ft_result_cache_limit') # rubocop:disable Style/StringLiterals

      self.max_binlog_cache_size = attributes[:'maxBinlogCacheSize'] if attributes[:'maxBinlogCacheSize']

      raise 'You cannot provide both :maxBinlogCacheSize and :max_binlog_cache_size' if attributes.key?(:'maxBinlogCacheSize') && attributes.key?(:'max_binlog_cache_size')

      self.max_binlog_cache_size = attributes[:'max_binlog_cache_size'] if attributes[:'max_binlog_cache_size']

      self.max_connect_errors = attributes[:'maxConnectErrors'] if attributes[:'maxConnectErrors']

      raise 'You cannot provide both :maxConnectErrors and :max_connect_errors' if attributes.key?(:'maxConnectErrors') && attributes.key?(:'max_connect_errors')

      self.max_connect_errors = attributes[:'max_connect_errors'] if attributes[:'max_connect_errors']

      self.max_heap_table_size = attributes[:'maxHeapTableSize'] if attributes[:'maxHeapTableSize']
      self.max_heap_table_size = 16777216 if max_heap_table_size.nil? && !attributes.key?(:'maxHeapTableSize') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :maxHeapTableSize and :max_heap_table_size' if attributes.key?(:'maxHeapTableSize') && attributes.key?(:'max_heap_table_size')

      self.max_heap_table_size = attributes[:'max_heap_table_size'] if attributes[:'max_heap_table_size']
      self.max_heap_table_size = 16777216 if max_heap_table_size.nil? && !attributes.key?(:'maxHeapTableSize') && !attributes.key?(:'max_heap_table_size') # rubocop:disable Style/StringLiterals

      self.max_connections = attributes[:'maxConnections'] if attributes[:'maxConnections']

      raise 'You cannot provide both :maxConnections and :max_connections' if attributes.key?(:'maxConnections') && attributes.key?(:'max_connections')

      self.max_connections = attributes[:'max_connections'] if attributes[:'max_connections']

      self.max_prepared_stmt_count = attributes[:'maxPreparedStmtCount'] if attributes[:'maxPreparedStmtCount']

      raise 'You cannot provide both :maxPreparedStmtCount and :max_prepared_stmt_count' if attributes.key?(:'maxPreparedStmtCount') && attributes.key?(:'max_prepared_stmt_count')

      self.max_prepared_stmt_count = attributes[:'max_prepared_stmt_count'] if attributes[:'max_prepared_stmt_count']

      self.connect_timeout = attributes[:'connectTimeout'] if attributes[:'connectTimeout']

      raise 'You cannot provide both :connectTimeout and :connect_timeout' if attributes.key?(:'connectTimeout') && attributes.key?(:'connect_timeout')

      self.connect_timeout = attributes[:'connect_timeout'] if attributes[:'connect_timeout']

      self.cte_max_recursion_depth = attributes[:'cteMaxRecursionDepth'] if attributes[:'cteMaxRecursionDepth']
      self.cte_max_recursion_depth = 1000 if cte_max_recursion_depth.nil? && !attributes.key?(:'cteMaxRecursionDepth') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :cteMaxRecursionDepth and :cte_max_recursion_depth' if attributes.key?(:'cteMaxRecursionDepth') && attributes.key?(:'cte_max_recursion_depth')

      self.cte_max_recursion_depth = attributes[:'cte_max_recursion_depth'] if attributes[:'cte_max_recursion_depth']
      self.cte_max_recursion_depth = 1000 if cte_max_recursion_depth.nil? && !attributes.key?(:'cteMaxRecursionDepth') && !attributes.key?(:'cte_max_recursion_depth') # rubocop:disable Style/StringLiterals

      self.generated_random_password_length = attributes[:'generatedRandomPasswordLength'] if attributes[:'generatedRandomPasswordLength']

      raise 'You cannot provide both :generatedRandomPasswordLength and :generated_random_password_length' if attributes.key?(:'generatedRandomPasswordLength') && attributes.key?(:'generated_random_password_length')

      self.generated_random_password_length = attributes[:'generated_random_password_length'] if attributes[:'generated_random_password_length']

      self.information_schema_stats_expiry = attributes[:'informationSchemaStatsExpiry'] if attributes[:'informationSchemaStatsExpiry']

      raise 'You cannot provide both :informationSchemaStatsExpiry and :information_schema_stats_expiry' if attributes.key?(:'informationSchemaStatsExpiry') && attributes.key?(:'information_schema_stats_expiry')

      self.information_schema_stats_expiry = attributes[:'information_schema_stats_expiry'] if attributes[:'information_schema_stats_expiry']

      self.innodb_buffer_pool_dump_pct = attributes[:'innodbBufferPoolDumpPct'] if attributes[:'innodbBufferPoolDumpPct']

      raise 'You cannot provide both :innodbBufferPoolDumpPct and :innodb_buffer_pool_dump_pct' if attributes.key?(:'innodbBufferPoolDumpPct') && attributes.key?(:'innodb_buffer_pool_dump_pct')

      self.innodb_buffer_pool_dump_pct = attributes[:'innodb_buffer_pool_dump_pct'] if attributes[:'innodb_buffer_pool_dump_pct']

      self.innodb_buffer_pool_instances = attributes[:'innodbBufferPoolInstances'] if attributes[:'innodbBufferPoolInstances']

      raise 'You cannot provide both :innodbBufferPoolInstances and :innodb_buffer_pool_instances' if attributes.key?(:'innodbBufferPoolInstances') && attributes.key?(:'innodb_buffer_pool_instances')

      self.innodb_buffer_pool_instances = attributes[:'innodb_buffer_pool_instances'] if attributes[:'innodb_buffer_pool_instances']

      self.innodb_ddl_buffer_size = attributes[:'innodbDdlBufferSize'] if attributes[:'innodbDdlBufferSize']
      self.innodb_ddl_buffer_size = 1048576 if innodb_ddl_buffer_size.nil? && !attributes.key?(:'innodbDdlBufferSize') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbDdlBufferSize and :innodb_ddl_buffer_size' if attributes.key?(:'innodbDdlBufferSize') && attributes.key?(:'innodb_ddl_buffer_size')

      self.innodb_ddl_buffer_size = attributes[:'innodb_ddl_buffer_size'] if attributes[:'innodb_ddl_buffer_size']
      self.innodb_ddl_buffer_size = 1048576 if innodb_ddl_buffer_size.nil? && !attributes.key?(:'innodbDdlBufferSize') && !attributes.key?(:'innodb_ddl_buffer_size') # rubocop:disable Style/StringLiterals

      self.innodb_ddl_threads = attributes[:'innodbDdlThreads'] if attributes[:'innodbDdlThreads']

      raise 'You cannot provide both :innodbDdlThreads and :innodb_ddl_threads' if attributes.key?(:'innodbDdlThreads') && attributes.key?(:'innodb_ddl_threads')

      self.innodb_ddl_threads = attributes[:'innodb_ddl_threads'] if attributes[:'innodb_ddl_threads']

      self.innodb_ft_max_token_size = attributes[:'innodbFtMaxTokenSize'] if attributes[:'innodbFtMaxTokenSize']

      raise 'You cannot provide both :innodbFtMaxTokenSize and :innodb_ft_max_token_size' if attributes.key?(:'innodbFtMaxTokenSize') && attributes.key?(:'innodb_ft_max_token_size')

      self.innodb_ft_max_token_size = attributes[:'innodb_ft_max_token_size'] if attributes[:'innodb_ft_max_token_size']

      self.innodb_ft_min_token_size = attributes[:'innodbFtMinTokenSize'] if attributes[:'innodbFtMinTokenSize']

      raise 'You cannot provide both :innodbFtMinTokenSize and :innodb_ft_min_token_size' if attributes.key?(:'innodbFtMinTokenSize') && attributes.key?(:'innodb_ft_min_token_size')

      self.innodb_ft_min_token_size = attributes[:'innodb_ft_min_token_size'] if attributes[:'innodb_ft_min_token_size']

      self.innodb_ft_num_word_optimize = attributes[:'innodbFtNumWordOptimize'] if attributes[:'innodbFtNumWordOptimize']

      raise 'You cannot provide both :innodbFtNumWordOptimize and :innodb_ft_num_word_optimize' if attributes.key?(:'innodbFtNumWordOptimize') && attributes.key?(:'innodb_ft_num_word_optimize')

      self.innodb_ft_num_word_optimize = attributes[:'innodb_ft_num_word_optimize'] if attributes[:'innodb_ft_num_word_optimize']

      self.innodb_lock_wait_timeout = attributes[:'innodbLockWaitTimeout'] if attributes[:'innodbLockWaitTimeout']

      raise 'You cannot provide both :innodbLockWaitTimeout and :innodb_lock_wait_timeout' if attributes.key?(:'innodbLockWaitTimeout') && attributes.key?(:'innodb_lock_wait_timeout')

      self.innodb_lock_wait_timeout = attributes[:'innodb_lock_wait_timeout'] if attributes[:'innodb_lock_wait_timeout']

      self.innodb_max_purge_lag = attributes[:'innodbMaxPurgeLag'] if attributes[:'innodbMaxPurgeLag']
      self.innodb_max_purge_lag = 0 if innodb_max_purge_lag.nil? && !attributes.key?(:'innodbMaxPurgeLag') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbMaxPurgeLag and :innodb_max_purge_lag' if attributes.key?(:'innodbMaxPurgeLag') && attributes.key?(:'innodb_max_purge_lag')

      self.innodb_max_purge_lag = attributes[:'innodb_max_purge_lag'] if attributes[:'innodb_max_purge_lag']
      self.innodb_max_purge_lag = 0 if innodb_max_purge_lag.nil? && !attributes.key?(:'innodbMaxPurgeLag') && !attributes.key?(:'innodb_max_purge_lag') # rubocop:disable Style/StringLiterals

      self.innodb_max_purge_lag_delay = attributes[:'innodbMaxPurgeLagDelay'] if attributes[:'innodbMaxPurgeLagDelay']

      raise 'You cannot provide both :innodbMaxPurgeLagDelay and :innodb_max_purge_lag_delay' if attributes.key?(:'innodbMaxPurgeLagDelay') && attributes.key?(:'innodb_max_purge_lag_delay')

      self.innodb_max_purge_lag_delay = attributes[:'innodb_max_purge_lag_delay'] if attributes[:'innodb_max_purge_lag_delay']

      self.interactive_timeout = attributes[:'interactiveTimeout'] if attributes[:'interactiveTimeout']

      raise 'You cannot provide both :interactiveTimeout and :interactive_timeout' if attributes.key?(:'interactiveTimeout') && attributes.key?(:'interactive_timeout')

      self.interactive_timeout = attributes[:'interactive_timeout'] if attributes[:'interactive_timeout']

      self.innodb_stats_persistent_sample_pages = attributes[:'innodbStatsPersistentSamplePages'] if attributes[:'innodbStatsPersistentSamplePages']
      self.innodb_stats_persistent_sample_pages = 20 if innodb_stats_persistent_sample_pages.nil? && !attributes.key?(:'innodbStatsPersistentSamplePages') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbStatsPersistentSamplePages and :innodb_stats_persistent_sample_pages' if attributes.key?(:'innodbStatsPersistentSamplePages') && attributes.key?(:'innodb_stats_persistent_sample_pages')

      self.innodb_stats_persistent_sample_pages = attributes[:'innodb_stats_persistent_sample_pages'] if attributes[:'innodb_stats_persistent_sample_pages']
      self.innodb_stats_persistent_sample_pages = 20 if innodb_stats_persistent_sample_pages.nil? && !attributes.key?(:'innodbStatsPersistentSamplePages') && !attributes.key?(:'innodb_stats_persistent_sample_pages') # rubocop:disable Style/StringLiterals

      self.innodb_stats_transient_sample_pages = attributes[:'innodbStatsTransientSamplePages'] if attributes[:'innodbStatsTransientSamplePages']
      self.innodb_stats_transient_sample_pages = 8 if innodb_stats_transient_sample_pages.nil? && !attributes.key?(:'innodbStatsTransientSamplePages') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbStatsTransientSamplePages and :innodb_stats_transient_sample_pages' if attributes.key?(:'innodbStatsTransientSamplePages') && attributes.key?(:'innodb_stats_transient_sample_pages')

      self.innodb_stats_transient_sample_pages = attributes[:'innodb_stats_transient_sample_pages'] if attributes[:'innodb_stats_transient_sample_pages']
      self.innodb_stats_transient_sample_pages = 8 if innodb_stats_transient_sample_pages.nil? && !attributes.key?(:'innodbStatsTransientSamplePages') && !attributes.key?(:'innodb_stats_transient_sample_pages') # rubocop:disable Style/StringLiterals

      self.innodb_strict_mode = attributes[:'innodbStrictMode'] unless attributes[:'innodbStrictMode'].nil?
      self.innodb_strict_mode = true if innodb_strict_mode.nil? && !attributes.key?(:'innodbStrictMode') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :innodbStrictMode and :innodb_strict_mode' if attributes.key?(:'innodbStrictMode') && attributes.key?(:'innodb_strict_mode')

      self.innodb_strict_mode = attributes[:'innodb_strict_mode'] unless attributes[:'innodb_strict_mode'].nil?
      self.innodb_strict_mode = true if innodb_strict_mode.nil? && !attributes.key?(:'innodbStrictMode') && !attributes.key?(:'innodb_strict_mode') # rubocop:disable Style/StringLiterals

      self.max_allowed_packet = attributes[:'maxAllowedPacket'] if attributes[:'maxAllowedPacket']

      raise 'You cannot provide both :maxAllowedPacket and :max_allowed_packet' if attributes.key?(:'maxAllowedPacket') && attributes.key?(:'max_allowed_packet')

      self.max_allowed_packet = attributes[:'max_allowed_packet'] if attributes[:'max_allowed_packet']

      self.max_execution_time = attributes[:'maxExecutionTime'] if attributes[:'maxExecutionTime']
      self.max_execution_time = 0 if max_execution_time.nil? && !attributes.key?(:'maxExecutionTime') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :maxExecutionTime and :max_execution_time' if attributes.key?(:'maxExecutionTime') && attributes.key?(:'max_execution_time')

      self.max_execution_time = attributes[:'max_execution_time'] if attributes[:'max_execution_time']
      self.max_execution_time = 0 if max_execution_time.nil? && !attributes.key?(:'maxExecutionTime') && !attributes.key?(:'max_execution_time') # rubocop:disable Style/StringLiterals

      self.mysqlx_connect_timeout = attributes[:'mysqlxConnectTimeout'] if attributes[:'mysqlxConnectTimeout']

      raise 'You cannot provide both :mysqlxConnectTimeout and :mysqlx_connect_timeout' if attributes.key?(:'mysqlxConnectTimeout') && attributes.key?(:'mysqlx_connect_timeout')

      self.mysqlx_connect_timeout = attributes[:'mysqlx_connect_timeout'] if attributes[:'mysqlx_connect_timeout']

      self.mysqlx_document_id_unique_prefix = attributes[:'mysqlxDocumentIdUniquePrefix'] if attributes[:'mysqlxDocumentIdUniquePrefix']

      raise 'You cannot provide both :mysqlxDocumentIdUniquePrefix and :mysqlx_document_id_unique_prefix' if attributes.key?(:'mysqlxDocumentIdUniquePrefix') && attributes.key?(:'mysqlx_document_id_unique_prefix')

      self.mysqlx_document_id_unique_prefix = attributes[:'mysqlx_document_id_unique_prefix'] if attributes[:'mysqlx_document_id_unique_prefix']

      self.mysqlx_idle_worker_thread_timeout = attributes[:'mysqlxIdleWorkerThreadTimeout'] if attributes[:'mysqlxIdleWorkerThreadTimeout']

      raise 'You cannot provide both :mysqlxIdleWorkerThreadTimeout and :mysqlx_idle_worker_thread_timeout' if attributes.key?(:'mysqlxIdleWorkerThreadTimeout') && attributes.key?(:'mysqlx_idle_worker_thread_timeout')

      self.mysqlx_idle_worker_thread_timeout = attributes[:'mysqlx_idle_worker_thread_timeout'] if attributes[:'mysqlx_idle_worker_thread_timeout']

      self.mysqlx_interactive_timeout = attributes[:'mysqlxInteractiveTimeout'] if attributes[:'mysqlxInteractiveTimeout']

      raise 'You cannot provide both :mysqlxInteractiveTimeout and :mysqlx_interactive_timeout' if attributes.key?(:'mysqlxInteractiveTimeout') && attributes.key?(:'mysqlx_interactive_timeout')

      self.mysqlx_interactive_timeout = attributes[:'mysqlx_interactive_timeout'] if attributes[:'mysqlx_interactive_timeout']

      self.mysqlx_max_allowed_packet = attributes[:'mysqlxMaxAllowedPacket'] if attributes[:'mysqlxMaxAllowedPacket']

      raise 'You cannot provide both :mysqlxMaxAllowedPacket and :mysqlx_max_allowed_packet' if attributes.key?(:'mysqlxMaxAllowedPacket') && attributes.key?(:'mysqlx_max_allowed_packet')

      self.mysqlx_max_allowed_packet = attributes[:'mysqlx_max_allowed_packet'] if attributes[:'mysqlx_max_allowed_packet']

      self.mysqlx_min_worker_threads = attributes[:'mysqlxMinWorkerThreads'] if attributes[:'mysqlxMinWorkerThreads']

      raise 'You cannot provide both :mysqlxMinWorkerThreads and :mysqlx_min_worker_threads' if attributes.key?(:'mysqlxMinWorkerThreads') && attributes.key?(:'mysqlx_min_worker_threads')

      self.mysqlx_min_worker_threads = attributes[:'mysqlx_min_worker_threads'] if attributes[:'mysqlx_min_worker_threads']

      self.mysqlx_read_timeout = attributes[:'mysqlxReadTimeout'] if attributes[:'mysqlxReadTimeout']

      raise 'You cannot provide both :mysqlxReadTimeout and :mysqlx_read_timeout' if attributes.key?(:'mysqlxReadTimeout') && attributes.key?(:'mysqlx_read_timeout')

      self.mysqlx_read_timeout = attributes[:'mysqlx_read_timeout'] if attributes[:'mysqlx_read_timeout']

      self.mysqlx_wait_timeout = attributes[:'mysqlxWaitTimeout'] if attributes[:'mysqlxWaitTimeout']

      raise 'You cannot provide both :mysqlxWaitTimeout and :mysqlx_wait_timeout' if attributes.key?(:'mysqlxWaitTimeout') && attributes.key?(:'mysqlx_wait_timeout')

      self.mysqlx_wait_timeout = attributes[:'mysqlx_wait_timeout'] if attributes[:'mysqlx_wait_timeout']

      self.mysqlx_write_timeout = attributes[:'mysqlxWriteTimeout'] if attributes[:'mysqlxWriteTimeout']

      raise 'You cannot provide both :mysqlxWriteTimeout and :mysqlx_write_timeout' if attributes.key?(:'mysqlxWriteTimeout') && attributes.key?(:'mysqlx_write_timeout')

      self.mysqlx_write_timeout = attributes[:'mysqlx_write_timeout'] if attributes[:'mysqlx_write_timeout']

      self.net_read_timeout = attributes[:'netReadTimeout'] if attributes[:'netReadTimeout']

      raise 'You cannot provide both :netReadTimeout and :net_read_timeout' if attributes.key?(:'netReadTimeout') && attributes.key?(:'net_read_timeout')

      self.net_read_timeout = attributes[:'net_read_timeout'] if attributes[:'net_read_timeout']

      self.net_write_timeout = attributes[:'netWriteTimeout'] if attributes[:'netWriteTimeout']

      raise 'You cannot provide both :netWriteTimeout and :net_write_timeout' if attributes.key?(:'netWriteTimeout') && attributes.key?(:'net_write_timeout')

      self.net_write_timeout = attributes[:'net_write_timeout'] if attributes[:'net_write_timeout']

      self.parser_max_mem_size = attributes[:'parserMaxMemSize'] if attributes[:'parserMaxMemSize']

      raise 'You cannot provide both :parserMaxMemSize and :parser_max_mem_size' if attributes.key?(:'parserMaxMemSize') && attributes.key?(:'parser_max_mem_size')

      self.parser_max_mem_size = attributes[:'parser_max_mem_size'] if attributes[:'parser_max_mem_size']

      self.query_alloc_block_size = attributes[:'queryAllocBlockSize'] if attributes[:'queryAllocBlockSize']
      self.query_alloc_block_size = 8192 if query_alloc_block_size.nil? && !attributes.key?(:'queryAllocBlockSize') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :queryAllocBlockSize and :query_alloc_block_size' if attributes.key?(:'queryAllocBlockSize') && attributes.key?(:'query_alloc_block_size')

      self.query_alloc_block_size = attributes[:'query_alloc_block_size'] if attributes[:'query_alloc_block_size']
      self.query_alloc_block_size = 8192 if query_alloc_block_size.nil? && !attributes.key?(:'queryAllocBlockSize') && !attributes.key?(:'query_alloc_block_size') # rubocop:disable Style/StringLiterals

      self.query_prealloc_size = attributes[:'queryPreallocSize'] if attributes[:'queryPreallocSize']
      self.query_prealloc_size = 8192 if query_prealloc_size.nil? && !attributes.key?(:'queryPreallocSize') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :queryPreallocSize and :query_prealloc_size' if attributes.key?(:'queryPreallocSize') && attributes.key?(:'query_prealloc_size')

      self.query_prealloc_size = attributes[:'query_prealloc_size'] if attributes[:'query_prealloc_size']
      self.query_prealloc_size = 8192 if query_prealloc_size.nil? && !attributes.key?(:'queryPreallocSize') && !attributes.key?(:'query_prealloc_size') # rubocop:disable Style/StringLiterals

      self.regexp_time_limit = attributes[:'regexpTimeLimit'] if attributes[:'regexpTimeLimit']

      raise 'You cannot provide both :regexpTimeLimit and :regexp_time_limit' if attributes.key?(:'regexpTimeLimit') && attributes.key?(:'regexp_time_limit')

      self.regexp_time_limit = attributes[:'regexp_time_limit'] if attributes[:'regexp_time_limit']

      self.sql_mode = attributes[:'sqlMode'] if attributes[:'sqlMode']
      self.sql_mode = "ONLY_FULL_GROUP_BY,\nSTRICT_TRANS_TABLES,\nNO_ZERO_IN_DATE,\nNO_ZERO_DATE,\nERROR_FOR_DIVISION_BY_ZERO,\nNO_ENGINE_SUBSTITUTION\n" if sql_mode.nil? && !attributes.key?(:'sqlMode') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :sqlMode and :sql_mode' if attributes.key?(:'sqlMode') && attributes.key?(:'sql_mode')

      self.sql_mode = attributes[:'sql_mode'] if attributes[:'sql_mode']
      self.sql_mode = "ONLY_FULL_GROUP_BY,\nSTRICT_TRANS_TABLES,\nNO_ZERO_IN_DATE,\nNO_ZERO_DATE,\nERROR_FOR_DIVISION_BY_ZERO,\nNO_ENGINE_SUBSTITUTION\n" if sql_mode.nil? && !attributes.key?(:'sqlMode') && !attributes.key?(:'sql_mode') # rubocop:disable Style/StringLiterals

      self.tmp_table_size = attributes[:'tmpTableSize'] if attributes[:'tmpTableSize']
      self.tmp_table_size = 16777216 if tmp_table_size.nil? && !attributes.key?(:'tmpTableSize') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :tmpTableSize and :tmp_table_size' if attributes.key?(:'tmpTableSize') && attributes.key?(:'tmp_table_size')

      self.tmp_table_size = attributes[:'tmp_table_size'] if attributes[:'tmp_table_size']
      self.tmp_table_size = 16777216 if tmp_table_size.nil? && !attributes.key?(:'tmpTableSize') && !attributes.key?(:'tmp_table_size') # rubocop:disable Style/StringLiterals

      self.mysqlx_deflate_default_compression_level = attributes[:'mysqlxDeflateDefaultCompressionLevel'] if attributes[:'mysqlxDeflateDefaultCompressionLevel']

      raise 'You cannot provide both :mysqlxDeflateDefaultCompressionLevel and :mysqlx_deflate_default_compression_level' if attributes.key?(:'mysqlxDeflateDefaultCompressionLevel') && attributes.key?(:'mysqlx_deflate_default_compression_level')

      self.mysqlx_deflate_default_compression_level = attributes[:'mysqlx_deflate_default_compression_level'] if attributes[:'mysqlx_deflate_default_compression_level']

      self.mysqlx_deflate_max_client_compression_level = attributes[:'mysqlxDeflateMaxClientCompressionLevel'] if attributes[:'mysqlxDeflateMaxClientCompressionLevel']

      raise 'You cannot provide both :mysqlxDeflateMaxClientCompressionLevel and :mysqlx_deflate_max_client_compression_level' if attributes.key?(:'mysqlxDeflateMaxClientCompressionLevel') && attributes.key?(:'mysqlx_deflate_max_client_compression_level')

      self.mysqlx_deflate_max_client_compression_level = attributes[:'mysqlx_deflate_max_client_compression_level'] if attributes[:'mysqlx_deflate_max_client_compression_level']

      self.mysqlx_lz4_max_client_compression_level = attributes[:'mysqlxLz4MaxClientCompressionLevel'] if attributes[:'mysqlxLz4MaxClientCompressionLevel']

      raise 'You cannot provide both :mysqlxLz4MaxClientCompressionLevel and :mysqlx_lz4_max_client_compression_level' if attributes.key?(:'mysqlxLz4MaxClientCompressionLevel') && attributes.key?(:'mysqlx_lz4_max_client_compression_level')

      self.mysqlx_lz4_max_client_compression_level = attributes[:'mysqlx_lz4_max_client_compression_level'] if attributes[:'mysqlx_lz4_max_client_compression_level']

      self.mysqlx_lz4_default_compression_level = attributes[:'mysqlxLz4DefaultCompressionLevel'] if attributes[:'mysqlxLz4DefaultCompressionLevel']

      raise 'You cannot provide both :mysqlxLz4DefaultCompressionLevel and :mysqlx_lz4_default_compression_level' if attributes.key?(:'mysqlxLz4DefaultCompressionLevel') && attributes.key?(:'mysqlx_lz4_default_compression_level')

      self.mysqlx_lz4_default_compression_level = attributes[:'mysqlx_lz4_default_compression_level'] if attributes[:'mysqlx_lz4_default_compression_level']

      self.mysqlx_zstd_max_client_compression_level = attributes[:'mysqlxZstdMaxClientCompressionLevel'] if attributes[:'mysqlxZstdMaxClientCompressionLevel']

      raise 'You cannot provide both :mysqlxZstdMaxClientCompressionLevel and :mysqlx_zstd_max_client_compression_level' if attributes.key?(:'mysqlxZstdMaxClientCompressionLevel') && attributes.key?(:'mysqlx_zstd_max_client_compression_level')

      self.mysqlx_zstd_max_client_compression_level = attributes[:'mysqlx_zstd_max_client_compression_level'] if attributes[:'mysqlx_zstd_max_client_compression_level']

      self.mysqlx_zstd_default_compression_level = attributes[:'mysqlxZstdDefaultCompressionLevel'] if attributes[:'mysqlxZstdDefaultCompressionLevel']

      raise 'You cannot provide both :mysqlxZstdDefaultCompressionLevel and :mysqlx_zstd_default_compression_level' if attributes.key?(:'mysqlxZstdDefaultCompressionLevel') && attributes.key?(:'mysqlx_zstd_default_compression_level')

      self.mysqlx_zstd_default_compression_level = attributes[:'mysqlx_zstd_default_compression_level'] if attributes[:'mysqlx_zstd_default_compression_level']

      self.mysql_zstd_default_compression_level = attributes[:'mysqlZstdDefaultCompressionLevel'] if attributes[:'mysqlZstdDefaultCompressionLevel']

      raise 'You cannot provide both :mysqlZstdDefaultCompressionLevel and :mysql_zstd_default_compression_level' if attributes.key?(:'mysqlZstdDefaultCompressionLevel') && attributes.key?(:'mysql_zstd_default_compression_level')

      self.mysql_zstd_default_compression_level = attributes[:'mysql_zstd_default_compression_level'] if attributes[:'mysql_zstd_default_compression_level']

      self.sort_buffer_size = attributes[:'sortBufferSize'] if attributes[:'sortBufferSize']
      self.sort_buffer_size = 262144 if sort_buffer_size.nil? && !attributes.key?(:'sortBufferSize') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :sortBufferSize and :sort_buffer_size' if attributes.key?(:'sortBufferSize') && attributes.key?(:'sort_buffer_size')

      self.sort_buffer_size = attributes[:'sort_buffer_size'] if attributes[:'sort_buffer_size']
      self.sort_buffer_size = 262144 if sort_buffer_size.nil? && !attributes.key?(:'sortBufferSize') && !attributes.key?(:'sort_buffer_size') # rubocop:disable Style/StringLiterals

      self.wait_timeout = attributes[:'waitTimeout'] if attributes[:'waitTimeout']

      raise 'You cannot provide both :waitTimeout and :wait_timeout' if attributes.key?(:'waitTimeout') && attributes.key?(:'wait_timeout')

      self.wait_timeout = attributes[:'wait_timeout'] if attributes[:'wait_timeout']

      self.thread_pool_dedicated_listeners = attributes[:'threadPoolDedicatedListeners'] unless attributes[:'threadPoolDedicatedListeners'].nil?
      self.thread_pool_dedicated_listeners = false if thread_pool_dedicated_listeners.nil? && !attributes.key?(:'threadPoolDedicatedListeners') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :threadPoolDedicatedListeners and :thread_pool_dedicated_listeners' if attributes.key?(:'threadPoolDedicatedListeners') && attributes.key?(:'thread_pool_dedicated_listeners')

      self.thread_pool_dedicated_listeners = attributes[:'thread_pool_dedicated_listeners'] unless attributes[:'thread_pool_dedicated_listeners'].nil?
      self.thread_pool_dedicated_listeners = false if thread_pool_dedicated_listeners.nil? && !attributes.key?(:'threadPoolDedicatedListeners') && !attributes.key?(:'thread_pool_dedicated_listeners') # rubocop:disable Style/StringLiterals

      self.thread_pool_max_transactions_limit = attributes[:'threadPoolMaxTransactionsLimit'] if attributes[:'threadPoolMaxTransactionsLimit']

      raise 'You cannot provide both :threadPoolMaxTransactionsLimit and :thread_pool_max_transactions_limit' if attributes.key?(:'threadPoolMaxTransactionsLimit') && attributes.key?(:'thread_pool_max_transactions_limit')

      self.thread_pool_max_transactions_limit = attributes[:'thread_pool_max_transactions_limit'] if attributes[:'thread_pool_max_transactions_limit']

      self.time_zone = attributes[:'timeZone'] if attributes[:'timeZone']
      self.time_zone = "UTC" if time_zone.nil? && !attributes.key?(:'timeZone') # rubocop:disable Style/StringLiterals

      raise 'You cannot provide both :timeZone and :time_zone' if attributes.key?(:'timeZone') && attributes.key?(:'time_zone')

      self.time_zone = attributes[:'time_zone'] if attributes[:'time_zone']
      self.time_zone = "UTC" if time_zone.nil? && !attributes.key?(:'timeZone') && !attributes.key?(:'time_zone') # rubocop:disable Style/StringLiterals

      self.block_encryption_mode = attributes[:'blockEncryptionMode'] if attributes[:'blockEncryptionMode']

      raise 'You cannot provide both :blockEncryptionMode and :block_encryption_mode' if attributes.key?(:'blockEncryptionMode') && attributes.key?(:'block_encryption_mode')

      self.block_encryption_mode = attributes[:'block_encryption_mode'] if attributes[:'block_encryption_mode']

      self.binlog_group_commit_sync_delay = attributes[:'binlogGroupCommitSyncDelay'] if attributes[:'binlogGroupCommitSyncDelay']

      raise 'You cannot provide both :binlogGroupCommitSyncDelay and :binlog_group_commit_sync_delay' if attributes.key?(:'binlogGroupCommitSyncDelay') && attributes.key?(:'binlog_group_commit_sync_delay')

      self.binlog_group_commit_sync_delay = attributes[:'binlog_group_commit_sync_delay'] if attributes[:'binlog_group_commit_sync_delay']

      self.binlog_group_commit_sync_no_delay_count = attributes[:'binlogGroupCommitSyncNoDelayCount'] if attributes[:'binlogGroupCommitSyncNoDelayCount']

      raise 'You cannot provide both :binlogGroupCommitSyncNoDelayCount and :binlog_group_commit_sync_no_delay_count' if attributes.key?(:'binlogGroupCommitSyncNoDelayCount') && attributes.key?(:'binlog_group_commit_sync_no_delay_count')

      self.binlog_group_commit_sync_no_delay_count = attributes[:'binlog_group_commit_sync_no_delay_count'] if attributes[:'binlog_group_commit_sync_no_delay_count']

      self.replica_net_timeout = attributes[:'replicaNetTimeout'] if attributes[:'replicaNetTimeout']

      raise 'You cannot provide both :replicaNetTimeout and :replica_net_timeout' if attributes.key?(:'replicaNetTimeout') && attributes.key?(:'replica_net_timeout')

      self.replica_net_timeout = attributes[:'replica_net_timeout'] if attributes[:'replica_net_timeout']

      self.require_secure_transport = attributes[:'requireSecureTransport'] unless attributes[:'requireSecureTransport'].nil?

      raise 'You cannot provide both :requireSecureTransport and :require_secure_transport' if attributes.key?(:'requireSecureTransport') && attributes.key?(:'require_secure_transport')

      self.require_secure_transport = attributes[:'require_secure_transport'] unless attributes[:'require_secure_transport'].nil?

      self.innodb_redo_log_capacity = attributes[:'innodbRedoLogCapacity'] if attributes[:'innodbRedoLogCapacity']

      raise 'You cannot provide both :innodbRedoLogCapacity and :innodb_redo_log_capacity' if attributes.key?(:'innodbRedoLogCapacity') && attributes.key?(:'innodb_redo_log_capacity')

      self.innodb_redo_log_capacity = attributes[:'innodb_redo_log_capacity'] if attributes[:'innodb_redo_log_capacity']

      self.thread_pool_transaction_delay = attributes[:'threadPoolTransactionDelay'] if attributes[:'threadPoolTransactionDelay']

      raise 'You cannot provide both :threadPoolTransactionDelay and :thread_pool_transaction_delay' if attributes.key?(:'threadPoolTransactionDelay') && attributes.key?(:'thread_pool_transaction_delay')

      self.thread_pool_transaction_delay = attributes[:'thread_pool_transaction_delay'] if attributes[:'thread_pool_transaction_delay']

      self.thread_pool_query_threads_per_group = attributes[:'threadPoolQueryThreadsPerGroup'] if attributes[:'threadPoolQueryThreadsPerGroup']

      raise 'You cannot provide both :threadPoolQueryThreadsPerGroup and :thread_pool_query_threads_per_group' if attributes.key?(:'threadPoolQueryThreadsPerGroup') && attributes.key?(:'thread_pool_query_threads_per_group')

      self.thread_pool_query_threads_per_group = attributes[:'thread_pool_query_threads_per_group'] if attributes[:'thread_pool_query_threads_per_group']

      self.explain_format = attributes[:'explainFormat'] if attributes[:'explainFormat']

      raise 'You cannot provide both :explainFormat and :explain_format' if attributes.key?(:'explainFormat') && attributes.key?(:'explain_format')

      self.explain_format = attributes[:'explain_format'] if attributes[:'explain_format']

      self.explicit_defaults_for_timestamp = attributes[:'explicitDefaultsForTimestamp'] unless attributes[:'explicitDefaultsForTimestamp'].nil?

      raise 'You cannot provide both :explicitDefaultsForTimestamp and :explicit_defaults_for_timestamp' if attributes.key?(:'explicitDefaultsForTimestamp') && attributes.key?(:'explicit_defaults_for_timestamp')

      self.explicit_defaults_for_timestamp = attributes[:'explicit_defaults_for_timestamp'] unless attributes[:'explicit_defaults_for_timestamp'].nil?

      self.sql_generate_invisible_primary_key = attributes[:'sqlGenerateInvisiblePrimaryKey'] unless attributes[:'sqlGenerateInvisiblePrimaryKey'].nil?

      raise 'You cannot provide both :sqlGenerateInvisiblePrimaryKey and :sql_generate_invisible_primary_key' if attributes.key?(:'sqlGenerateInvisiblePrimaryKey') && attributes.key?(:'sql_generate_invisible_primary_key')

      self.sql_generate_invisible_primary_key = attributes[:'sql_generate_invisible_primary_key'] unless attributes[:'sql_generate_invisible_primary_key'].nil?

      self.temptable_max_ram = attributes[:'temptableMaxRam'] if attributes[:'temptableMaxRam']

      raise 'You cannot provide both :temptableMaxRam and :temptable_max_ram' if attributes.key?(:'temptableMaxRam') && attributes.key?(:'temptable_max_ram')

      self.temptable_max_ram = attributes[:'temptable_max_ram'] if attributes[:'temptable_max_ram']

      self.innodb_change_buffering = attributes[:'innodbChangeBuffering'] if attributes[:'innodbChangeBuffering']

      raise 'You cannot provide both :innodbChangeBuffering and :innodb_change_buffering' if attributes.key?(:'innodbChangeBuffering') && attributes.key?(:'innodb_change_buffering')

      self.innodb_change_buffering = attributes[:'innodb_change_buffering'] if attributes[:'innodb_change_buffering']

      self.innodb_adaptive_hash_index = attributes[:'innodbAdaptiveHashIndex'] unless attributes[:'innodbAdaptiveHashIndex'].nil?

      raise 'You cannot provide both :innodbAdaptiveHashIndex and :innodb_adaptive_hash_index' if attributes.key?(:'innodbAdaptiveHashIndex') && attributes.key?(:'innodb_adaptive_hash_index')

      self.innodb_adaptive_hash_index = attributes[:'innodb_adaptive_hash_index'] unless attributes[:'innodb_adaptive_hash_index'].nil?

      self.innodb_undo_log_truncate = attributes[:'innodbUndoLogTruncate'] unless attributes[:'innodbUndoLogTruncate'].nil?

      raise 'You cannot provide both :innodbUndoLogTruncate and :innodb_undo_log_truncate' if attributes.key?(:'innodbUndoLogTruncate') && attributes.key?(:'innodb_undo_log_truncate')

      self.innodb_undo_log_truncate = attributes[:'innodb_undo_log_truncate'] unless attributes[:'innodb_undo_log_truncate'].nil?

      self.table_definition_cache = attributes[:'tableDefinitionCache'] if attributes[:'tableDefinitionCache']

      raise 'You cannot provide both :tableDefinitionCache and :table_definition_cache' if attributes.key?(:'tableDefinitionCache') && attributes.key?(:'table_definition_cache')

      self.table_definition_cache = attributes[:'table_definition_cache'] if attributes[:'table_definition_cache']

      self.table_open_cache = attributes[:'tableOpenCache'] if attributes[:'tableOpenCache']

      raise 'You cannot provide both :tableOpenCache and :table_open_cache' if attributes.key?(:'tableOpenCache') && attributes.key?(:'table_open_cache')

      self.table_open_cache = attributes[:'table_open_cache'] if attributes[:'table_open_cache']

      self.relay_log_space_limit = attributes[:'relayLogSpaceLimit'] if attributes[:'relayLogSpaceLimit']

      raise 'You cannot provide both :relayLogSpaceLimit and :relay_log_space_limit' if attributes.key?(:'relayLogSpaceLimit') && attributes.key?(:'relay_log_space_limit')

      self.relay_log_space_limit = attributes[:'relay_log_space_limit'] if attributes[:'relay_log_space_limit']

      self.optimizer_switch = attributes[:'optimizerSwitch'] if attributes[:'optimizerSwitch']

      raise 'You cannot provide both :optimizerSwitch and :optimizer_switch' if attributes.key?(:'optimizerSwitch') && attributes.key?(:'optimizer_switch')

      self.optimizer_switch = attributes[:'optimizer_switch'] if attributes[:'optimizer_switch']

      self.replica_type_conversions = attributes[:'replicaTypeConversions'] if attributes[:'replicaTypeConversions']

      raise 'You cannot provide both :replicaTypeConversions and :replica_type_conversions' if attributes.key?(:'replicaTypeConversions') && attributes.key?(:'replica_type_conversions')

      self.replica_type_conversions = attributes[:'replica_type_conversions'] if attributes[:'replica_type_conversions']

      self.replica_parallel_workers = attributes[:'replicaParallelWorkers'] if attributes[:'replicaParallelWorkers']

      raise 'You cannot provide both :replicaParallelWorkers and :replica_parallel_workers' if attributes.key?(:'replicaParallelWorkers') && attributes.key?(:'replica_parallel_workers')

      self.replica_parallel_workers = attributes[:'replica_parallel_workers'] if attributes[:'replica_parallel_workers']

      self.skip_name_resolve = attributes[:'skipNameResolve'] unless attributes[:'skipNameResolve'].nil?

      raise 'You cannot provide both :skipNameResolve and :skip_name_resolve' if attributes.key?(:'skipNameResolve') && attributes.key?(:'skip_name_resolve')

      self.skip_name_resolve = attributes[:'skip_name_resolve'] unless attributes[:'skip_name_resolve'].nil?

      self.max_user_connections = attributes[:'maxUserConnections'] if attributes[:'maxUserConnections']

      raise 'You cannot provide both :maxUserConnections and :max_user_connections' if attributes.key?(:'maxUserConnections') && attributes.key?(:'max_user_connections')

      self.max_user_connections = attributes[:'max_user_connections'] if attributes[:'max_user_connections']

      self.join_buffer_size = attributes[:'joinBufferSize'] if attributes[:'joinBufferSize']

      raise 'You cannot provide both :joinBufferSize and :join_buffer_size' if attributes.key?(:'joinBufferSize') && attributes.key?(:'join_buffer_size')

      self.join_buffer_size = attributes[:'join_buffer_size'] if attributes[:'join_buffer_size']

      self.max_seeks_for_key = attributes[:'maxSeeksForKey'] if attributes[:'maxSeeksForKey']

      raise 'You cannot provide both :maxSeeksForKey and :max_seeks_for_key' if attributes.key?(:'maxSeeksForKey') && attributes.key?(:'max_seeks_for_key')

      self.max_seeks_for_key = attributes[:'max_seeks_for_key'] if attributes[:'max_seeks_for_key']

      self.range_optimizer_max_mem_size = attributes[:'rangeOptimizerMaxMemSize'] if attributes[:'rangeOptimizerMaxMemSize']

      raise 'You cannot provide both :rangeOptimizerMaxMemSize and :range_optimizer_max_mem_size' if attributes.key?(:'rangeOptimizerMaxMemSize') && attributes.key?(:'range_optimizer_max_mem_size')

      self.range_optimizer_max_mem_size = attributes[:'range_optimizer_max_mem_size'] if attributes[:'range_optimizer_max_mem_size']

      self.auto_increment_increment = attributes[:'autoIncrementIncrement'] if attributes[:'autoIncrementIncrement']

      raise 'You cannot provide both :autoIncrementIncrement and :auto_increment_increment' if attributes.key?(:'autoIncrementIncrement') && attributes.key?(:'auto_increment_increment')

      self.auto_increment_increment = attributes[:'auto_increment_increment'] if attributes[:'auto_increment_increment']

      self.auto_increment_offset = attributes[:'autoIncrementOffset'] if attributes[:'autoIncrementOffset']

      raise 'You cannot provide both :autoIncrementOffset and :auto_increment_offset' if attributes.key?(:'autoIncrementOffset') && attributes.key?(:'auto_increment_offset')

      self.auto_increment_offset = attributes[:'auto_increment_offset'] if attributes[:'auto_increment_offset']

      self.innodb_autoinc_lock_mode = attributes[:'innodbAutoincLockMode'] if attributes[:'innodbAutoincLockMode']

      raise 'You cannot provide both :innodbAutoincLockMode and :innodb_autoinc_lock_mode' if attributes.key?(:'innodbAutoincLockMode') && attributes.key?(:'innodb_autoinc_lock_mode')

      self.innodb_autoinc_lock_mode = attributes[:'innodb_autoinc_lock_mode'] if attributes[:'innodb_autoinc_lock_mode']

      self.innodb_rollback_on_timeout = attributes[:'innodbRollbackOnTimeout'] unless attributes[:'innodbRollbackOnTimeout'].nil?

      raise 'You cannot provide both :innodbRollbackOnTimeout and :innodb_rollback_on_timeout' if attributes.key?(:'innodbRollbackOnTimeout') && attributes.key?(:'innodb_rollback_on_timeout')

      self.innodb_rollback_on_timeout = attributes[:'innodb_rollback_on_timeout'] unless attributes[:'innodb_rollback_on_timeout'].nil?

      self.innodb_online_alter_log_max_size = attributes[:'innodbOnlineAlterLogMaxSize'] if attributes[:'innodbOnlineAlterLogMaxSize']

      raise 'You cannot provide both :innodbOnlineAlterLogMaxSize and :innodb_online_alter_log_max_size' if attributes.key?(:'innodbOnlineAlterLogMaxSize') && attributes.key?(:'innodb_online_alter_log_max_size')

      self.innodb_online_alter_log_max_size = attributes[:'innodb_online_alter_log_max_size'] if attributes[:'innodb_online_alter_log_max_size']

      self.innodb_sort_buffer_size = attributes[:'innodbSortBufferSize'] if attributes[:'innodbSortBufferSize']

      raise 'You cannot provide both :innodbSortBufferSize and :innodb_sort_buffer_size' if attributes.key?(:'innodbSortBufferSize') && attributes.key?(:'innodb_sort_buffer_size')

      self.innodb_sort_buffer_size = attributes[:'innodb_sort_buffer_size'] if attributes[:'innodb_sort_buffer_size']

      self.innodb_numa_interleave = attributes[:'innodbNumaInterleave'] unless attributes[:'innodbNumaInterleave'].nil?

      raise 'You cannot provide both :innodbNumaInterleave and :innodb_numa_interleave' if attributes.key?(:'innodbNumaInterleave') && attributes.key?(:'innodb_numa_interleave')

      self.innodb_numa_interleave = attributes[:'innodb_numa_interleave'] unless attributes[:'innodb_numa_interleave'].nil?

      self.thread_pool_size = attributes[:'threadPoolSize'] if attributes[:'threadPoolSize']

      raise 'You cannot provide both :threadPoolSize and :thread_pool_size' if attributes.key?(:'threadPoolSize') && attributes.key?(:'thread_pool_size')

      self.thread_pool_size = attributes[:'thread_pool_size'] if attributes[:'thread_pool_size']

      self.long_query_time = attributes[:'longQueryTime'] if attributes[:'longQueryTime']

      raise 'You cannot provide both :longQueryTime and :long_query_time' if attributes.key?(:'longQueryTime') && attributes.key?(:'long_query_time')

      self.long_query_time = attributes[:'long_query_time'] if attributes[:'long_query_time']
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] completion_type Object to be assigned
    def completion_type=(completion_type)
      # rubocop:disable Style/ConditionalAssignment
      if completion_type && !COMPLETION_TYPE_ENUM.include?(completion_type)
        OCI.logger.debug("Unknown value for 'completion_type' [" + completion_type + "]. Mapping to 'COMPLETION_TYPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @completion_type = COMPLETION_TYPE_UNKNOWN_ENUM_VALUE
      else
        @completion_type = completion_type
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] character_set_server Object to be assigned
    def character_set_server=(character_set_server)
      # rubocop:disable Style/ConditionalAssignment
      if character_set_server && !CHARACTER_SET_SERVER_ENUM.include?(character_set_server)
        OCI.logger.debug("Unknown value for 'character_set_server' [" + character_set_server + "]. Mapping to 'CHARACTER_SET_SERVER_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @character_set_server = CHARACTER_SET_SERVER_UNKNOWN_ENUM_VALUE
      else
        @character_set_server = character_set_server
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] collation_server Object to be assigned
    def collation_server=(collation_server)
      # rubocop:disable Style/ConditionalAssignment
      if collation_server && !COLLATION_SERVER_ENUM.include?(collation_server)
        OCI.logger.debug("Unknown value for 'collation_server' [" + collation_server + "]. Mapping to 'COLLATION_SERVER_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @collation_server = COLLATION_SERVER_UNKNOWN_ENUM_VALUE
      else
        @collation_server = collation_server
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] default_authentication_plugin Object to be assigned
    def default_authentication_plugin=(default_authentication_plugin)
      # rubocop:disable Style/ConditionalAssignment
      if default_authentication_plugin && !DEFAULT_AUTHENTICATION_PLUGIN_ENUM.include?(default_authentication_plugin)
        OCI.logger.debug("Unknown value for 'default_authentication_plugin' [" + default_authentication_plugin + "]. Mapping to 'DEFAULT_AUTHENTICATION_PLUGIN_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @default_authentication_plugin = DEFAULT_AUTHENTICATION_PLUGIN_UNKNOWN_ENUM_VALUE
      else
        @default_authentication_plugin = default_authentication_plugin
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] transaction_isolation Object to be assigned
    def transaction_isolation=(transaction_isolation)
      # rubocop:disable Style/ConditionalAssignment
      if transaction_isolation && !TRANSACTION_ISOLATION_ENUM.include?(transaction_isolation)
        OCI.logger.debug("Unknown value for 'transaction_isolation' [" + transaction_isolation + "]. Mapping to 'TRANSACTION_ISOLATION_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @transaction_isolation = TRANSACTION_ISOLATION_UNKNOWN_ENUM_VALUE
      else
        @transaction_isolation = transaction_isolation
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] group_replication_consistency Object to be assigned
    def group_replication_consistency=(group_replication_consistency)
      # rubocop:disable Style/ConditionalAssignment
      if group_replication_consistency && !GROUP_REPLICATION_CONSISTENCY_ENUM.include?(group_replication_consistency)
        OCI.logger.debug("Unknown value for 'group_replication_consistency' [" + group_replication_consistency + "]. Mapping to 'GROUP_REPLICATION_CONSISTENCY_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @group_replication_consistency = GROUP_REPLICATION_CONSISTENCY_UNKNOWN_ENUM_VALUE
      else
        @group_replication_consistency = group_replication_consistency
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] binlog_row_metadata Object to be assigned
    def binlog_row_metadata=(binlog_row_metadata)
      # rubocop:disable Style/ConditionalAssignment
      if binlog_row_metadata && !BINLOG_ROW_METADATA_ENUM.include?(binlog_row_metadata)
        OCI.logger.debug("Unknown value for 'binlog_row_metadata' [" + binlog_row_metadata + "]. Mapping to 'BINLOG_ROW_METADATA_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @binlog_row_metadata = BINLOG_ROW_METADATA_UNKNOWN_ENUM_VALUE
      else
        @binlog_row_metadata = binlog_row_metadata
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] explain_format Object to be assigned
    def explain_format=(explain_format)
      # rubocop:disable Style/ConditionalAssignment
      if explain_format && !EXPLAIN_FORMAT_ENUM.include?(explain_format)
        OCI.logger.debug("Unknown value for 'explain_format' [" + explain_format + "]. Mapping to 'EXPLAIN_FORMAT_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @explain_format = EXPLAIN_FORMAT_UNKNOWN_ENUM_VALUE
      else
        @explain_format = explain_format
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] innodb_change_buffering Object to be assigned
    def innodb_change_buffering=(innodb_change_buffering)
      # rubocop:disable Style/ConditionalAssignment
      if innodb_change_buffering && !INNODB_CHANGE_BUFFERING_ENUM.include?(innodb_change_buffering)
        OCI.logger.debug("Unknown value for 'innodb_change_buffering' [" + innodb_change_buffering + "]. Mapping to 'INNODB_CHANGE_BUFFERING_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @innodb_change_buffering = INNODB_CHANGE_BUFFERING_UNKNOWN_ENUM_VALUE
      else
        @innodb_change_buffering = innodb_change_buffering
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines


    # Checks equality by comparing each attribute.
    # @param [Object] other the other object to be compared
    def ==(other)
      return true if equal?(other)

      self.class == other.class &&
        completion_type == other.completion_type &&
        big_tables == other.big_tables &&
        character_set_server == other.character_set_server &&
        collation_server == other.collation_server &&
        connection_memory_chunk_size == other.connection_memory_chunk_size &&
        connection_memory_limit == other.connection_memory_limit &&
        default_authentication_plugin == other.default_authentication_plugin &&
        global_connection_memory_limit == other.global_connection_memory_limit &&
        global_connection_memory_tracking == other.global_connection_memory_tracking &&
        transaction_isolation == other.transaction_isolation &&
        innodb_ft_server_stopword_table == other.innodb_ft_server_stopword_table &&
        mandatory_roles == other.mandatory_roles &&
        autocommit == other.autocommit &&
        foreign_key_checks == other.foreign_key_checks &&
        group_replication_consistency == other.group_replication_consistency &&
        group_concat_max_len == other.group_concat_max_len &&
        innodb_ft_enable_stopword == other.innodb_ft_enable_stopword &&
        innodb_log_writer_threads == other.innodb_log_writer_threads &&
        local_infile == other.local_infile &&
        mysql_firewall_mode == other.mysql_firewall_mode &&
        mysqlx_enable_hello_notice == other.mysqlx_enable_hello_notice &&
        sql_require_primary_key == other.sql_require_primary_key &&
        sql_warnings == other.sql_warnings &&
        binlog_expire_logs_seconds == other.binlog_expire_logs_seconds &&
        binlog_row_metadata == other.binlog_row_metadata &&
        binlog_row_value_options == other.binlog_row_value_options &&
        binlog_transaction_compression == other.binlog_transaction_compression &&
        innodb_buffer_pool_size == other.innodb_buffer_pool_size &&
        innodb_ft_result_cache_limit == other.innodb_ft_result_cache_limit &&
        max_binlog_cache_size == other.max_binlog_cache_size &&
        max_connect_errors == other.max_connect_errors &&
        max_heap_table_size == other.max_heap_table_size &&
        max_connections == other.max_connections &&
        max_prepared_stmt_count == other.max_prepared_stmt_count &&
        connect_timeout == other.connect_timeout &&
        cte_max_recursion_depth == other.cte_max_recursion_depth &&
        generated_random_password_length == other.generated_random_password_length &&
        information_schema_stats_expiry == other.information_schema_stats_expiry &&
        innodb_buffer_pool_dump_pct == other.innodb_buffer_pool_dump_pct &&
        innodb_buffer_pool_instances == other.innodb_buffer_pool_instances &&
        innodb_ddl_buffer_size == other.innodb_ddl_buffer_size &&
        innodb_ddl_threads == other.innodb_ddl_threads &&
        innodb_ft_max_token_size == other.innodb_ft_max_token_size &&
        innodb_ft_min_token_size == other.innodb_ft_min_token_size &&
        innodb_ft_num_word_optimize == other.innodb_ft_num_word_optimize &&
        innodb_lock_wait_timeout == other.innodb_lock_wait_timeout &&
        innodb_max_purge_lag == other.innodb_max_purge_lag &&
        innodb_max_purge_lag_delay == other.innodb_max_purge_lag_delay &&
        interactive_timeout == other.interactive_timeout &&
        innodb_stats_persistent_sample_pages == other.innodb_stats_persistent_sample_pages &&
        innodb_stats_transient_sample_pages == other.innodb_stats_transient_sample_pages &&
        innodb_strict_mode == other.innodb_strict_mode &&
        max_allowed_packet == other.max_allowed_packet &&
        max_execution_time == other.max_execution_time &&
        mysqlx_connect_timeout == other.mysqlx_connect_timeout &&
        mysqlx_document_id_unique_prefix == other.mysqlx_document_id_unique_prefix &&
        mysqlx_idle_worker_thread_timeout == other.mysqlx_idle_worker_thread_timeout &&
        mysqlx_interactive_timeout == other.mysqlx_interactive_timeout &&
        mysqlx_max_allowed_packet == other.mysqlx_max_allowed_packet &&
        mysqlx_min_worker_threads == other.mysqlx_min_worker_threads &&
        mysqlx_read_timeout == other.mysqlx_read_timeout &&
        mysqlx_wait_timeout == other.mysqlx_wait_timeout &&
        mysqlx_write_timeout == other.mysqlx_write_timeout &&
        net_read_timeout == other.net_read_timeout &&
        net_write_timeout == other.net_write_timeout &&
        parser_max_mem_size == other.parser_max_mem_size &&
        query_alloc_block_size == other.query_alloc_block_size &&
        query_prealloc_size == other.query_prealloc_size &&
        regexp_time_limit == other.regexp_time_limit &&
        sql_mode == other.sql_mode &&
        tmp_table_size == other.tmp_table_size &&
        mysqlx_deflate_default_compression_level == other.mysqlx_deflate_default_compression_level &&
        mysqlx_deflate_max_client_compression_level == other.mysqlx_deflate_max_client_compression_level &&
        mysqlx_lz4_max_client_compression_level == other.mysqlx_lz4_max_client_compression_level &&
        mysqlx_lz4_default_compression_level == other.mysqlx_lz4_default_compression_level &&
        mysqlx_zstd_max_client_compression_level == other.mysqlx_zstd_max_client_compression_level &&
        mysqlx_zstd_default_compression_level == other.mysqlx_zstd_default_compression_level &&
        mysql_zstd_default_compression_level == other.mysql_zstd_default_compression_level &&
        sort_buffer_size == other.sort_buffer_size &&
        wait_timeout == other.wait_timeout &&
        thread_pool_dedicated_listeners == other.thread_pool_dedicated_listeners &&
        thread_pool_max_transactions_limit == other.thread_pool_max_transactions_limit &&
        time_zone == other.time_zone &&
        block_encryption_mode == other.block_encryption_mode &&
        binlog_group_commit_sync_delay == other.binlog_group_commit_sync_delay &&
        binlog_group_commit_sync_no_delay_count == other.binlog_group_commit_sync_no_delay_count &&
        replica_net_timeout == other.replica_net_timeout &&
        require_secure_transport == other.require_secure_transport &&
        innodb_redo_log_capacity == other.innodb_redo_log_capacity &&
        thread_pool_transaction_delay == other.thread_pool_transaction_delay &&
        thread_pool_query_threads_per_group == other.thread_pool_query_threads_per_group &&
        explain_format == other.explain_format &&
        explicit_defaults_for_timestamp == other.explicit_defaults_for_timestamp &&
        sql_generate_invisible_primary_key == other.sql_generate_invisible_primary_key &&
        temptable_max_ram == other.temptable_max_ram &&
        innodb_change_buffering == other.innodb_change_buffering &&
        innodb_adaptive_hash_index == other.innodb_adaptive_hash_index &&
        innodb_undo_log_truncate == other.innodb_undo_log_truncate &&
        table_definition_cache == other.table_definition_cache &&
        table_open_cache == other.table_open_cache &&
        relay_log_space_limit == other.relay_log_space_limit &&
        optimizer_switch == other.optimizer_switch &&
        replica_type_conversions == other.replica_type_conversions &&
        replica_parallel_workers == other.replica_parallel_workers &&
        skip_name_resolve == other.skip_name_resolve &&
        max_user_connections == other.max_user_connections &&
        join_buffer_size == other.join_buffer_size &&
        max_seeks_for_key == other.max_seeks_for_key &&
        range_optimizer_max_mem_size == other.range_optimizer_max_mem_size &&
        auto_increment_increment == other.auto_increment_increment &&
        auto_increment_offset == other.auto_increment_offset &&
        innodb_autoinc_lock_mode == other.innodb_autoinc_lock_mode &&
        innodb_rollback_on_timeout == other.innodb_rollback_on_timeout &&
        innodb_online_alter_log_max_size == other.innodb_online_alter_log_max_size &&
        innodb_sort_buffer_size == other.innodb_sort_buffer_size &&
        innodb_numa_interleave == other.innodb_numa_interleave &&
        thread_pool_size == other.thread_pool_size &&
        long_query_time == other.long_query_time
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines

    # @see the `==` method
    # @param [Object] other the other object to be compared
    def eql?(other)
      self == other
    end

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [completion_type, big_tables, character_set_server, collation_server, connection_memory_chunk_size, connection_memory_limit, default_authentication_plugin, global_connection_memory_limit, global_connection_memory_tracking, transaction_isolation, innodb_ft_server_stopword_table, mandatory_roles, autocommit, foreign_key_checks, group_replication_consistency, group_concat_max_len, innodb_ft_enable_stopword, innodb_log_writer_threads, local_infile, mysql_firewall_mode, mysqlx_enable_hello_notice, sql_require_primary_key, sql_warnings, binlog_expire_logs_seconds, binlog_row_metadata, binlog_row_value_options, binlog_transaction_compression, innodb_buffer_pool_size, innodb_ft_result_cache_limit, max_binlog_cache_size, max_connect_errors, max_heap_table_size, max_connections, max_prepared_stmt_count, connect_timeout, cte_max_recursion_depth, generated_random_password_length, information_schema_stats_expiry, innodb_buffer_pool_dump_pct, innodb_buffer_pool_instances, innodb_ddl_buffer_size, innodb_ddl_threads, innodb_ft_max_token_size, innodb_ft_min_token_size, innodb_ft_num_word_optimize, innodb_lock_wait_timeout, innodb_max_purge_lag, innodb_max_purge_lag_delay, interactive_timeout, innodb_stats_persistent_sample_pages, innodb_stats_transient_sample_pages, innodb_strict_mode, max_allowed_packet, max_execution_time, mysqlx_connect_timeout, mysqlx_document_id_unique_prefix, mysqlx_idle_worker_thread_timeout, mysqlx_interactive_timeout, mysqlx_max_allowed_packet, mysqlx_min_worker_threads, mysqlx_read_timeout, mysqlx_wait_timeout, mysqlx_write_timeout, net_read_timeout, net_write_timeout, parser_max_mem_size, query_alloc_block_size, query_prealloc_size, regexp_time_limit, sql_mode, tmp_table_size, mysqlx_deflate_default_compression_level, mysqlx_deflate_max_client_compression_level, mysqlx_lz4_max_client_compression_level, mysqlx_lz4_default_compression_level, mysqlx_zstd_max_client_compression_level, mysqlx_zstd_default_compression_level, mysql_zstd_default_compression_level, sort_buffer_size, wait_timeout, thread_pool_dedicated_listeners, thread_pool_max_transactions_limit, time_zone, block_encryption_mode, binlog_group_commit_sync_delay, binlog_group_commit_sync_no_delay_count, replica_net_timeout, require_secure_transport, innodb_redo_log_capacity, thread_pool_transaction_delay, thread_pool_query_threads_per_group, explain_format, explicit_defaults_for_timestamp, sql_generate_invisible_primary_key, temptable_max_ram, innodb_change_buffering, innodb_adaptive_hash_index, innodb_undo_log_truncate, table_definition_cache, table_open_cache, relay_log_space_limit, optimizer_switch, replica_type_conversions, replica_parallel_workers, skip_name_resolve, max_user_connections, join_buffer_size, max_seeks_for_key, range_optimizer_max_mem_size, auto_increment_increment, auto_increment_offset, innodb_autoinc_lock_mode, innodb_rollback_on_timeout, innodb_online_alter_log_max_size, innodb_sort_buffer_size, innodb_numa_interleave, thread_pool_size, long_query_time].hash
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)

      self.class.swagger_types.each_pair do |key, type|
        if type =~ /^Array<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            public_method("#{key}=").call(
              attributes[self.class.attribute_map[key]]
                .map { |v| OCI::Internal::Util.convert_to_type(Regexp.last_match(1), v) }
            )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          public_method("#{key}=").call(
            OCI::Internal::Util.convert_to_type(type, attributes[self.class.attribute_map[key]])
          )
        end
        # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = public_method(attr).call
        next if value.nil? && !instance_variable_defined?("@#{attr}")

        hash[param] = _to_hash(value)
      end
      hash
    end

    private

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
# rubocop:enable Lint/UnneededCopDisableDirective, Metrics/LineLength
