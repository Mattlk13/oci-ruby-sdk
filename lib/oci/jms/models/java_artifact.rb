# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20210610
require 'date'
require 'logger'

# rubocop:disable Lint/UnneededCopDisableDirective, Metrics/LineLength
module OCI
  # Information about a binary artifact of Java.
  class Jms::Models::JavaArtifact
    ARTIFACT_CONTENT_TYPE_ENUM = [
      ARTIFACT_CONTENT_TYPE_JDK = 'JDK'.freeze,
      ARTIFACT_CONTENT_TYPE_JRE = 'JRE'.freeze,
      ARTIFACT_CONTENT_TYPE_SERVER_JRE = 'SERVER_JRE'.freeze,
      ARTIFACT_CONTENT_TYPE_UNKNOWN_ENUM_VALUE = 'UNKNOWN_ENUM_VALUE'.freeze
    ].freeze

    # **[Required]** Unique identifier for the artifact.
    # @return [Integer]
    attr_accessor :artifact_id

    # **[Required]** Description of the binary artifact. Typically includes the OS, architecture, and installer type.
    # @return [String]
    attr_accessor :artifact_description

    # **[Required]** Product content type of this artifact.
    # @return [String]
    attr_reader :artifact_content_type

    # **[Required]** Approximate compressed file size in bytes.
    # @return [Integer]
    attr_accessor :approximate_file_size_in_bytes

    # **[Required]** SHA256 checksum of the artifact.
    # @return [String]
    attr_accessor :sha256

    # The file name of the artifact.
    # @return [String]
    attr_accessor :artifact_file_name

    # **[Required]** The target Operating System family for the artifact.
    # @return [String]
    attr_accessor :os_family

    # **[Required]** The target Operating System architecture for the artifact.
    # @return [String]
    attr_accessor :architecture

    # **[Required]** The package type(typically the file extension) of the artifact.
    # @return [String]
    attr_accessor :package_type

    # Additional information about the package type.
    # @return [String]
    attr_accessor :package_type_detail

    # **[Required]** The endpoint that returns a short-lived artifact download URL in the response payload.
    # This download url can then be used for downloading the artifact.
    # See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
    #
    # @return [String]
    attr_accessor :download_url

    # **[Required]** The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles.
    # Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
    #
    # @return [String]
    attr_accessor :script_download_url

    # **[Required]** The URL for retrieving the checksum for the artifact.
    # Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
    #
    # @return [String]
    attr_accessor :script_checksum_url

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        # rubocop:disable Style/SymbolLiteral
        'artifact_id': :'artifactId',
        'artifact_description': :'artifactDescription',
        'artifact_content_type': :'artifactContentType',
        'approximate_file_size_in_bytes': :'approximateFileSizeInBytes',
        'sha256': :'sha256',
        'artifact_file_name': :'artifactFileName',
        'os_family': :'osFamily',
        'architecture': :'architecture',
        'package_type': :'packageType',
        'package_type_detail': :'packageTypeDetail',
        'download_url': :'downloadUrl',
        'script_download_url': :'scriptDownloadUrl',
        'script_checksum_url': :'scriptChecksumUrl'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        # rubocop:disable Style/SymbolLiteral
        'artifact_id': :'Integer',
        'artifact_description': :'String',
        'artifact_content_type': :'String',
        'approximate_file_size_in_bytes': :'Integer',
        'sha256': :'String',
        'artifact_file_name': :'String',
        'os_family': :'String',
        'architecture': :'String',
        'package_type': :'String',
        'package_type_detail': :'String',
        'download_url': :'String',
        'script_download_url': :'String',
        'script_checksum_url': :'String'
        # rubocop:enable Style/SymbolLiteral
      }
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral


    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    # @option attributes [Integer] :artifact_id The value to assign to the {#artifact_id} property
    # @option attributes [String] :artifact_description The value to assign to the {#artifact_description} property
    # @option attributes [String] :artifact_content_type The value to assign to the {#artifact_content_type} property
    # @option attributes [Integer] :approximate_file_size_in_bytes The value to assign to the {#approximate_file_size_in_bytes} property
    # @option attributes [String] :sha256 The value to assign to the {#sha256} property
    # @option attributes [String] :artifact_file_name The value to assign to the {#artifact_file_name} property
    # @option attributes [String] :os_family The value to assign to the {#os_family} property
    # @option attributes [String] :architecture The value to assign to the {#architecture} property
    # @option attributes [String] :package_type The value to assign to the {#package_type} property
    # @option attributes [String] :package_type_detail The value to assign to the {#package_type_detail} property
    # @option attributes [String] :download_url The value to assign to the {#download_url} property
    # @option attributes [String] :script_download_url The value to assign to the {#script_download_url} property
    # @option attributes [String] :script_checksum_url The value to assign to the {#script_checksum_url} property
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      self.artifact_id = attributes[:'artifactId'] if attributes[:'artifactId']

      raise 'You cannot provide both :artifactId and :artifact_id' if attributes.key?(:'artifactId') && attributes.key?(:'artifact_id')

      self.artifact_id = attributes[:'artifact_id'] if attributes[:'artifact_id']

      self.artifact_description = attributes[:'artifactDescription'] if attributes[:'artifactDescription']

      raise 'You cannot provide both :artifactDescription and :artifact_description' if attributes.key?(:'artifactDescription') && attributes.key?(:'artifact_description')

      self.artifact_description = attributes[:'artifact_description'] if attributes[:'artifact_description']

      self.artifact_content_type = attributes[:'artifactContentType'] if attributes[:'artifactContentType']

      raise 'You cannot provide both :artifactContentType and :artifact_content_type' if attributes.key?(:'artifactContentType') && attributes.key?(:'artifact_content_type')

      self.artifact_content_type = attributes[:'artifact_content_type'] if attributes[:'artifact_content_type']

      self.approximate_file_size_in_bytes = attributes[:'approximateFileSizeInBytes'] if attributes[:'approximateFileSizeInBytes']

      raise 'You cannot provide both :approximateFileSizeInBytes and :approximate_file_size_in_bytes' if attributes.key?(:'approximateFileSizeInBytes') && attributes.key?(:'approximate_file_size_in_bytes')

      self.approximate_file_size_in_bytes = attributes[:'approximate_file_size_in_bytes'] if attributes[:'approximate_file_size_in_bytes']

      self.sha256 = attributes[:'sha256'] if attributes[:'sha256']

      self.artifact_file_name = attributes[:'artifactFileName'] if attributes[:'artifactFileName']

      raise 'You cannot provide both :artifactFileName and :artifact_file_name' if attributes.key?(:'artifactFileName') && attributes.key?(:'artifact_file_name')

      self.artifact_file_name = attributes[:'artifact_file_name'] if attributes[:'artifact_file_name']

      self.os_family = attributes[:'osFamily'] if attributes[:'osFamily']

      raise 'You cannot provide both :osFamily and :os_family' if attributes.key?(:'osFamily') && attributes.key?(:'os_family')

      self.os_family = attributes[:'os_family'] if attributes[:'os_family']

      self.architecture = attributes[:'architecture'] if attributes[:'architecture']

      self.package_type = attributes[:'packageType'] if attributes[:'packageType']

      raise 'You cannot provide both :packageType and :package_type' if attributes.key?(:'packageType') && attributes.key?(:'package_type')

      self.package_type = attributes[:'package_type'] if attributes[:'package_type']

      self.package_type_detail = attributes[:'packageTypeDetail'] if attributes[:'packageTypeDetail']

      raise 'You cannot provide both :packageTypeDetail and :package_type_detail' if attributes.key?(:'packageTypeDetail') && attributes.key?(:'package_type_detail')

      self.package_type_detail = attributes[:'package_type_detail'] if attributes[:'package_type_detail']

      self.download_url = attributes[:'downloadUrl'] if attributes[:'downloadUrl']

      raise 'You cannot provide both :downloadUrl and :download_url' if attributes.key?(:'downloadUrl') && attributes.key?(:'download_url')

      self.download_url = attributes[:'download_url'] if attributes[:'download_url']

      self.script_download_url = attributes[:'scriptDownloadUrl'] if attributes[:'scriptDownloadUrl']

      raise 'You cannot provide both :scriptDownloadUrl and :script_download_url' if attributes.key?(:'scriptDownloadUrl') && attributes.key?(:'script_download_url')

      self.script_download_url = attributes[:'script_download_url'] if attributes[:'script_download_url']

      self.script_checksum_url = attributes[:'scriptChecksumUrl'] if attributes[:'scriptChecksumUrl']

      raise 'You cannot provide both :scriptChecksumUrl and :script_checksum_url' if attributes.key?(:'scriptChecksumUrl') && attributes.key?(:'script_checksum_url')

      self.script_checksum_url = attributes[:'script_checksum_url'] if attributes[:'script_checksum_url']
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines, Style/SymbolLiteral

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] artifact_content_type Object to be assigned
    def artifact_content_type=(artifact_content_type)
      # rubocop:disable Style/ConditionalAssignment
      if artifact_content_type && !ARTIFACT_CONTENT_TYPE_ENUM.include?(artifact_content_type)
        OCI.logger.debug("Unknown value for 'artifact_content_type' [" + artifact_content_type + "]. Mapping to 'ARTIFACT_CONTENT_TYPE_UNKNOWN_ENUM_VALUE'") if OCI.logger
        @artifact_content_type = ARTIFACT_CONTENT_TYPE_UNKNOWN_ENUM_VALUE
      else
        @artifact_content_type = artifact_content_type
      end
      # rubocop:enable Style/ConditionalAssignment
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines


    # Checks equality by comparing each attribute.
    # @param [Object] other the other object to be compared
    def ==(other)
      return true if equal?(other)

      self.class == other.class &&
        artifact_id == other.artifact_id &&
        artifact_description == other.artifact_description &&
        artifact_content_type == other.artifact_content_type &&
        approximate_file_size_in_bytes == other.approximate_file_size_in_bytes &&
        sha256 == other.sha256 &&
        artifact_file_name == other.artifact_file_name &&
        os_family == other.os_family &&
        architecture == other.architecture &&
        package_type == other.package_type &&
        package_type_detail == other.package_type_detail &&
        download_url == other.download_url &&
        script_download_url == other.script_download_url &&
        script_checksum_url == other.script_checksum_url
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity, Layout/EmptyLines

    # @see the `==` method
    # @param [Object] other the other object to be compared
    def eql?(other)
      self == other
    end

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [artifact_id, artifact_description, artifact_content_type, approximate_file_size_in_bytes, sha256, artifact_file_name, os_family, architecture, package_type, package_type_detail, download_url, script_download_url, script_checksum_url].hash
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # rubocop:disable Metrics/AbcSize, Layout/EmptyLines


    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)

      self.class.swagger_types.each_pair do |key, type|
        if type =~ /^Array<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            public_method("#{key}=").call(
              attributes[self.class.attribute_map[key]]
                .map { |v| OCI::Internal::Util.convert_to_type(Regexp.last_match(1), v) }
            )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          public_method("#{key}=").call(
            OCI::Internal::Util.convert_to_type(type, attributes[self.class.attribute_map[key]])
          )
        end
        # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end
    # rubocop:enable Metrics/AbcSize, Layout/EmptyLines

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = public_method(attr).call
        next if value.nil? && !instance_variable_defined?("@#{attr}")

        hash[param] = _to_hash(value)
      end
      hash
    end

    private

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
# rubocop:enable Lint/UnneededCopDisableDirective, Metrics/LineLength
