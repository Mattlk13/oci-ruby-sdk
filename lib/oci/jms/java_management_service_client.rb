# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20210610

require 'uri'
require 'logger'

# rubocop:disable Lint/UnneededCopDisableDirective, Metrics/LineLength
module OCI
  # The APIs for the [Fleet Management](https://docs.oracle.com/en-us/iaas/jms/doc/fleet-management.html) feature of Java Management Service to monitor and manage the usage of Java in your enterprise. Use these APIs to manage fleets, configure managed instances to report to fleets, and gain insights into the Java workloads running on these instances by carrying out basic and advanced features.
  class Jms::JavaManagementServiceClient
    # Client used to make HTTP requests.
    # @return [OCI::ApiClient]
    attr_reader :api_client

    # Fully qualified endpoint URL
    # @return [String]
    attr_reader :endpoint

    # The default retry configuration to apply to all operations in this service client. This can be overridden
    # on a per-operation basis. The default retry configuration value is `nil`, which means that an operation
    # will not perform any retries
    # @return [OCI::Retry::RetryConfig]
    attr_reader :retry_config

    # The region, which will usually correspond to a value in {OCI::Regions::REGION_ENUM}.
    # @return [String]
    attr_reader :region

    # rubocop:disable Metrics/AbcSize, Metrics/CyclomaticComplexity, Layout/EmptyLines, Metrics/PerceivedComplexity


    # Creates a new JavaManagementServiceClient.
    # Notes:
    #   If a config is not specified, then the global OCI.config will be used.
    #
    #   This client is not thread-safe
    #
    #   Either a region or an endpoint must be specified.  If an endpoint is specified, it will be used instead of the
    #     region. A region may be specified in the config or via or the region parameter. If specified in both, then the
    #     region parameter will be used.
    # @param [Config] config A Config object.
    # @param [String] region A region used to determine the service endpoint. This will usually
    #   correspond to a value in {OCI::Regions::REGION_ENUM}, but may be an arbitrary string.
    # @param [String] endpoint The fully qualified endpoint URL
    # @param [OCI::BaseSigner] signer A signer implementation which can be used by this client. If this is not provided then
    #   a signer will be constructed via the provided config. One use case of this parameter is instance principals authentication,
    #   so that the instance principals signer can be provided to the client
    # @param [OCI::ApiClientProxySettings] proxy_settings If your environment requires you to use a proxy server for outgoing HTTP requests
    #   the details for the proxy can be provided in this parameter
    # @param [OCI::Retry::RetryConfig] retry_config The retry configuration for this service client. This represents the default retry configuration to
    #   apply across all operations. This can be overridden on a per-operation basis. The default retry configuration value is `nil`, which means that an operation
    #   will not perform any retries
    def initialize(config: nil, region: nil, endpoint: nil, signer: nil, proxy_settings: nil, retry_config: nil)
      # If the signer is an InstancePrincipalsSecurityTokenSigner or SecurityTokenSigner and no config was supplied (they are self-sufficient signers)
      # then create a dummy config to pass to the ApiClient constructor. If customers wish to create a client which uses instance principals
      # and has config (either populated programmatically or loaded from a file), they must construct that config themselves and then
      # pass it to this constructor.
      #
      # If there is no signer (or the signer is not an instance principals signer) and no config was supplied, this is not valid
      # so try and load the config from the default file.
      config = OCI::Config.validate_and_build_config_with_signer(config, signer)

      signer = OCI::Signer.config_file_auth_builder(config) if signer.nil?

      @api_client = OCI::ApiClient.new(config, signer, proxy_settings: proxy_settings)
      @retry_config = retry_config

      if endpoint
        @endpoint = endpoint + '/20210610'
      else
        region ||= config.region
        region ||= signer.region if signer.respond_to?(:region)
        self.region = region
      end
      logger.info "JavaManagementServiceClient endpoint set to '#{@endpoint}'." if logger
    end
    # rubocop:enable Metrics/AbcSize, Metrics/CyclomaticComplexity, Layout/EmptyLines, Metrics/PerceivedComplexity

    # Set the region that will be used to determine the service endpoint.
    # This will usually correspond to a value in {OCI::Regions::REGION_ENUM},
    # but may be an arbitrary string.
    def region=(new_region)
      @region = new_region

      raise 'A region must be specified.' unless @region

      @endpoint = OCI::Regions.get_service_endpoint_for_template(@region, 'https://javamanagement.{region}.oci.{secondLevelDomain}') + '/20210610'
      logger.info "JavaManagementServiceClient endpoint set to '#{@endpoint} from region #{@region}'." if logger
    end

    # @return [Logger] The logger for this client. May be nil.
    def logger
      @api_client.config.logger
    end

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Add Java installation sites in a Fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::AddFleetInstallationSitesDetails] add_fleet_installation_sites_details List of installation sites to be added.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/add_fleet_installation_sites.rb.html) to see an example of how to use add_fleet_installation_sites API.
    def add_fleet_installation_sites(fleet_id, add_fleet_installation_sites_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#add_fleet_installation_sites.' if logger

      raise "Missing the required parameter 'fleet_id' when calling add_fleet_installation_sites." if fleet_id.nil?
      raise "Missing the required parameter 'add_fleet_installation_sites_details' when calling add_fleet_installation_sites." if add_fleet_installation_sites_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/addInstallationSites'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(add_fleet_installation_sites_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#add_fleet_installation_sites') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Deletes the work request specified by an identifier.
    # @param [String] work_request_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the asynchronous work request.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/cancel_work_request.rb.html) to see an example of how to use cancel_work_request API.
    def cancel_work_request(work_request_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#cancel_work_request.' if logger

      raise "Missing the required parameter 'work_request_id' when calling cancel_work_request." if work_request_id.nil?
      raise "Parameter value for 'work_request_id' must not be blank" if OCI::Internal::Util.blank_string?(work_request_id)

      path = '/workRequests/{workRequestId}'.sub('{workRequestId}', work_request_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#cancel_work_request') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Move a specified Fleet into the compartment identified in the POST form. When provided, If-Match is checked against ETag values of the resource.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::ChangeFleetCompartmentDetails] change_fleet_compartment_details Compartment identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/change_fleet_compartment.rb.html) to see an example of how to use change_fleet_compartment API.
    def change_fleet_compartment(fleet_id, change_fleet_compartment_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#change_fleet_compartment.' if logger

      raise "Missing the required parameter 'fleet_id' when calling change_fleet_compartment." if fleet_id.nil?
      raise "Missing the required parameter 'change_fleet_compartment_details' when calling change_fleet_compartment." if change_fleet_compartment_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/changeCompartment'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(change_fleet_compartment_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#change_fleet_compartment') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Add a new record to the fleet blocklist.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::CreateBlocklistDetails] create_blocklist_details Details for the new blocklist record.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::Blocklist Blocklist}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/create_blocklist.rb.html) to see an example of how to use create_blocklist API.
    def create_blocklist(fleet_id, create_blocklist_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#create_blocklist.' if logger

      raise "Missing the required parameter 'fleet_id' when calling create_blocklist." if fleet_id.nil?
      raise "Missing the required parameter 'create_blocklist_details' when calling create_blocklist." if create_blocklist_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/blocklists'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(create_blocklist_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#create_blocklist') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::Blocklist'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to perform validation of the DRS file and create the file to the Object Storage.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::CreateDrsFileDetails] create_drs_file_details Detail information to create DRS
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/create_drs_file.rb.html) to see an example of how to use create_drs_file API.
    def create_drs_file(fleet_id, create_drs_file_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#create_drs_file.' if logger

      raise "Missing the required parameter 'fleet_id' when calling create_drs_file." if fleet_id.nil?
      raise "Missing the required parameter 'create_drs_file_details' when calling create_drs_file." if create_drs_file_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/drsFiles'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(create_drs_file_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#create_drs_file') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Create a new Fleet using the information provided.
    #
    # `inventoryLog` is now a required parameter for CreateFleet API.
    # Update existing applications using this API
    # before July 15, 2022 to ensure the applications continue to work.
    # See the [Service Change Notice](https://docs.oracle.com/en-us/iaas/Content/servicechanges.htm#JMS) for more details.
    # Migrate existing fleets using the `UpdateFleet` API to set the `inventoryLog` parameter.
    #
    # @param [OCI::Jms::Models::CreateFleetDetails] create_fleet_details Details for the new Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/create_fleet.rb.html) to see an example of how to use create_fleet API.
    def create_fleet(create_fleet_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#create_fleet.' if logger

      raise "Missing the required parameter 'create_fleet_details' when calling create_fleet." if create_fleet_details.nil?

      path = '/fleets'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(create_fleet_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#create_fleet') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Registers an agent's JmsPlugin, optionally attaching to an existing fleet of the tenancy.
    # JmsPlugins registered fleet-less are created with lifecycle state INACTIVE.
    # For the operation to be authorized, the agent must exist, and the authorized user requires JMS_PLUGIN_CREATE permission for the agent's compartment.
    #
    # @param [OCI::Jms::Models::CreateJmsPluginDetails] create_jms_plugin_details Details for the new JmsPlugin.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JmsPlugin JmsPlugin}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/create_jms_plugin.rb.html) to see an example of how to use create_jms_plugin API.
    def create_jms_plugin(create_jms_plugin_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#create_jms_plugin.' if logger

      raise "Missing the required parameter 'create_jms_plugin_details' when calling create_jms_plugin." if create_jms_plugin_details.nil?

      path = '/jmsPlugins'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(create_jms_plugin_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#create_jms_plugin') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JmsPlugin'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Deletes the blocklist record specified by an identifier.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] blocklist_key The unique identifier of the blocklist record.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/delete_blocklist.rb.html) to see an example of how to use delete_blocklist API.
    def delete_blocklist(fleet_id, blocklist_key, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#delete_blocklist.' if logger

      raise "Missing the required parameter 'fleet_id' when calling delete_blocklist." if fleet_id.nil?
      raise "Missing the required parameter 'blocklist_key' when calling delete_blocklist." if blocklist_key.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'blocklist_key' must not be blank" if OCI::Internal::Util.blank_string?(blocklist_key)

      path = '/fleets/{fleetId}/blocklists/{blocklistKey}'.sub('{fleetId}', fleet_id.to_s).sub('{blocklistKey}', blocklist_key.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#delete_blocklist') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Deletes the metadata for the result of a Crypto event analysis. The actual report shall remain in the object storage.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] crypto_analysis_result_id The OCID of the analysis result.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/delete_crypto_analysis_result.rb.html) to see an example of how to use delete_crypto_analysis_result API.
    def delete_crypto_analysis_result(fleet_id, crypto_analysis_result_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#delete_crypto_analysis_result.' if logger

      raise "Missing the required parameter 'fleet_id' when calling delete_crypto_analysis_result." if fleet_id.nil?
      raise "Missing the required parameter 'crypto_analysis_result_id' when calling delete_crypto_analysis_result." if crypto_analysis_result_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'crypto_analysis_result_id' must not be blank" if OCI::Internal::Util.blank_string?(crypto_analysis_result_id)

      path = '/fleets/{fleetId}/cryptoAnalysisResults/{cryptoAnalysisResultId}'.sub('{fleetId}', fleet_id.to_s).sub('{cryptoAnalysisResultId}', crypto_analysis_result_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#delete_crypto_analysis_result') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to delete the DRS file from the Object Storage.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] drs_file_key The unique identifier of the DRS File in Object Storage.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/delete_drs_file.rb.html) to see an example of how to use delete_drs_file API.
    def delete_drs_file(fleet_id, drs_file_key, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#delete_drs_file.' if logger

      raise "Missing the required parameter 'fleet_id' when calling delete_drs_file." if fleet_id.nil?
      raise "Missing the required parameter 'drs_file_key' when calling delete_drs_file." if drs_file_key.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'drs_file_key' must not be blank" if OCI::Internal::Util.blank_string?(drs_file_key)

      path = '/fleets/{fleetId}/drsFiles/{drsFileKey}'.sub('{fleetId}', fleet_id.to_s).sub('{drsFileKey}', drs_file_key.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#delete_drs_file') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Deletes the Fleet specified by an identifier.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/delete_fleet.rb.html) to see an example of how to use delete_fleet API.
    def delete_fleet(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#delete_fleet.' if logger

      raise "Missing the required parameter 'fleet_id' when calling delete_fleet." if fleet_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#delete_fleet') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Delete the Java migration analysis result. The actual report will remain in the Object Storage bucket.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] java_migration_analysis_result_id The OCID of the analysis result.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/delete_java_migration_analysis_result.rb.html) to see an example of how to use delete_java_migration_analysis_result API.
    def delete_java_migration_analysis_result(fleet_id, java_migration_analysis_result_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#delete_java_migration_analysis_result.' if logger

      raise "Missing the required parameter 'fleet_id' when calling delete_java_migration_analysis_result." if fleet_id.nil?
      raise "Missing the required parameter 'java_migration_analysis_result_id' when calling delete_java_migration_analysis_result." if java_migration_analysis_result_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'java_migration_analysis_result_id' must not be blank" if OCI::Internal::Util.blank_string?(java_migration_analysis_result_id)

      path = '/fleets/{fleetId}/javaMigrationAnalysisResults/{javaMigrationAnalysisResultId}'.sub('{fleetId}', fleet_id.to_s).sub('{javaMigrationAnalysisResultId}', java_migration_analysis_result_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#delete_java_migration_analysis_result') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Deletes a JmsPlugin. The JmsPlugin may be visible for some time with state DELETED.
    # Deleted plugins will not be able to communicate with the JMS service.
    #
    # @param [String] jms_plugin_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/delete_jms_plugin.rb.html) to see an example of how to use delete_jms_plugin API.
    def delete_jms_plugin(jms_plugin_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#delete_jms_plugin.' if logger

      raise "Missing the required parameter 'jms_plugin_id' when calling delete_jms_plugin." if jms_plugin_id.nil?
      raise "Parameter value for 'jms_plugin_id' must not be blank" if OCI::Internal::Util.blank_string?(jms_plugin_id)

      path = '/jmsPlugins/{jmsPluginId}'.sub('{jmsPluginId}', jms_plugin_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#delete_jms_plugin') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Deletes only the metadata of the Performance Tuning Analysis result, but the file remains in the object storage.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] performance_tuning_analysis_result_id The OCID of the performance tuning analysis result.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/delete_performance_tuning_analysis_result.rb.html) to see an example of how to use delete_performance_tuning_analysis_result API.
    def delete_performance_tuning_analysis_result(fleet_id, performance_tuning_analysis_result_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#delete_performance_tuning_analysis_result.' if logger

      raise "Missing the required parameter 'fleet_id' when calling delete_performance_tuning_analysis_result." if fleet_id.nil?
      raise "Missing the required parameter 'performance_tuning_analysis_result_id' when calling delete_performance_tuning_analysis_result." if performance_tuning_analysis_result_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'performance_tuning_analysis_result_id' must not be blank" if OCI::Internal::Util.blank_string?(performance_tuning_analysis_result_id)

      path = '/fleets/{fleetId}/performanceTuningAnalysisResults/{performanceTuningAnalysisResultId}'.sub('{fleetId}', fleet_id.to_s).sub('{performanceTuningAnalysisResultId}', performance_tuning_analysis_result_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#delete_performance_tuning_analysis_result') do
        @api_client.call_api(
          :DELETE,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to disable the DRS in the selected target in the Fleet.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::DisableDrsDetails] disable_drs_details Detail information to disable DRS
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/disable_drs.rb.html) to see an example of how to use disable_drs API.
    def disable_drs(fleet_id, disable_drs_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#disable_drs.' if logger

      raise "Missing the required parameter 'fleet_id' when calling disable_drs." if fleet_id.nil?
      raise "Missing the required parameter 'disable_drs_details' when calling disable_drs." if disable_drs_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/disableDrs'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(disable_drs_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#disable_drs') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to enable the DRS in the selected target in the Fleet.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::EnableDrsDetails] enable_drs_details Detail information to enable DRS
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/enable_drs.rb.html) to see an example of how to use enable_drs API.
    def enable_drs(fleet_id, enable_drs_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#enable_drs.' if logger

      raise "Missing the required parameter 'fleet_id' when calling enable_drs." if fleet_id.nil?
      raise "Missing the required parameter 'enable_drs_details' when calling enable_drs." if enable_drs_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/enableDrs'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(enable_drs_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#enable_drs') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Generates Agent Deploy Script for Fleet using the information provided.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::GenerateAgentDeployScriptDetails] generate_agent_deploy_script_details Attributes to generate the agent deploy script for a Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String, IO] :response_target Streaming http body into a file (specified by file name or File object) or IO object if the block is not given
    # @option [Block] &block Streaming http body to the block
    # @return [Response] A Response object with data of type String if response_target and block are not given, otherwise with nil data
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/generate_agent_deploy_script.rb.html) to see an example of how to use generate_agent_deploy_script API.
    def generate_agent_deploy_script(fleet_id, generate_agent_deploy_script_details, opts = {}, &block)
      logger.debug 'Calling operation JavaManagementServiceClient#generate_agent_deploy_script.' if logger

      raise "Missing the required parameter 'fleet_id' when calling generate_agent_deploy_script." if fleet_id.nil?
      raise "Missing the required parameter 'generate_agent_deploy_script_details' when calling generate_agent_deploy_script." if generate_agent_deploy_script_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/generateAgentDeployScript'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = opts[:accept] if opts[:accept]
      header_params[:accept] ||= 'text/plain'
      header_params[:'accept-encoding'] = opts[:accept_encoding] if opts[:accept_encoding]
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(generate_agent_deploy_script_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#generate_agent_deploy_script') do
        if !block.nil?
          @api_client.call_api(
            :POST,
            path,
            endpoint,
            header_params: header_params,
            query_params: query_params,
            operation_signing_strategy: operation_signing_strategy,
            body: post_body,
            return_type: 'Stream',
            &block
          )
        elsif opts[:response_target]
          if opts[:response_target].respond_to? :write
            @api_client.call_api(
              :POST,
              path,
              endpoint,
              header_params: header_params,
              query_params: query_params,
              operation_signing_strategy: operation_signing_strategy,
              body: post_body,
              return_type: 'Stream',
              &proc { |chunk, _response| opts[:response_target].write(chunk) }
            )
          elsif opts[:response_target].is_a?(String)
            File.open(opts[:response_target], 'wb') do |output|
              return @api_client.call_api(
                :POST,
                path,
                endpoint,
                header_params: header_params,
                query_params: query_params,
                operation_signing_strategy: operation_signing_strategy,
                body: post_body,
                return_type: 'Stream',
                &proc { |chunk, _response| output.write(chunk) }
              )
            end
          end
        else
          @api_client.call_api(
            :POST,
            path,
            endpoint,
            header_params: header_params,
            query_params: query_params,
            operation_signing_strategy: operation_signing_strategy,
            body: post_body,
            return_type: 'String'
          )
        end
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Generates the agent installer configuration using the information provided.
    #
    # @param [OCI::Jms::Models::GenerateAgentInstallerConfigurationDetails] generate_agent_installer_configuration_details Details that are used to generate the installer configuration for a fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String, IO] :response_target Streaming http body into a file (specified by file name or File object) or IO object if the block is not given
    # @option [Block] &block Streaming http body to the block
    # @return [Response] A Response object with data of type String if response_target and block are not given, otherwise with nil data
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/generate_agent_installer_configuration.rb.html) to see an example of how to use generate_agent_installer_configuration API.
    def generate_agent_installer_configuration(generate_agent_installer_configuration_details, opts = {}, &block)
      logger.debug 'Calling operation JavaManagementServiceClient#generate_agent_installer_configuration.' if logger

      raise "Missing the required parameter 'generate_agent_installer_configuration_details' when calling generate_agent_installer_configuration." if generate_agent_installer_configuration_details.nil?

      path = '/agentInstallers/actions/generateAgentInstallerConfiguration'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = opts[:accept] if opts[:accept]
      header_params[:accept] ||= 'text/plain'
      header_params[:'accept-encoding'] = opts[:accept_encoding] if opts[:accept_encoding]
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(generate_agent_installer_configuration_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#generate_agent_installer_configuration') do
        if !block.nil?
          @api_client.call_api(
            :POST,
            path,
            endpoint,
            header_params: header_params,
            query_params: query_params,
            operation_signing_strategy: operation_signing_strategy,
            body: post_body,
            return_type: 'Stream',
            &block
          )
        elsif opts[:response_target]
          if opts[:response_target].respond_to? :write
            @api_client.call_api(
              :POST,
              path,
              endpoint,
              header_params: header_params,
              query_params: query_params,
              operation_signing_strategy: operation_signing_strategy,
              body: post_body,
              return_type: 'Stream',
              &proc { |chunk, _response| opts[:response_target].write(chunk) }
            )
          elsif opts[:response_target].is_a?(String)
            File.open(opts[:response_target], 'wb') do |output|
              return @api_client.call_api(
                :POST,
                path,
                endpoint,
                header_params: header_params,
                query_params: query_params,
                operation_signing_strategy: operation_signing_strategy,
                body: post_body,
                return_type: 'Stream',
                &proc { |chunk, _response| output.write(chunk) }
              )
            end
          end
        else
          @api_client.call_api(
            :POST,
            path,
            endpoint,
            header_params: header_params,
            query_params: query_params,
            operation_signing_strategy: operation_signing_strategy,
            body: post_body,
            return_type: 'String'
          )
        end
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Generates Load Pipeline Script
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::GenerateLoadPipelineScriptDetails] generate_load_pipeline_script_details Attributes to generate the load pipeline script.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String, IO] :response_target Streaming http body into a file (specified by file name or File object) or IO object if the block is not given
    # @option [Block] &block Streaming http body to the block
    # @return [Response] A Response object with data of type String if response_target and block are not given, otherwise with nil data
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/generate_load_pipeline_script.rb.html) to see an example of how to use generate_load_pipeline_script API.
    def generate_load_pipeline_script(fleet_id, generate_load_pipeline_script_details, opts = {}, &block)
      logger.debug 'Calling operation JavaManagementServiceClient#generate_load_pipeline_script.' if logger

      raise "Missing the required parameter 'fleet_id' when calling generate_load_pipeline_script." if fleet_id.nil?
      raise "Missing the required parameter 'generate_load_pipeline_script_details' when calling generate_load_pipeline_script." if generate_load_pipeline_script_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/generateLoadPipelineScript'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = opts[:accept] if opts[:accept]
      header_params[:accept] ||= 'text/plain'
      header_params[:'accept-encoding'] = opts[:accept_encoding] if opts[:accept_encoding]
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(generate_load_pipeline_script_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#generate_load_pipeline_script') do
        if !block.nil?
          @api_client.call_api(
            :POST,
            path,
            endpoint,
            header_params: header_params,
            query_params: query_params,
            operation_signing_strategy: operation_signing_strategy,
            body: post_body,
            return_type: 'Stream',
            &block
          )
        elsif opts[:response_target]
          if opts[:response_target].respond_to? :write
            @api_client.call_api(
              :POST,
              path,
              endpoint,
              header_params: header_params,
              query_params: query_params,
              operation_signing_strategy: operation_signing_strategy,
              body: post_body,
              return_type: 'Stream',
              &proc { |chunk, _response| opts[:response_target].write(chunk) }
            )
          elsif opts[:response_target].is_a?(String)
            File.open(opts[:response_target], 'wb') do |output|
              return @api_client.call_api(
                :POST,
                path,
                endpoint,
                header_params: header_params,
                query_params: query_params,
                operation_signing_strategy: operation_signing_strategy,
                body: post_body,
                return_type: 'Stream',
                &proc { |chunk, _response| output.write(chunk) }
              )
            end
          end
        else
          @api_client.call_api(
            :POST,
            path,
            endpoint,
            header_params: header_params,
            query_params: query_params,
            operation_signing_strategy: operation_signing_strategy,
            body: post_body,
            return_type: 'String'
          )
        end
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve the metadata for the result of a Crypto event analysis.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] crypto_analysis_result_id The OCID of the analysis result.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::CryptoAnalysisResult CryptoAnalysisResult}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_crypto_analysis_result.rb.html) to see an example of how to use get_crypto_analysis_result API.
    def get_crypto_analysis_result(fleet_id, crypto_analysis_result_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_crypto_analysis_result.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_crypto_analysis_result." if fleet_id.nil?
      raise "Missing the required parameter 'crypto_analysis_result_id' when calling get_crypto_analysis_result." if crypto_analysis_result_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'crypto_analysis_result_id' must not be blank" if OCI::Internal::Util.blank_string?(crypto_analysis_result_id)

      path = '/fleets/{fleetId}/cryptoAnalysisResults/{cryptoAnalysisResultId}'.sub('{fleetId}', fleet_id.to_s).sub('{cryptoAnalysisResultId}', crypto_analysis_result_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_crypto_analysis_result') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::CryptoAnalysisResult'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Get the detail about the created DRS file in the Fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] drs_file_key The unique identifier of the DRS File in Object Storage.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::DrsFile DrsFile}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_drs_file.rb.html) to see an example of how to use get_drs_file API.
    def get_drs_file(fleet_id, drs_file_key, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_drs_file.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_drs_file." if fleet_id.nil?
      raise "Missing the required parameter 'drs_file_key' when calling get_drs_file." if drs_file_key.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'drs_file_key' must not be blank" if OCI::Internal::Util.blank_string?(drs_file_key)

      path = '/fleets/{fleetId}/drsFiles/{drsFileKey}'.sub('{fleetId}', fleet_id.to_s).sub('{drsFileKey}', drs_file_key.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:page] = opts[:page] if opts[:page]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_drs_file') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::DrsFile'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns export setting for the specified fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::ExportSetting ExportSetting}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_export_setting.rb.html) to see an example of how to use get_export_setting API.
    def get_export_setting(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_export_setting.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_export_setting." if fleet_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/exportSetting'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_export_setting') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::ExportSetting'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns last export status for the specified fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::ExportStatus ExportStatus}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_export_status.rb.html) to see an example of how to use get_export_status API.
    def get_export_status(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_export_status.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_export_status." if fleet_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/exportStatus'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_export_status') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::ExportStatus'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve a Fleet with the specified identifier.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::Fleet Fleet}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_fleet.rb.html) to see an example of how to use get_fleet API.
    def get_fleet(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_fleet.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_fleet." if fleet_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_fleet') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::Fleet'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns Fleet level advanced feature configuration.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::FleetAdvancedFeatureConfiguration FleetAdvancedFeatureConfiguration}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_fleet_advanced_feature_configuration.rb.html) to see an example of how to use get_fleet_advanced_feature_configuration API.
    def get_fleet_advanced_feature_configuration(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_fleet_advanced_feature_configuration.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_fleet_advanced_feature_configuration." if fleet_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/advancedFeatureConfiguration'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_fleet_advanced_feature_configuration') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::FleetAdvancedFeatureConfiguration'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve a Fleet Agent Configuration for the specified Fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::FleetAgentConfiguration FleetAgentConfiguration}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_fleet_agent_configuration.rb.html) to see an example of how to use get_fleet_agent_configuration API.
    def get_fleet_agent_configuration(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_fleet_agent_configuration.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_fleet_agent_configuration." if fleet_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/agentConfiguration'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_fleet_agent_configuration') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::FleetAgentConfiguration'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns metadata associated with a specific Java release family.
    #
    # @param [String] family_version Unique Java family version identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaFamily JavaFamily}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_java_family.rb.html) to see an example of how to use get_java_family API.
    def get_java_family(family_version, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_java_family.' if logger

      raise "Missing the required parameter 'family_version' when calling get_java_family." if family_version.nil?
      raise "Parameter value for 'family_version' must not be blank" if OCI::Internal::Util.blank_string?(family_version)

      path = '/javaFamilies/{familyVersion}'.sub('{familyVersion}', family_version.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_java_family') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaFamily'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve Java Migration Analysis result.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] java_migration_analysis_result_id The OCID of the analysis result.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaMigrationAnalysisResult JavaMigrationAnalysisResult}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_java_migration_analysis_result.rb.html) to see an example of how to use get_java_migration_analysis_result API.
    def get_java_migration_analysis_result(fleet_id, java_migration_analysis_result_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_java_migration_analysis_result.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_java_migration_analysis_result." if fleet_id.nil?
      raise "Missing the required parameter 'java_migration_analysis_result_id' when calling get_java_migration_analysis_result." if java_migration_analysis_result_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'java_migration_analysis_result_id' must not be blank" if OCI::Internal::Util.blank_string?(java_migration_analysis_result_id)

      path = '/fleets/{fleetId}/javaMigrationAnalysisResults/{javaMigrationAnalysisResultId}'.sub('{fleetId}', fleet_id.to_s).sub('{javaMigrationAnalysisResultId}', java_migration_analysis_result_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_java_migration_analysis_result') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaMigrationAnalysisResult'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns detail of a Java release.
    # @param [String] release_version Unique Java release version identifier
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaRelease JavaRelease}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_java_release.rb.html) to see an example of how to use get_java_release API.
    def get_java_release(release_version, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_java_release.' if logger

      raise "Missing the required parameter 'release_version' when calling get_java_release." if release_version.nil?
      raise "Parameter value for 'release_version' must not be blank" if OCI::Internal::Util.blank_string?(release_version)

      path = '/javaReleases/{releaseVersion}'.sub('{releaseVersion}', release_version.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_java_release') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaRelease'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns the JmsPlugin.
    # @param [String] jms_plugin_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JmsPlugin JmsPlugin}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_jms_plugin.rb.html) to see an example of how to use get_jms_plugin API.
    def get_jms_plugin(jms_plugin_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_jms_plugin.' if logger

      raise "Missing the required parameter 'jms_plugin_id' when calling get_jms_plugin." if jms_plugin_id.nil?
      raise "Parameter value for 'jms_plugin_id' must not be blank" if OCI::Internal::Util.blank_string?(jms_plugin_id)

      path = '/jmsPlugins/{jmsPluginId}'.sub('{jmsPluginId}', jms_plugin_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_jms_plugin') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JmsPlugin'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve metadata of the Performance Tuning Analysis result.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [String] performance_tuning_analysis_result_id The OCID of the performance tuning analysis result.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::PerformanceTuningAnalysisResult PerformanceTuningAnalysisResult}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_performance_tuning_analysis_result.rb.html) to see an example of how to use get_performance_tuning_analysis_result API.
    def get_performance_tuning_analysis_result(fleet_id, performance_tuning_analysis_result_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_performance_tuning_analysis_result.' if logger

      raise "Missing the required parameter 'fleet_id' when calling get_performance_tuning_analysis_result." if fleet_id.nil?
      raise "Missing the required parameter 'performance_tuning_analysis_result_id' when calling get_performance_tuning_analysis_result." if performance_tuning_analysis_result_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'performance_tuning_analysis_result_id' must not be blank" if OCI::Internal::Util.blank_string?(performance_tuning_analysis_result_id)

      path = '/fleets/{fleetId}/performanceTuningAnalysisResults/{performanceTuningAnalysisResultId}'.sub('{fleetId}', fleet_id.to_s).sub('{performanceTuningAnalysisResultId}', performance_tuning_analysis_result_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_performance_tuning_analysis_result') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::PerformanceTuningAnalysisResult'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve the details of a work request with the specified ID.
    # @param [String] work_request_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the asynchronous work request.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::WorkRequest WorkRequest}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/get_work_request.rb.html) to see an example of how to use get_work_request API.
    def get_work_request(work_request_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#get_work_request.' if logger

      raise "Missing the required parameter 'work_request_id' when calling get_work_request." if work_request_id.nil?
      raise "Parameter value for 'work_request_id' must not be blank" if OCI::Internal::Util.blank_string?(work_request_id)

      path = '/workRequests/{workRequestId}'.sub('{workRequestId}', work_request_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#get_work_request') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::WorkRequest'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a list of the agent installer information.
    #
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [String] :fleet_id The ID of the Fleet.
    # @option opts [String] :platform_architecture The platform architecture for the agent installer.
    # @option opts [String] :os_family The OS family for the agent installer.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort the agent installer. Only one sort order can be provided.
    #   Default order for _agentInstallerId_, _osFamily_, _platformArchitecture_ is **ascending**.
    #   If no value is specified _agentInstallerId_ is default.
    #    (default to agentInstallerId)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::AgentInstallerCollection AgentInstallerCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_agent_installers.rb.html) to see an example of how to use list_agent_installers API.
    def list_agent_installers(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_agent_installers.' if logger


      if opts[:platform_architecture] && !OCI::Jms::Models::PLATFORM_ARCHITECTURE_TYPE_ENUM.include?(opts[:platform_architecture])
        raise 'Invalid value for "platform_architecture", must be one of the values in OCI::Jms::Models::PLATFORM_ARCHITECTURE_TYPE_ENUM.'
      end

      if opts[:os_family] && !OCI::Jms::Models::OS_FAMILY_ENUM.include?(opts[:os_family])
        raise 'Invalid value for "os_family", must be one of the values in OCI::Jms::Models::OS_FAMILY_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::AGENT_INSTALLER_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::AGENT_INSTALLER_SORT_BY_ENUM.'
      end

      path = '/agentInstallers'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:fleetId] = opts[:fleet_id] if opts[:fleet_id]
      query_params[:platformArchitecture] = opts[:platform_architecture] if opts[:platform_architecture]
      query_params[:osFamily] = opts[:os_family] if opts[:os_family]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_agent_installers') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::AgentInstallerCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Return a list of AnnouncementSummary items
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :summary_contains Filter the list with summary contains the given value.
    #
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort AnnouncementSummary by.  Only one sort order may be provided.
    #   If no value is specified _timeReleased_ is default.
    #    (default to timeReleased)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::AnnouncementCollection AnnouncementCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_announcements.rb.html) to see an example of how to use list_announcements API.
    def list_announcements(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_announcements.' if logger


      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::ANNOUNCEMENT_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::ANNOUNCEMENT_SORT_BY_ENUM.'
      end

      path = '/announcements'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:summaryContains] = opts[:summary_contains] if opts[:summary_contains]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_announcements') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::AnnouncementCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a list of blocklist entities contained by a fleet.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :operation The operation type.
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field used to sort blocklist records. Only one sort order may be provided.
    #   Default order for _operation_ is **ascending**.
    #   If no value is specified, _operation_ is default.
    #    (default to operation)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::BlocklistCollection BlocklistCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_blocklists.rb.html) to see an example of how to use list_blocklists API.
    def list_blocklists(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_blocklists.' if logger

      raise "Missing the required parameter 'fleet_id' when calling list_blocklists." if fleet_id.nil?

      if opts[:operation] && !OCI::Jms::Models::OPERATION_TYPE_ENUM.include?(opts[:operation])
        raise 'Invalid value for "operation", must be one of the values in OCI::Jms::Models::OPERATION_TYPE_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::BLOCKLIST_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::BLOCKLIST_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/blocklists'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:operation] = opts[:operation] if opts[:operation]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_blocklists') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::BlocklistCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Lists the results of a Crypto event analysis.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :aggregation_mode The aggregation mode of the crypto event analysis result. (default to managedInstance)
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [String] :host_name The host [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the managed instance. (default to hostName)
    # @option opts [Integer] :non_compliant_finding_count Non Compliant Finding Count of CryptoAnalysis Report.
    # @option opts [Integer] :non_compliant_finding_count_greater_than Non Compliant Finding Count of CryptoAnalysis Report.
    # @option opts [Integer] :finding_count FindingCount of CryptoAnalysis Report.
    # @option opts [Integer] :finding_count_greater_than FindingCount of CryptoAnalysis Report.
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort crypto event analysis results. Only one sort order can be provided.
    #   Default order for _timeCreated_, and _jreVersion_ is **descending**.
    #   Default order for _managedInstanceId_, _jreDistribution_, _jreVendor_ and _osName_ is **ascending**.
    #   If no value is specified _timeCreated_ is default.
    #    (default to timeCreated)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::CryptoAnalysisResultCollection CryptoAnalysisResultCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_crypto_analysis_results.rb.html) to see an example of how to use list_crypto_analysis_results API.
    def list_crypto_analysis_results(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_crypto_analysis_results.' if logger

      raise "Missing the required parameter 'fleet_id' when calling list_crypto_analysis_results." if fleet_id.nil?

      if opts[:aggregation_mode] && !OCI::Jms::Models::CRYPTO_ANALYSIS_RESULT_MODE_ENUM.include?(opts[:aggregation_mode])
        raise 'Invalid value for "aggregation_mode", must be one of the values in OCI::Jms::Models::CRYPTO_ANALYSIS_RESULT_MODE_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::CRYPTO_ANALYSIS_RESULT_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::CRYPTO_ANALYSIS_RESULT_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/cryptoAnalysisResults'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:aggregationMode] = opts[:aggregation_mode] if opts[:aggregation_mode]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:hostName] = opts[:host_name] if opts[:host_name]
      query_params[:nonCompliantFindingCount] = opts[:non_compliant_finding_count] if opts[:non_compliant_finding_count]
      query_params[:nonCompliantFindingCountGreaterThan] = opts[:non_compliant_finding_count_greater_than] if opts[:non_compliant_finding_count_greater_than]
      query_params[:findingCount] = opts[:finding_count] if opts[:finding_count]
      query_params[:findingCountGreaterThan] = opts[:finding_count_greater_than] if opts[:finding_count_greater_than]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_crypto_analysis_results') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::CryptoAnalysisResultCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List the details about the created DRS files in the Fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field that sorts the DRS details results. Only one sort order can be provided.
    #   The default order for _drsFileKey_ is **descending**.
    #   If no value is specified, then _drsFileKey_ is default.
    #    (default to drsFileKey)
    # @return [Response] A Response object with data of type {OCI::Jms::Models::DrsFileCollection DrsFileCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_drs_files.rb.html) to see an example of how to use list_drs_files API.
    def list_drs_files(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_drs_files.' if logger

      raise "Missing the required parameter 'fleet_id' when calling list_drs_files." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::DRS_FILE_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::DRS_FILE_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/drsFiles'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_drs_files') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::DrsFileCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List potential diagnoses that would put a fleet into FAILED or NEEDS_ATTENTION lifecycle state.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::FleetDiagnosisCollection FleetDiagnosisCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_fleet_diagnoses.rb.html) to see an example of how to use list_fleet_diagnoses API.
    def list_fleet_diagnoses(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_fleet_diagnoses.' if logger

      raise "Missing the required parameter 'fleet_id' when calling list_fleet_diagnoses." if fleet_id.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/diagnoses'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_fleet_diagnoses') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::FleetDiagnosisCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a list of fleet errors that describe all detected errors.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [BOOLEAN] :compartment_id_in_subtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    #    (default to false)
    # @option opts [String] :fleet_id The ID of the Fleet.
    # @option opts [DateTime] :time_first_seen_less_than_or_equal_to If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [DateTime] :time_first_seen_greater_than_or_equal_to If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [DateTime] :time_last_seen_less_than_or_equal_to If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [DateTime] :time_last_seen_greater_than_or_equal_to If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_by The field to sort FleetError. Only one sort order may be provided.
    #   Default order is **descending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to TIME_LAST_SEEN)
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::FleetErrorCollection FleetErrorCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_fleet_errors.rb.html) to see an example of how to use list_fleet_errors API.
    def list_fleet_errors(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_fleet_errors.' if logger


      if opts[:sort_by] && !OCI::Jms::Models::FLEET_ERROR_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::FLEET_ERROR_SORT_BY_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      path = '/fleetErrors'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:compartmentIdInSubtree] = opts[:compartment_id_in_subtree] if !opts[:compartment_id_in_subtree].nil?
      query_params[:fleetId] = opts[:fleet_id] if opts[:fleet_id]
      query_params[:timeFirstSeenLessThanOrEqualTo] = opts[:time_first_seen_less_than_or_equal_to] if opts[:time_first_seen_less_than_or_equal_to]
      query_params[:timeFirstSeenGreaterThanOrEqualTo] = opts[:time_first_seen_greater_than_or_equal_to] if opts[:time_first_seen_greater_than_or_equal_to]
      query_params[:timeLastSeenLessThanOrEqualTo] = opts[:time_last_seen_less_than_or_equal_to] if opts[:time_last_seen_less_than_or_equal_to]
      query_params[:timeLastSeenGreaterThanOrEqualTo] = opts[:time_last_seen_greater_than_or_equal_to] if opts[:time_last_seen_greater_than_or_equal_to]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_fleet_errors') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::FleetErrorCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a list of all the Fleets contained by a compartment. The query parameter `compartmentId`
    # is required unless the query parameter `id` is specified.
    #
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [String] :id The ID.
    # @option opts [String] :lifecycle_state The state of the lifecycle.
    # @option opts [String] :display_name The display name.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort Fleets. Only one sort order may be provided.
    #   Default order for _timeCreated_, _approximateJreCount_, _approximateInstallationCount_,
    #   _approximateApplicationCount_ and _approximateManagedInstanceCount_  is **descending**.
    #   Default order for _displayName_ is **ascending**.
    #   If no value is specified _timeCreated_ is default.
    #    (default to timeCreated)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :display_name_contains Filter the list with displayName contains the given value.
    #
    # @return [Response] A Response object with data of type {OCI::Jms::Models::FleetCollection FleetCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_fleets.rb.html) to see an example of how to use list_fleets API.
    def list_fleets(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_fleets.' if logger


      if opts[:lifecycle_state] && !OCI::Jms::Models::LIFECYCLE_STATE_ENUM.include?(opts[:lifecycle_state])
        raise 'Invalid value for "lifecycle_state", must be one of the values in OCI::Jms::Models::LIFECYCLE_STATE_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::SORT_BY_ENUM.'
      end

      path = '/fleets'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:id] = opts[:id] if opts[:id]
      query_params[:lifecycleState] = opts[:lifecycle_state] if opts[:lifecycle_state]
      query_params[:displayName] = opts[:display_name] if opts[:display_name]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:displayNameContains] = opts[:display_name_contains] if opts[:display_name_contains]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_fleets') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::FleetCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List Java installation sites in a Fleet filtered by query parameters.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :jre_vendor The vendor of the related Java Runtime.
    # @option opts [String] :jre_distribution The distribution of the related Java Runtime.
    # @option opts [String] :jre_version The version of the related Java Runtime.
    # @option opts [String] :installation_path The file system path of the installation.
    # @option opts [String] :application_id The Fleet-unique identifier of the related application.
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort installation sites. Only one sort order may be provided.
    #   Default order for _timeLastSeen_, and _jreVersion_, _approximateApplicationCount_ is **descending**.
    #   Default order for _managedInstanceId_, _jreDistribution_, _jreVendor_ and _osName_ is **ascending**.
    #   If no value is specified _managedInstanceId_ is default.
    #    (default to managedInstanceId)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [Array<String>] :os_family The operating system type.
    #   Allowed values are: LINUX, WINDOWS, MACOS, UNKNOWN
    # @option opts [String] :jre_security_status The security status of the Java Runtime.
    # @option opts [String] :path_contains Filter the list with path contains the given value.
    #
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @return [Response] A Response object with data of type {OCI::Jms::Models::InstallationSiteCollection InstallationSiteCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_installation_sites.rb.html) to see an example of how to use list_installation_sites API.
    def list_installation_sites(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_installation_sites.' if logger

      raise "Missing the required parameter 'fleet_id' when calling list_installation_sites." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::INSTALLATION_SITE_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::INSTALLATION_SITE_SORT_BY_ENUM.'
      end


      os_family_allowable_values = %w[LINUX WINDOWS MACOS UNKNOWN]
      if opts[:os_family] && !opts[:os_family].empty?
        opts[:os_family].each do |val_to_check|
          unless os_family_allowable_values.include?(val_to_check)
            raise 'Invalid value for "os_family", must be one of LINUX, WINDOWS, MACOS, UNKNOWN.'
          end
        end
      end

      if opts[:jre_security_status] && !OCI::Jms::Models::JRE_SECURITY_STATUS_ENUM.include?(opts[:jre_security_status])
        raise 'Invalid value for "jre_security_status", must be one of the values in OCI::Jms::Models::JRE_SECURITY_STATUS_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/installationSites'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:jreVendor] = opts[:jre_vendor] if opts[:jre_vendor]
      query_params[:jreDistribution] = opts[:jre_distribution] if opts[:jre_distribution]
      query_params[:jreVersion] = opts[:jre_version] if opts[:jre_version]
      query_params[:installationPath] = opts[:installation_path] if opts[:installation_path]
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:osFamily] = OCI::ApiClient.build_collection_params(opts[:os_family], :multi) if opts[:os_family] && !opts[:os_family].empty?
      query_params[:jreSecurityStatus] = opts[:jre_security_status] if opts[:jre_security_status]
      query_params[:pathContains] = opts[:path_contains] if opts[:path_contains]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_installation_sites') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::InstallationSiteCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a list of the Java release family information.
    # A Java release family is typically a major version in the Java version identifier.
    #
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :family_version The version identifier for the Java family.
    # @option opts [String] :display_name The display name for the Java family.
    # @option opts [BOOLEAN] :is_supported_version Filter the Java Release Family versions by support status.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by If no value is specified _familyVersion_ is default.
    #    (default to familyVersion)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaFamilyCollection JavaFamilyCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_java_families.rb.html) to see an example of how to use list_java_families API.
    def list_java_families(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_java_families.' if logger


      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JAVA_FAMILY_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JAVA_FAMILY_SORT_BY_ENUM.'
      end

      path = '/javaFamilies'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:familyVersion] = opts[:family_version] if opts[:family_version]
      query_params[:displayName] = opts[:display_name] if opts[:display_name]
      query_params[:isSupportedVersion] = opts[:is_supported_version] if !opts[:is_supported_version].nil?
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_java_families') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaFamilyCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Lists the results of a Java migration analysis.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [String] :host_name The host [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the managed instance. (default to hostName)
    # @option opts [String] :application_name The name of the application.
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field that sorts the Java migration analysis results. Only one sort order can be provided.
    #   The default order for _timeCreated_, _managedInstanceId_ and _workRequestId_ is **descending**.
    #   If no value is specified, then _timeCreated_ is default.
    #    (default to timeCreated)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaMigrationAnalysisResultCollection JavaMigrationAnalysisResultCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_java_migration_analysis_results.rb.html) to see an example of how to use list_java_migration_analysis_results API.
    def list_java_migration_analysis_results(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_java_migration_analysis_results.' if logger

      raise "Missing the required parameter 'fleet_id' when calling list_java_migration_analysis_results." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JAVA_MIGRATION_ANALYSIS_RESULT_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JAVA_MIGRATION_ANALYSIS_RESULT_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/javaMigrationAnalysisResults'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:hostName] = opts[:host_name] if opts[:host_name]
      query_params[:applicationName] = opts[:application_name] if opts[:application_name]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_java_migration_analysis_results') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaMigrationAnalysisResultCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a list of Java releases.
    #
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :release_version Unique Java release version identifier
    # @option opts [String] :family_version The version identifier for the Java family.
    # @option opts [String] :release_type Java release type.
    # @option opts [String] :jre_security_status The security status of the Java Runtime.
    # @option opts [String] :license_type Java license type.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by If no value is specified _releaseDate_ is default.
    #    (default to releaseDate)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaReleaseCollection JavaReleaseCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_java_releases.rb.html) to see an example of how to use list_java_releases API.
    def list_java_releases(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_java_releases.' if logger


      if opts[:release_type] && !OCI::Jms::Models::RELEASE_TYPE_ENUM.include?(opts[:release_type])
        raise 'Invalid value for "release_type", must be one of the values in OCI::Jms::Models::RELEASE_TYPE_ENUM.'
      end

      if opts[:jre_security_status] && !OCI::Jms::Models::JRE_SECURITY_STATUS_ENUM.include?(opts[:jre_security_status])
        raise 'Invalid value for "jre_security_status", must be one of the values in OCI::Jms::Models::JRE_SECURITY_STATUS_ENUM.'
      end

      if opts[:license_type] && !OCI::Jms::Models::LICENSE_TYPE_ENUM.include?(opts[:license_type])
        raise 'Invalid value for "license_type", must be one of the values in OCI::Jms::Models::LICENSE_TYPE_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JAVA_RELEASE_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JAVA_RELEASE_SORT_BY_ENUM.'
      end

      path = '/javaReleases'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:releaseVersion] = opts[:release_version] if opts[:release_version]
      query_params[:familyVersion] = opts[:family_version] if opts[:family_version]
      query_params[:releaseType] = opts[:release_type] if opts[:release_type]
      query_params[:jreSecurityStatus] = opts[:jre_security_status] if opts[:jre_security_status]
      query_params[:licenseType] = opts[:license_type] if opts[:license_type]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_java_releases') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaReleaseCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Lists the JmsPlugins.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [BOOLEAN] :compartment_id_in_subtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    #    (default to false)
    # @option opts [String] :id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
    # @option opts [String] :fleet_id The ID of the Fleet.
    # @option opts [String] :agent_id The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) that identifies the Agent.
    # @option opts [String] :lifecycle_state Filter JmsPlugin with its lifecycle state.
    # @option opts [String] :availability_status Filter JmsPlugin with its availability status.
    # @option opts [String] :agent_type Filter JmsPlugin with agent type.
    # @option opts [DateTime] :time_registered_less_than_or_equal_to If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_last_seen_less_than_or_equal_to If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort JmsPlugin. Only one sort order may be provided.
    #   Default order is **descending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :hostname_contains Filter the list with hostname contains the given value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JmsPluginCollection JmsPluginCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_jms_plugins.rb.html) to see an example of how to use list_jms_plugins API.
    def list_jms_plugins(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_jms_plugins.' if logger


      if opts[:lifecycle_state] && !OCI::Jms::Models::JMS_PLUGIN_LIFECYCLE_STATE_ENUM.include?(opts[:lifecycle_state])
        raise 'Invalid value for "lifecycle_state", must be one of the values in OCI::Jms::Models::JMS_PLUGIN_LIFECYCLE_STATE_ENUM.'
      end

      if opts[:availability_status] && !OCI::Jms::Models::JMS_PLUGIN_AVAILABILITY_STATUS_ENUM.include?(opts[:availability_status])
        raise 'Invalid value for "availability_status", must be one of the values in OCI::Jms::Models::JMS_PLUGIN_AVAILABILITY_STATUS_ENUM.'
      end

      if opts[:agent_type] && !OCI::Jms::Models::AGENT_TYPE_ENUM.include?(opts[:agent_type])
        raise 'Invalid value for "agent_type", must be one of the values in OCI::Jms::Models::AGENT_TYPE_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JMS_PLUGIN_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JMS_PLUGIN_SORT_BY_ENUM.'
      end

      path = '/jmsPlugins'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:compartmentIdInSubtree] = opts[:compartment_id_in_subtree] if !opts[:compartment_id_in_subtree].nil?
      query_params[:id] = opts[:id] if opts[:id]
      query_params[:fleetId] = opts[:fleet_id] if opts[:fleet_id]
      query_params[:agentId] = opts[:agent_id] if opts[:agent_id]
      query_params[:lifecycleState] = opts[:lifecycle_state] if opts[:lifecycle_state]
      query_params[:availabilityStatus] = opts[:availability_status] if opts[:availability_status]
      query_params[:agentType] = opts[:agent_type] if opts[:agent_type]
      query_params[:timeRegisteredLessThanOrEqualTo] = opts[:time_registered_less_than_or_equal_to] if opts[:time_registered_less_than_or_equal_to]
      query_params[:timeLastSeenLessThanOrEqualTo] = opts[:time_last_seen_less_than_or_equal_to] if opts[:time_last_seen_less_than_or_equal_to]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:hostnameContains] = opts[:hostname_contains] if opts[:hostname_contains]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_jms_plugins') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JmsPluginCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List Java Runtime usage in a specified host filtered by query parameters.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [String] :host_id The host [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the managed instance.
    # @option opts [String] :application_id The Fleet-unique identifier of the application.
    # @option opts [String] :application_name The name of the application.
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort JRE usages. Only one sort order may be provided.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, and _version_ is **descending**.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, _version_, _approximateInstallationCount_,
    #   _approximateApplicationCount_ and _approximateManagedInstanceCount_  is **descending**.
    #   Default order for _distribution_, _vendor_, and _osName_ is **ascending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JreUsageCollection JreUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_jre_usage.rb.html) to see an example of how to use list_jre_usage API.
    def list_jre_usage(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_jre_usage.' if logger


      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JRE_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JRE_SORT_BY_ENUM.'
      end

      path = '/listJreUsage'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:hostId] = opts[:host_id] if opts[:host_id]
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:applicationName] = opts[:application_name] if opts[:application_name]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_jre_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JreUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List Performance Tuning Analysis results.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [String] :application_id The Fleet-unique identifier of the related application.
    # @option opts [String] :application_name The name of the application.
    # @option opts [String] :host_name The host [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the managed instance. (default to hostName)
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort performance tuning analysis results. Only one sort order may be provided.
    #   Default order for _timeCreated_, and _jreVersion_ is **descending**.
    #   Default order for _managedInstanceId_, _jreDistribution_, _jreVendor_ and _osName_ is **ascending**.
    #   If no value is specified _timeCreated_ is default.
    #    (default to timeCreated)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::PerformanceTuningAnalysisResultCollection PerformanceTuningAnalysisResultCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_performance_tuning_analysis_results.rb.html) to see an example of how to use list_performance_tuning_analysis_results API.
    def list_performance_tuning_analysis_results(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_performance_tuning_analysis_results.' if logger

      raise "Missing the required parameter 'fleet_id' when calling list_performance_tuning_analysis_results." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::PERFORMANCE_TUNING_ANALYSIS_RESULT_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::PERFORMANCE_TUNING_ANALYSIS_RESULT_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/performanceTuningAnalysisResults'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:applicationName] = opts[:application_name] if opts[:application_name]
      query_params[:hostName] = opts[:host_name] if opts[:host_name]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_performance_tuning_analysis_results') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::PerformanceTuningAnalysisResultCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a list of plugin errors that describe all detected errors.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [BOOLEAN] :compartment_id_in_subtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    #    (default to false)
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the managed instance.
    # @option opts [DateTime] :time_first_seen_less_than_or_equal_to If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [DateTime] :time_first_seen_greater_than_or_equal_to If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [DateTime] :time_last_seen_less_than_or_equal_to If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [DateTime] :time_last_seen_greater_than_or_equal_to If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_by The field to sort PluginError. Only one sort order may be provided.
    #   Default order is **descending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to TIME_LAST_SEEN)
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::PluginErrorCollection PluginErrorCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_plugin_errors.rb.html) to see an example of how to use list_plugin_errors API.
    def list_plugin_errors(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_plugin_errors.' if logger


      if opts[:sort_by] && !OCI::Jms::Models::PLUGIN_ERROR_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::PLUGIN_ERROR_SORT_BY_ENUM.'
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      path = '/pluginErrors'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:compartmentIdInSubtree] = opts[:compartment_id_in_subtree] if !opts[:compartment_id_in_subtree].nil?
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:timeFirstSeenLessThanOrEqualTo] = opts[:time_first_seen_less_than_or_equal_to] if opts[:time_first_seen_less_than_or_equal_to]
      query_params[:timeFirstSeenGreaterThanOrEqualTo] = opts[:time_first_seen_greater_than_or_equal_to] if opts[:time_first_seen_greater_than_or_equal_to]
      query_params[:timeLastSeenLessThanOrEqualTo] = opts[:time_last_seen_less_than_or_equal_to] if opts[:time_last_seen_less_than_or_equal_to]
      query_params[:timeLastSeenGreaterThanOrEqualTo] = opts[:time_last_seen_greater_than_or_equal_to] if opts[:time_last_seen_greater_than_or_equal_to]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_plugin_errors') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::PluginErrorCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve a paginated list of work items for a specified work request.
    #
    # @param [String] work_request_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the asynchronous work request.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @return [Response] A Response object with data of type {OCI::Jms::Models::WorkItemCollection WorkItemCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_work_items.rb.html) to see an example of how to use list_work_items API.
    def list_work_items(work_request_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_work_items.' if logger

      raise "Missing the required parameter 'work_request_id' when calling list_work_items." if work_request_id.nil?
      raise "Parameter value for 'work_request_id' must not be blank" if OCI::Internal::Util.blank_string?(work_request_id)

      path = '/workRequests/{workRequestId}/workItems'.sub('{workRequestId}', work_request_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:limit] = opts[:limit] if opts[:limit]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_work_items') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::WorkItemCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve a (paginated) list of errors for a specified work request.
    #
    # @param [String] work_request_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the asynchronous work request.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @return [Response] A Response object with data of type {OCI::Jms::Models::WorkRequestErrorCollection WorkRequestErrorCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_work_request_errors.rb.html) to see an example of how to use list_work_request_errors API.
    def list_work_request_errors(work_request_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_work_request_errors.' if logger

      raise "Missing the required parameter 'work_request_id' when calling list_work_request_errors." if work_request_id.nil?
      raise "Parameter value for 'work_request_id' must not be blank" if OCI::Internal::Util.blank_string?(work_request_id)

      path = '/workRequests/{workRequestId}/errors'.sub('{workRequestId}', work_request_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:limit] = opts[:limit] if opts[:limit]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_work_request_errors') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::WorkRequestErrorCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve a paginated list of logs for a specified work request.
    #
    # @param [String] work_request_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the asynchronous work request.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @return [Response] A Response object with data of type {OCI::Jms::Models::WorkRequestLogEntryCollection WorkRequestLogEntryCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_work_request_logs.rb.html) to see an example of how to use list_work_request_logs API.
    def list_work_request_logs(work_request_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_work_request_logs.' if logger

      raise "Missing the required parameter 'work_request_id' when calling list_work_request_logs." if work_request_id.nil?
      raise "Parameter value for 'work_request_id' must not be blank" if OCI::Internal::Util.blank_string?(work_request_id)

      path = '/workRequests/{workRequestId}/logs'.sub('{workRequestId}', work_request_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:limit] = opts[:limit] if opts[:limit]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_work_request_logs') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::WorkRequestLogEntryCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List the work requests in a compartment. The query parameter `compartmentId` is required unless the query parameter `id` or `fleetId` is specified.
    #
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [String] :id The ID of an asynchronous work request.
    # @option opts [String] :fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the fleet.
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the managed instance.
    # @option opts [String] :operation_type The operation type of the work request.
    # @option opts [Array<String>] :status The status of the work request. (default to [])
    #   Allowed values are: ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED
    # @return [Response] A Response object with data of type {OCI::Jms::Models::WorkRequestCollection WorkRequestCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/list_work_requests.rb.html) to see an example of how to use list_work_requests API.
    def list_work_requests(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#list_work_requests.' if logger


      if opts[:operation_type] && !OCI::Jms::Models::OPERATION_TYPE_ENUM.include?(opts[:operation_type])
        raise 'Invalid value for "operation_type", must be one of the values in OCI::Jms::Models::OPERATION_TYPE_ENUM.'
      end


      status_allowable_values = %w[ACCEPTED CANCELED CANCELING FAILED IN_PROGRESS SUCCEEDED]
      if opts[:status] && !opts[:status].empty?
        opts[:status].each do |val_to_check|
          unless status_allowable_values.include?(val_to_check)
            raise 'Invalid value for "status", must be one of ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED.'
          end
        end
      end

      path = '/workRequests'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:id] = opts[:id] if opts[:id]
      query_params[:fleetId] = opts[:fleet_id] if opts[:fleet_id]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:operationType] = opts[:operation_type] if opts[:operation_type]
      query_params[:status] = OCI::ApiClient.build_collection_params(opts[:status], :multi) if opts[:status] && !opts[:status].empty?

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#list_work_requests') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::WorkRequestCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Remove Java installation sites in a Fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::RemoveFleetInstallationSitesDetails] remove_fleet_installation_sites_details List of installation sites to be deleted.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/remove_fleet_installation_sites.rb.html) to see an example of how to use remove_fleet_installation_sites API.
    def remove_fleet_installation_sites(fleet_id, remove_fleet_installation_sites_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#remove_fleet_installation_sites.' if logger

      raise "Missing the required parameter 'fleet_id' when calling remove_fleet_installation_sites." if fleet_id.nil?
      raise "Missing the required parameter 'remove_fleet_installation_sites_details' when calling remove_fleet_installation_sites." if remove_fleet_installation_sites_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/removeInstallationSites'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(remove_fleet_installation_sites_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#remove_fleet_installation_sites') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to perform crypto analysis on one or more selected targets in the Fleet. The result of the crypto analysis will be uploaded to the object storage bucket created by JMS on enabling the Crypto Event Analysis feature in the Fleet.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::RequestCryptoAnalysesDetails] request_crypto_analyses_details Detail information to start Crypto Analyses
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/request_crypto_analyses.rb.html) to see an example of how to use request_crypto_analyses API.
    def request_crypto_analyses(fleet_id, request_crypto_analyses_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#request_crypto_analyses.' if logger

      raise "Missing the required parameter 'fleet_id' when calling request_crypto_analyses." if fleet_id.nil?
      raise "Missing the required parameter 'request_crypto_analyses_details' when calling request_crypto_analyses." if request_crypto_analyses_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/requestCryptoAnalyses'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(request_crypto_analyses_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#request_crypto_analyses') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to perform a deployed Java migration analyses. The results of the deployed Java migration analyses will be uploaded to the
    # Object Storage bucket that you designate when you enable the Java Migration Analyses feature.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::RequestDeployedApplicationMigrationAnalysesDetails] request_deployed_application_migration_analyses_details Detail information that starts the deployed Java migration analyses
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/request_deployed_application_migration_analyses.rb.html) to see an example of how to use request_deployed_application_migration_analyses API.
    def request_deployed_application_migration_analyses(fleet_id, request_deployed_application_migration_analyses_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#request_deployed_application_migration_analyses.' if logger

      raise "Missing the required parameter 'fleet_id' when calling request_deployed_application_migration_analyses." if fleet_id.nil?
      raise "Missing the required parameter 'request_deployed_application_migration_analyses_details' when calling request_deployed_application_migration_analyses." if request_deployed_application_migration_analyses_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/requestDeployedApplicationMigrationAnalyses'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(request_deployed_application_migration_analyses_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#request_deployed_application_migration_analyses') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to perform a Java migration analysis. The results of the Java migration analysis will be uploaded to the
    # Object Storage bucket that you designate when you enable the Java Migration Analysis feature.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::RequestJavaMigrationAnalysesDetails] request_java_migration_analyses_details Detail information that starts the Java migration analysis
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/request_java_migration_analyses.rb.html) to see an example of how to use request_java_migration_analyses API.
    def request_java_migration_analyses(fleet_id, request_java_migration_analyses_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#request_java_migration_analyses.' if logger

      raise "Missing the required parameter 'fleet_id' when calling request_java_migration_analyses." if fleet_id.nil?
      raise "Missing the required parameter 'request_java_migration_analyses_details' when calling request_java_migration_analyses." if request_java_migration_analyses_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/requestJavaMigrationAnalyses'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(request_java_migration_analyses_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#request_java_migration_analyses') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to collect the JFR recordings on the selected target in the Fleet. The JFR files are uploaded to the object storage bucket created by JMS on enabling Generic JFR feature in the Fleet.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::RequestJfrRecordingsDetails] request_jfr_recordings_details Detail information to start JFR recordings.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/request_jfr_recordings.rb.html) to see an example of how to use request_jfr_recordings API.
    def request_jfr_recordings(fleet_id, request_jfr_recordings_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#request_jfr_recordings.' if logger

      raise "Missing the required parameter 'fleet_id' when calling request_jfr_recordings." if fleet_id.nil?
      raise "Missing the required parameter 'request_jfr_recordings_details' when calling request_jfr_recordings." if request_jfr_recordings_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/requestJfrRecordings'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(request_jfr_recordings_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#request_jfr_recordings') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to perform performance tuning analyses. The result of performance tuning analysis will be uploaded to the
    # object storage bucket that you designated when you enabled the recording feature.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::RequestPerformanceTuningAnalysesDetails] request_performance_tuning_analyses_details Detail information to start Performance Tuning Analyses
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/request_performance_tuning_analyses.rb.html) to see an example of how to use request_performance_tuning_analyses API.
    def request_performance_tuning_analyses(fleet_id, request_performance_tuning_analyses_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#request_performance_tuning_analyses.' if logger

      raise "Missing the required parameter 'fleet_id' when calling request_performance_tuning_analyses." if fleet_id.nil?
      raise "Missing the required parameter 'request_performance_tuning_analyses_details' when calling request_performance_tuning_analyses." if request_performance_tuning_analyses_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/requestPerformanceTuningAnalyses'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(request_performance_tuning_analyses_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#request_performance_tuning_analyses') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Scan Java Server usage in a fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::ScanJavaServerUsageDetails] scan_java_server_usage_details List of managed instances to be scanned.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/scan_java_server_usage.rb.html) to see an example of how to use scan_java_server_usage API.
    def scan_java_server_usage(fleet_id, scan_java_server_usage_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#scan_java_server_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling scan_java_server_usage." if fleet_id.nil?
      raise "Missing the required parameter 'scan_java_server_usage_details' when calling scan_java_server_usage." if scan_java_server_usage_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/scanJavaServerUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(scan_java_server_usage_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#scan_java_server_usage') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Scan library usage in a fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::ScanLibraryUsageDetails] scan_library_usage_details List of managed instances to be scanned.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/scan_library_usage.rb.html) to see an example of how to use scan_library_usage API.
    def scan_library_usage(fleet_id, scan_library_usage_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#scan_library_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling scan_library_usage." if fleet_id.nil?
      raise "Missing the required parameter 'scan_library_usage_details' when calling scan_library_usage." if scan_library_usage_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/scanLibraryUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(scan_library_usage_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#scan_library_usage') do
        @api_client.call_api(
          :POST,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Summarizes the application installation usage in a Fleet filtered by query parameters. In contrast to SummarizeApplicationUsage, which provides only information aggregated by application name, this operation provides installation details. This allows for better focusing of actions.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :application_installation_key The Fleet-unique identifier of the application installation.
    # @option opts [String] :application_id The Fleet-unique identifier of the application.
    # @option opts [String] :display_name The display name.
    # @option opts [String] :display_name_contains Filter the list with displayName contains the given value.
    #
    # @option opts [String] :application_type The type of the application.
    # @option opts [String] :app_installation_path_contains Filter the list with the application installation path that contains the given value.
    # @option opts [String] :jre_vendor The vendor of the related Java Runtime.
    # @option opts [String] :jre_distribution The distribution of the related Java Runtime.
    # @option opts [String] :jre_version The version of the related Java Runtime.
    # @option opts [String] :installation_path The file system path of the Java Runtime installation.
    # @option opts [String] :library_key The library key.
    #
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [Array<String>] :os_family The operating system type.
    #   Allowed values are: LINUX, WINDOWS, MACOS, UNKNOWN
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort application installation views. Only one sort order may be provided.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, _approximateJreCount_, _approximateInstallationCount_
    #   and _approximateManagedInstanceCount_  is **descending**.
    #   Default order for _displayName_, _installationPath_ and _osName_ is **ascending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::ApplicationInstallationUsageSummaryCollection ApplicationInstallationUsageSummaryCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_application_installation_usage.rb.html) to see an example of how to use summarize_application_installation_usage API.
    def summarize_application_installation_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_application_installation_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_application_installation_usage." if fleet_id.nil?


      os_family_allowable_values = %w[LINUX WINDOWS MACOS UNKNOWN]
      if opts[:os_family] && !opts[:os_family].empty?
        opts[:os_family].each do |val_to_check|
          unless os_family_allowable_values.include?(val_to_check)
            raise 'Invalid value for "os_family", must be one of LINUX, WINDOWS, MACOS, UNKNOWN.'
          end
        end
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::APPLICATION_INSTALLATION_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::APPLICATION_INSTALLATION_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeApplicationInstallationUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:applicationInstallationKey] = opts[:application_installation_key] if opts[:application_installation_key]
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:displayName] = opts[:display_name] if opts[:display_name]
      query_params[:displayNameContains] = opts[:display_name_contains] if opts[:display_name_contains]
      query_params[:applicationType] = opts[:application_type] if opts[:application_type]
      query_params[:appInstallationPathContains] = opts[:app_installation_path_contains] if opts[:app_installation_path_contains]
      query_params[:jreVendor] = opts[:jre_vendor] if opts[:jre_vendor]
      query_params[:jreDistribution] = opts[:jre_distribution] if opts[:jre_distribution]
      query_params[:jreVersion] = opts[:jre_version] if opts[:jre_version]
      query_params[:installationPath] = opts[:installation_path] if opts[:installation_path]
      query_params[:libraryKey] = opts[:library_key] if opts[:library_key]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:osFamily] = OCI::ApiClient.build_collection_params(opts[:os_family], :multi) if opts[:os_family] && !opts[:os_family].empty?
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_application_installation_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::ApplicationInstallationUsageSummaryCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List application usage in a Fleet filtered by query parameters.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :application_id The Fleet-unique identifier of the application.
    # @option opts [String] :display_name The display name.
    # @option opts [String] :application_type The type of the application.
    # @option opts [String] :jre_vendor The vendor of the related Java Runtime.
    # @option opts [String] :jre_distribution The distribution of the related Java Runtime.
    # @option opts [String] :jre_version The version of the related Java Runtime.
    # @option opts [String] :installation_path The file system path of the Java Runtime installation.
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [Array<String>] :fields Additional fields to include into the returned model on top of the required ones.
    #   This parameter can also include 'approximateJreCount', 'approximateInstallationCount' and 'approximateManagedInstanceCount'.
    #   For example 'approximateJreCount,approximateInstallationCount'.
    #    (default to [])
    #   Allowed values are: approximateJreCount, approximateInstallationCount, approximateManagedInstanceCount
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort application views. Only one sort order may be provided.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, _approximateJreCount_, _approximateInstallationCount_
    #   and _approximateManagedInstanceCount_  is **descending**.
    #   Default order for _displayName_ and _osName_ is **ascending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [Array<String>] :os_family The operating system type.
    #   Allowed values are: LINUX, WINDOWS, MACOS, UNKNOWN
    # @option opts [String] :display_name_contains Filter the list with displayName contains the given value.
    #
    # @option opts [String] :library_key The library key.
    #
    # @return [Response] A Response object with data of type {OCI::Jms::Models::ApplicationUsageCollection ApplicationUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_application_usage.rb.html) to see an example of how to use summarize_application_usage API.
    def summarize_application_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_application_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_application_usage." if fleet_id.nil?


      fields_allowable_values = %w[approximateJreCount approximateInstallationCount approximateManagedInstanceCount]
      if opts[:fields] && !opts[:fields].empty?
        opts[:fields].each do |val_to_check|
          unless fields_allowable_values.include?(val_to_check)
            raise 'Invalid value for "fields", must be one of approximateJreCount, approximateInstallationCount, approximateManagedInstanceCount.'
          end
        end
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::APPLICATION_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::APPLICATION_SORT_BY_ENUM.'
      end


      os_family_allowable_values = %w[LINUX WINDOWS MACOS UNKNOWN]
      if opts[:os_family] && !opts[:os_family].empty?
        opts[:os_family].each do |val_to_check|
          unless os_family_allowable_values.include?(val_to_check)
            raise 'Invalid value for "os_family", must be one of LINUX, WINDOWS, MACOS, UNKNOWN.'
          end
        end
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeApplicationUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:displayName] = opts[:display_name] if opts[:display_name]
      query_params[:applicationType] = opts[:application_type] if opts[:application_type]
      query_params[:jreVendor] = opts[:jre_vendor] if opts[:jre_vendor]
      query_params[:jreDistribution] = opts[:jre_distribution] if opts[:jre_distribution]
      query_params[:jreVersion] = opts[:jre_version] if opts[:jre_version]
      query_params[:installationPath] = opts[:installation_path] if opts[:installation_path]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:fields] = OCI::ApiClient.build_collection_params(opts[:fields], :multi) if opts[:fields] && !opts[:fields].empty?
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:osFamily] = OCI::ApiClient.build_collection_params(opts[:os_family], :multi) if opts[:os_family] && !opts[:os_family].empty?
      query_params[:displayNameContains] = opts[:display_name_contains] if opts[:display_name_contains]
      query_params[:libraryKey] = opts[:library_key] if opts[:library_key]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_application_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::ApplicationUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Summarize installation usage of an application deployed on Java servers in a fleet filtered by query parameters. In contrast to SummarizeDeployedApplicationUsage, which provides only information aggregated by the deployment information, this operation provides installation details and allows for better focusing of actions.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :server_key The server key.
    #
    # @option opts [String] :server_instance_key The Java Server instance key.
    #
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the managed instance.
    # @option opts [String] :application_installation_key The deployed application installation key.
    #
    # @option opts [String] :application_key The deployed application key.
    #
    # @option opts [String] :application_name_contains Filter the list with deployed application name contains the given value.
    #
    # @option opts [String] :application_name The deployed application name.
    #
    # @option opts [String] :application_source_path_contains Filter the list with application source path contains the given value.
    # @option opts [String] :library_key The library key.
    #
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort the deployed application installations. Only one sort order can be provided.
    #   If no value is specified _timeLastSeen_ is default.
    #
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::DeployedApplicationInstallationUsageSummaryCollection DeployedApplicationInstallationUsageSummaryCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_deployed_application_installation_usage.rb.html) to see an example of how to use summarize_deployed_application_installation_usage API.
    def summarize_deployed_application_installation_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_deployed_application_installation_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_deployed_application_installation_usage." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::DEPLOYED_APPLICATION_INSTALLATION_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::DEPLOYED_APPLICATION_INSTALLATION_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeDeployedApplicationInstallationUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:serverKey] = opts[:server_key] if opts[:server_key]
      query_params[:serverInstanceKey] = opts[:server_instance_key] if opts[:server_instance_key]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:applicationInstallationKey] = opts[:application_installation_key] if opts[:application_installation_key]
      query_params[:applicationKey] = opts[:application_key] if opts[:application_key]
      query_params[:applicationNameContains] = opts[:application_name_contains] if opts[:application_name_contains]
      query_params[:applicationName] = opts[:application_name] if opts[:application_name]
      query_params[:applicationSourcePathContains] = opts[:application_source_path_contains] if opts[:application_source_path_contains]
      query_params[:libraryKey] = opts[:library_key] if opts[:library_key]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_deployed_application_installation_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::DeployedApplicationInstallationUsageSummaryCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List of deployed applications in a Fleet filtered by query parameters.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :server_key The server key.
    #
    # @option opts [String] :server_instance_key The Java Server instance key.
    #
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the managed instance.
    # @option opts [String] :library_key The library key.
    #
    # @option opts [String] :application_key The deployed application key.
    #
    # @option opts [String] :application_name_contains Filter the list with deployed application name contains the given value.
    #
    # @option opts [String] :application_name The deployed application name.
    #
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort the deployed applications. Only one sort order can be provided.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::DeployedApplicationUsageCollection DeployedApplicationUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_deployed_application_usage.rb.html) to see an example of how to use summarize_deployed_application_usage API.
    def summarize_deployed_application_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_deployed_application_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_deployed_application_usage." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::DEPLOYED_APPLICATION_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::DEPLOYED_APPLICATION_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeDeployedApplicationUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:serverKey] = opts[:server_key] if opts[:server_key]
      query_params[:serverInstanceKey] = opts[:server_instance_key] if opts[:server_instance_key]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:libraryKey] = opts[:library_key] if opts[:library_key]
      query_params[:applicationKey] = opts[:application_key] if opts[:application_key]
      query_params[:applicationNameContains] = opts[:application_name_contains] if opts[:application_name_contains]
      query_params[:applicationName] = opts[:application_name] if opts[:application_name]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_deployed_application_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::DeployedApplicationUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a high level summary of FleetErrors.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [BOOLEAN] :compartment_id_in_subtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    #    (default to false)
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::FleetErrorAggregationCollection FleetErrorAggregationCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_fleet_errors.rb.html) to see an example of how to use summarize_fleet_errors API.
    def summarize_fleet_errors(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_fleet_errors.' if logger


      path = '/fleetErrorAnalytics'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:compartmentIdInSubtree] = opts[:compartment_id_in_subtree] if !opts[:compartment_id_in_subtree].nil?
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_fleet_errors') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::FleetErrorAggregationCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List Java installation usage in a Fleet filtered by query parameters.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :jre_vendor The vendor of the related Java Runtime.
    # @option opts [String] :jre_distribution The distribution of the related Java Runtime.
    # @option opts [String] :jre_version The version of the related Java Runtime.
    # @option opts [String] :installation_path The file system path of the installation.
    # @option opts [String] :application_id The Fleet-unique identifier of the related application.
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [Array<String>] :fields Additional fields to include into the returned model on top of the required ones.
    #   This parameter can also include 'approximateApplicationCount' and 'approximateManagedInstanceCount'.
    #   For example 'approximateApplicationCount,approximateManagedInstanceCount'.
    #    (default to [])
    #   Allowed values are: approximateApplicationCount, approximateManagedInstanceCount
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort installation views. Only one sort order may be provided.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, and _jreVersion_, _approximateApplicationCount_
    #   and _approximateManagedInstanceCount_  is **descending**.
    #   Default order for _jreDistribution_ and _jreVendor_ is **ascending**. If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [Array<String>] :os_family The operating system type.
    #   Allowed values are: LINUX, WINDOWS, MACOS, UNKNOWN
    # @option opts [String] :path_contains Filter the list with path contains the given value.
    #
    # @return [Response] A Response object with data of type {OCI::Jms::Models::InstallationUsageCollection InstallationUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_installation_usage.rb.html) to see an example of how to use summarize_installation_usage API.
    def summarize_installation_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_installation_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_installation_usage." if fleet_id.nil?


      fields_allowable_values = %w[approximateApplicationCount approximateManagedInstanceCount]
      if opts[:fields] && !opts[:fields].empty?
        opts[:fields].each do |val_to_check|
          unless fields_allowable_values.include?(val_to_check)
            raise 'Invalid value for "fields", must be one of approximateApplicationCount, approximateManagedInstanceCount.'
          end
        end
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::INSTALLATION_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::INSTALLATION_SORT_BY_ENUM.'
      end


      os_family_allowable_values = %w[LINUX WINDOWS MACOS UNKNOWN]
      if opts[:os_family] && !opts[:os_family].empty?
        opts[:os_family].each do |val_to_check|
          unless os_family_allowable_values.include?(val_to_check)
            raise 'Invalid value for "os_family", must be one of LINUX, WINDOWS, MACOS, UNKNOWN.'
          end
        end
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeInstallationUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:jreVendor] = opts[:jre_vendor] if opts[:jre_vendor]
      query_params[:jreDistribution] = opts[:jre_distribution] if opts[:jre_distribution]
      query_params[:jreVersion] = opts[:jre_version] if opts[:jre_version]
      query_params[:installationPath] = opts[:installation_path] if opts[:installation_path]
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:fields] = OCI::ApiClient.build_collection_params(opts[:fields], :multi) if opts[:fields] && !opts[:fields].empty?
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:osFamily] = OCI::ApiClient.build_collection_params(opts[:os_family], :multi) if opts[:os_family] && !opts[:os_family].empty?
      query_params[:pathContains] = opts[:path_contains] if opts[:path_contains]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_installation_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::InstallationUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List Java Server instances in a fleet filtered by query parameters.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :server_key The server key.
    #
    # @option opts [String] :server_instance_key The Java Server instance key.
    #
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the managed instance.
    # @option opts [String] :application_key The deployed application key.
    #
    # @option opts [String] :library_key The library key.
    #
    # @option opts [String] :server_instance_name_contains Filter the list with the Java Server instance name contains the given value.
    #
    # @option opts [String] :server_instance_name The Java Server instance name.
    #
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort the Java Server instances. Only one sort order can be provided.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaServerInstanceUsageCollection JavaServerInstanceUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_java_server_instance_usage.rb.html) to see an example of how to use summarize_java_server_instance_usage API.
    def summarize_java_server_instance_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_java_server_instance_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_java_server_instance_usage." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JAVA_SERVER_INSTANCE_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JAVA_SERVER_INSTANCE_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeJavaServerInstanceUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:serverKey] = opts[:server_key] if opts[:server_key]
      query_params[:serverInstanceKey] = opts[:server_instance_key] if opts[:server_instance_key]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:applicationKey] = opts[:application_key] if opts[:application_key]
      query_params[:libraryKey] = opts[:library_key] if opts[:library_key]
      query_params[:serverInstanceNameContains] = opts[:server_instance_name_contains] if opts[:server_instance_name_contains]
      query_params[:serverInstanceName] = opts[:server_instance_name] if opts[:server_instance_name]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_java_server_instance_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaServerInstanceUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List of Java servers in a Fleet filtered by query parameters.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :server_key The server key.
    #
    # @option opts [String] :server_name_contains Filter the list with server name contains the given value.
    #
    # @option opts [String] :server_name The server name.
    #
    # @option opts [String] :server_version The server version.
    #
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort a Java Server. Only one sort order can be provided.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JavaServerUsageCollection JavaServerUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_java_server_usage.rb.html) to see an example of how to use summarize_java_server_usage API.
    def summarize_java_server_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_java_server_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_java_server_usage." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JAVA_SERVER_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JAVA_SERVER_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeJavaServerUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:serverKey] = opts[:server_key] if opts[:server_key]
      query_params[:serverNameContains] = opts[:server_name_contains] if opts[:server_name_contains]
      query_params[:serverName] = opts[:server_name] if opts[:server_name]
      query_params[:serverVersion] = opts[:server_version] if opts[:server_version]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_java_server_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JavaServerUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List Java Runtime usage in a specified Fleet filtered by query parameters.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :jre_id The Fleet-unique identifier of the related Java Runtime.
    # @option opts [String] :jre_vendor The vendor of the Java Runtime.
    # @option opts [String] :jre_distribution The distribution of the Java Runtime.
    # @option opts [String] :jre_version The version of the Java Runtime.
    # @option opts [String] :application_id The Fleet-unique identifier of the related application.
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the related managed instance.
    # @option opts [Array<String>] :fields Additional fields to include into the returned model on top of the required ones.
    #   This parameter can also include 'approximateApplicationCount', 'approximateInstallationCount' and 'approximateManagedInstanceCount'.
    #   For example 'approximateApplicationCount,approximateManagedInstanceCount'.
    #    (default to [])
    #   Allowed values are: approximateInstallationCount, approximateApplicationCount, approximateManagedInstanceCount
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort JRE usages. Only one sort order may be provided.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, and _version_ is **descending**.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, _version_, _approximateInstallationCount_,
    #   _approximateApplicationCount_ and _approximateManagedInstanceCount_  is **descending**.
    #   Default order for _distribution_, _vendor_, and _osName_ is **ascending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [Array<String>] :os_family The operating system type.
    #   Allowed values are: LINUX, WINDOWS, MACOS, UNKNOWN
    # @option opts [String] :jre_security_status The security status of the Java Runtime.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JreUsageCollection JreUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_jre_usage.rb.html) to see an example of how to use summarize_jre_usage API.
    def summarize_jre_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_jre_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_jre_usage." if fleet_id.nil?


      fields_allowable_values = %w[approximateInstallationCount approximateApplicationCount approximateManagedInstanceCount]
      if opts[:fields] && !opts[:fields].empty?
        opts[:fields].each do |val_to_check|
          unless fields_allowable_values.include?(val_to_check)
            raise 'Invalid value for "fields", must be one of approximateInstallationCount, approximateApplicationCount, approximateManagedInstanceCount.'
          end
        end
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::JRE_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::JRE_SORT_BY_ENUM.'
      end


      os_family_allowable_values = %w[LINUX WINDOWS MACOS UNKNOWN]
      if opts[:os_family] && !opts[:os_family].empty?
        opts[:os_family].each do |val_to_check|
          unless os_family_allowable_values.include?(val_to_check)
            raise 'Invalid value for "os_family", must be one of LINUX, WINDOWS, MACOS, UNKNOWN.'
          end
        end
      end

      if opts[:jre_security_status] && !OCI::Jms::Models::JRE_SECURITY_STATUS_ENUM.include?(opts[:jre_security_status])
        raise 'Invalid value for "jre_security_status", must be one of the values in OCI::Jms::Models::JRE_SECURITY_STATUS_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeJreUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:jreId] = opts[:jre_id] if opts[:jre_id]
      query_params[:jreVendor] = opts[:jre_vendor] if opts[:jre_vendor]
      query_params[:jreDistribution] = opts[:jre_distribution] if opts[:jre_distribution]
      query_params[:jreVersion] = opts[:jre_version] if opts[:jre_version]
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:fields] = OCI::ApiClient.build_collection_params(opts[:fields], :multi) if opts[:fields] && !opts[:fields].empty?
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:osFamily] = OCI::ApiClient.build_collection_params(opts[:os_family], :multi) if opts[:os_family] && !opts[:os_family].empty?
      query_params[:jreSecurityStatus] = opts[:jre_security_status] if opts[:jre_security_status]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_jre_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JreUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List libraries in a fleet filtered by query parameters.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :server_instance_key The Java Server instance key.
    #
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the managed instance.
    # @option opts [String] :application_key The deployed application key.
    #
    # @option opts [String] :library_key The library key.
    #
    # @option opts [String] :library_name_contains Filter the list with library name contains the given value.
    #
    # @option opts [String] :library_name The library name.
    #
    # @option opts [Integer] :cvss_score_greater_than Total Common Vulnerability Scoring System (CVSS) Score reported by the analysis.
    # @option opts [Integer] :cvss_score_less_than Total Common Vulnerability Scoring System (CVSS) Score reported by the analysis.
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort libraries.  Only one sort order may be provided.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::LibraryUsageCollection LibraryUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_library_usage.rb.html) to see an example of how to use summarize_library_usage API.
    def summarize_library_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_library_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_library_usage." if fleet_id.nil?

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::LIBRARY_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::LIBRARY_SORT_BY_ENUM.'
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeLibraryUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:serverInstanceKey] = opts[:server_instance_key] if opts[:server_instance_key]
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:applicationKey] = opts[:application_key] if opts[:application_key]
      query_params[:libraryKey] = opts[:library_key] if opts[:library_key]
      query_params[:libraryNameContains] = opts[:library_name_contains] if opts[:library_name_contains]
      query_params[:libraryName] = opts[:library_name] if opts[:library_name]
      query_params[:cvssScoreGreaterThan] = opts[:cvss_score_greater_than] if opts[:cvss_score_greater_than]
      query_params[:cvssScoreLessThan] = opts[:cvss_score_less_than] if opts[:cvss_score_less_than]
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_library_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::LibraryUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # List managed instance usage in a Fleet filtered by query parameters.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :managed_instance_id The Fleet-unique identifier of the managed instance.
    # @option opts [String] :managed_instance_type The type of the managed instance.
    # @option opts [String] :jre_vendor The vendor of the related Java Runtime.
    # @option opts [String] :jre_distribution The distribution of the related Java Runtime.
    # @option opts [String] :jre_version The version of the related Java Runtime.
    # @option opts [String] :installation_path The file system path of the Java Runtime installation.
    # @option opts [String] :application_id The Fleet-unique identifier of the related application.
    # @option opts [Array<String>] :fields Additional fields to include into the returned model on top of the required ones.
    #   This parameter can also include 'approximateJreCount', 'approximateInstallationCount' and 'approximateApplicationCount'.
    #   For example 'approximateJreCount,approximateInstallationCount'.
    #    (default to [])
    #   Allowed values are: approximateJreCount, approximateInstallationCount, approximateApplicationCount
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :sort_order The sort order, either 'asc' or 'desc'. (default to ASC)
    # @option opts [String] :sort_by The field to sort managed instance views. Only one sort order may be provided.
    #   Default order for _timeFirstSeen_, _timeLastSeen_, approximateJreCount_, _approximateInstallationCount_
    #   and _approximateApplicationCount_  is **descending**.
    #   Default order for _osName_ is **ascending**.
    #   If no value is specified _timeLastSeen_ is default.
    #    (default to timeLastSeen)
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [Array<String>] :os_family The operating system type.
    #   Allowed values are: LINUX, WINDOWS, MACOS, UNKNOWN
    # @option opts [String] :hostname_contains Filter the list with hostname contains the given value.
    #
    # @option opts [String] :library_key The library key.
    #
    # @return [Response] A Response object with data of type {OCI::Jms::Models::ManagedInstanceUsageCollection ManagedInstanceUsageCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_managed_instance_usage.rb.html) to see an example of how to use summarize_managed_instance_usage API.
    def summarize_managed_instance_usage(fleet_id, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_managed_instance_usage.' if logger

      raise "Missing the required parameter 'fleet_id' when calling summarize_managed_instance_usage." if fleet_id.nil?

      if opts[:managed_instance_type] && !OCI::Jms::Models::MANAGED_INSTANCE_TYPE_ENUM.include?(opts[:managed_instance_type])
        raise 'Invalid value for "managed_instance_type", must be one of the values in OCI::Jms::Models::MANAGED_INSTANCE_TYPE_ENUM.'
      end


      fields_allowable_values = %w[approximateJreCount approximateInstallationCount approximateApplicationCount]
      if opts[:fields] && !opts[:fields].empty?
        opts[:fields].each do |val_to_check|
          unless fields_allowable_values.include?(val_to_check)
            raise 'Invalid value for "fields", must be one of approximateJreCount, approximateInstallationCount, approximateApplicationCount.'
          end
        end
      end

      if opts[:sort_order] && !OCI::Jms::Models::SORT_ORDER_ENUM.include?(opts[:sort_order])
        raise 'Invalid value for "sort_order", must be one of the values in OCI::Jms::Models::SORT_ORDER_ENUM.'
      end

      if opts[:sort_by] && !OCI::Jms::Models::MANAGED_INSTANCE_SORT_BY_ENUM.include?(opts[:sort_by])
        raise 'Invalid value for "sort_by", must be one of the values in OCI::Jms::Models::MANAGED_INSTANCE_SORT_BY_ENUM.'
      end


      os_family_allowable_values = %w[LINUX WINDOWS MACOS UNKNOWN]
      if opts[:os_family] && !opts[:os_family].empty?
        opts[:os_family].each do |val_to_check|
          unless os_family_allowable_values.include?(val_to_check)
            raise 'Invalid value for "os_family", must be one of LINUX, WINDOWS, MACOS, UNKNOWN.'
          end
        end
      end
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/actions/summarizeManagedInstanceUsage'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:managedInstanceId] = opts[:managed_instance_id] if opts[:managed_instance_id]
      query_params[:managedInstanceType] = opts[:managed_instance_type] if opts[:managed_instance_type]
      query_params[:jreVendor] = opts[:jre_vendor] if opts[:jre_vendor]
      query_params[:jreDistribution] = opts[:jre_distribution] if opts[:jre_distribution]
      query_params[:jreVersion] = opts[:jre_version] if opts[:jre_version]
      query_params[:installationPath] = opts[:installation_path] if opts[:installation_path]
      query_params[:applicationId] = opts[:application_id] if opts[:application_id]
      query_params[:fields] = OCI::ApiClient.build_collection_params(opts[:fields], :multi) if opts[:fields] && !opts[:fields].empty?
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]
      query_params[:sortOrder] = opts[:sort_order] if opts[:sort_order]
      query_params[:sortBy] = opts[:sort_by] if opts[:sort_by]
      query_params[:osFamily] = OCI::ApiClient.build_collection_params(opts[:os_family], :multi) if opts[:os_family] && !opts[:os_family].empty?
      query_params[:hostnameContains] = opts[:hostname_contains] if opts[:hostname_contains]
      query_params[:libraryKey] = opts[:library_key] if opts[:library_key]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_managed_instance_usage') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::ManagedInstanceUsageCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Returns a high level summary of PluginErrors.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [BOOLEAN] :compartment_id_in_subtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    #    (default to false)
    # @option opts [Integer] :limit The maximum number of items to return. (default to 10)
    # @option opts [String] :page The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous list call.
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::PluginErrorAggregationCollection PluginErrorAggregationCollection}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_plugin_errors.rb.html) to see an example of how to use summarize_plugin_errors API.
    def summarize_plugin_errors(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_plugin_errors.' if logger


      path = '/pluginErrorAnalytics'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:compartmentIdInSubtree] = opts[:compartment_id_in_subtree] if !opts[:compartment_id_in_subtree].nil?
      query_params[:limit] = opts[:limit] if opts[:limit]
      query_params[:page] = opts[:page] if opts[:page]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_plugin_errors') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::PluginErrorAggregationCollection'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Retrieve the inventory of JMS resources in the specified compartment: a list of the number of _active_ fleets, managed instances, Java Runtimes, Java installations, and applications.
    #
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :compartment_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    #
    # @option opts [BOOLEAN] :compartment_id_in_subtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    #    (default to false)
    # @option opts [DateTime] :time_start The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [DateTime] :time_end The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::ResourceInventory ResourceInventory}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/summarize_resource_inventory.rb.html) to see an example of how to use summarize_resource_inventory API.
    def summarize_resource_inventory(opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#summarize_resource_inventory.' if logger


      path = '/summarizeResourceInventory'
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}
      query_params[:compartmentId] = opts[:compartment_id] if opts[:compartment_id]
      query_params[:compartmentIdInSubtree] = opts[:compartment_id_in_subtree] if !opts[:compartment_id_in_subtree].nil?
      query_params[:timeStart] = opts[:time_start] if opts[:time_start]
      query_params[:timeEnd] = opts[:time_end] if opts[:time_end]

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = nil

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#summarize_resource_inventory') do
        @api_client.call_api(
          :GET,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::ResourceInventory'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Request to perform validation of the DRS file and update the existing file in the Object Storage.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::UpdateDrsFileDetails] update_drs_file_details Detail information to update DRS
    # @param [String] drs_file_key The unique identifier of the DRS File in Object Storage.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/update_drs_file.rb.html) to see an example of how to use update_drs_file API.
    def update_drs_file(fleet_id, update_drs_file_details, drs_file_key, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#update_drs_file.' if logger

      raise "Missing the required parameter 'fleet_id' when calling update_drs_file." if fleet_id.nil?
      raise "Missing the required parameter 'update_drs_file_details' when calling update_drs_file." if update_drs_file_details.nil?
      raise "Missing the required parameter 'drs_file_key' when calling update_drs_file." if drs_file_key.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)
      raise "Parameter value for 'drs_file_key' must not be blank" if OCI::Internal::Util.blank_string?(drs_file_key)

      path = '/fleets/{fleetId}/drsFiles/{drsFileKey}'.sub('{fleetId}', fleet_id.to_s).sub('{drsFileKey}', drs_file_key.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(update_drs_file_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#update_drs_file') do
        @api_client.call_api(
          :PUT,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Updates existing export setting for the specified fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::UpdateExportSettingDetails] update_export_setting_details The new details for the export setting.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::ExportSetting ExportSetting}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/update_export_setting.rb.html) to see an example of how to use update_export_setting API.
    def update_export_setting(fleet_id, update_export_setting_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#update_export_setting.' if logger

      raise "Missing the required parameter 'fleet_id' when calling update_export_setting." if fleet_id.nil?
      raise "Missing the required parameter 'update_export_setting_details' when calling update_export_setting." if update_export_setting_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/exportSetting'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(update_export_setting_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#update_export_setting') do
        @api_client.call_api(
          :PUT,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::ExportSetting'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Update the Fleet specified by an identifier.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::UpdateFleetDetails] update_fleet_details The new details for the Fleet.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/update_fleet.rb.html) to see an example of how to use update_fleet API.
    def update_fleet(fleet_id, update_fleet_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#update_fleet.' if logger

      raise "Missing the required parameter 'fleet_id' when calling update_fleet." if fleet_id.nil?
      raise "Missing the required parameter 'update_fleet_details' when calling update_fleet." if update_fleet_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(update_fleet_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#update_fleet') do
        @api_client.call_api(
          :PUT,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Update advanced feature configurations for the Fleet.
    # Ensure that the namespace and bucket storage are created prior to turning on the JfrRecording or CryptoEventAnalysis feature.
    #
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::UpdateFleetAdvancedFeatureConfigurationDetails] update_fleet_advanced_feature_configuration_details Update advanced feature configurations with new fields.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :opc_retry_token A token that uniquely identifies a request so it can be retried in case of a timeout or
    #   server error without risk of executing that same action again. Retry tokens expire after 24
    #   hours, but can be invalidated before then due to conflicting operations. For example, if a resource
    #   has been deleted and purged from the system, then a retry of the original creation request
    #   might be rejected.
    #
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::FleetAdvancedFeatureConfiguration FleetAdvancedFeatureConfiguration}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/update_fleet_advanced_feature_configuration.rb.html) to see an example of how to use update_fleet_advanced_feature_configuration API.
    def update_fleet_advanced_feature_configuration(fleet_id, update_fleet_advanced_feature_configuration_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#update_fleet_advanced_feature_configuration.' if logger

      raise "Missing the required parameter 'fleet_id' when calling update_fleet_advanced_feature_configuration." if fleet_id.nil?
      raise "Missing the required parameter 'update_fleet_advanced_feature_configuration_details' when calling update_fleet_advanced_feature_configuration." if update_fleet_advanced_feature_configuration_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/advancedFeatureConfiguration'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'opc-retry-token'] = opts[:opc_retry_token] if opts[:opc_retry_token]
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf
      header_params[:'opc-retry-token'] ||= OCI::Retry.generate_opc_retry_token

      post_body = @api_client.object_to_http_body(update_fleet_advanced_feature_configuration_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#update_fleet_advanced_feature_configuration') do
        @api_client.call_api(
          :PUT,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::FleetAdvancedFeatureConfiguration'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Update the Fleet Agent Configuration for the specified Fleet.
    # @param [String] fleet_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
    # @param [OCI::Jms::Models::UpdateFleetAgentConfigurationDetails] update_fleet_agent_configuration_details The new details for the Fleet Agent Configuration.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type nil
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/update_fleet_agent_configuration.rb.html) to see an example of how to use update_fleet_agent_configuration API.
    def update_fleet_agent_configuration(fleet_id, update_fleet_agent_configuration_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#update_fleet_agent_configuration.' if logger

      raise "Missing the required parameter 'fleet_id' when calling update_fleet_agent_configuration." if fleet_id.nil?
      raise "Missing the required parameter 'update_fleet_agent_configuration_details' when calling update_fleet_agent_configuration." if update_fleet_agent_configuration_details.nil?
      raise "Parameter value for 'fleet_id' must not be blank" if OCI::Internal::Util.blank_string?(fleet_id)

      path = '/fleets/{fleetId}/agentConfiguration'.sub('{fleetId}', fleet_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(update_fleet_agent_configuration_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#update_fleet_agent_configuration') do
        @api_client.call_api(
          :PUT,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    # rubocop:disable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:disable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:disable Metrics/MethodLength, Layout/EmptyLines


    # Updates the Fleet of a JmsPlugin.
    # @param [String] jms_plugin_id The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
    # @param [OCI::Jms::Models::UpdateJmsPluginDetails] update_jms_plugin_details The new details for the JmsPlugin.
    # @param [Hash] opts the optional parameters
    # @option opts [OCI::Retry::RetryConfig] :retry_config The retry configuration to apply to this operation. If no key is provided then the service-level
    #   retry configuration defined by {#retry_config} will be used. If an explicit `nil` value is provided then the operation will not retry
    # @option opts [String] :if_match For optimistic concurrency control. In the PUT or DELETE call
    #   for a resource, set the `if-match` parameter to the value of the
    #   ETag from a previous GET or POST response for that resource.
    #   The resource will be updated or deleted only if the ETag you
    #   provide matches the resource's current ETag value.
    #
    # @option opts [String] :opc_request_id The client request ID for tracing.
    # @return [Response] A Response object with data of type {OCI::Jms::Models::JmsPlugin JmsPlugin}
    # @note Click [here](https://docs.cloud.oracle.com/en-us/iaas/tools/ruby-sdk-examples/latest/jms/update_jms_plugin.rb.html) to see an example of how to use update_jms_plugin API.
    def update_jms_plugin(jms_plugin_id, update_jms_plugin_details, opts = {})
      logger.debug 'Calling operation JavaManagementServiceClient#update_jms_plugin.' if logger

      raise "Missing the required parameter 'jms_plugin_id' when calling update_jms_plugin." if jms_plugin_id.nil?
      raise "Missing the required parameter 'update_jms_plugin_details' when calling update_jms_plugin." if update_jms_plugin_details.nil?
      raise "Parameter value for 'jms_plugin_id' must not be blank" if OCI::Internal::Util.blank_string?(jms_plugin_id)

      path = '/jmsPlugins/{jmsPluginId}'.sub('{jmsPluginId}', jms_plugin_id.to_s)
      operation_signing_strategy = :standard

      # rubocop:disable Style/NegatedIf
      # Query Params
      query_params = {}

      # Header Params
      header_params = {}
      header_params[:accept] = 'application/json'
      header_params[:'content-type'] = 'application/json'
      header_params[:'if-match'] = opts[:if_match] if opts[:if_match]
      header_params[:'opc-request-id'] = opts[:opc_request_id] if opts[:opc_request_id]
      # rubocop:enable Style/NegatedIf

      post_body = @api_client.object_to_http_body(update_jms_plugin_details)

      # rubocop:disable Metrics/BlockLength
      OCI::Retry.make_retrying_call(applicable_retry_config(opts), call_name: 'JavaManagementServiceClient#update_jms_plugin') do
        @api_client.call_api(
          :PUT,
          path,
          endpoint,
          header_params: header_params,
          query_params: query_params,
          operation_signing_strategy: operation_signing_strategy,
          body: post_body,
          return_type: 'OCI::Jms::Models::JmsPlugin'
        )
      end
      # rubocop:enable Metrics/BlockLength
    end
    # rubocop:enable Metrics/CyclomaticComplexity, Metrics/AbcSize, Metrics/PerceivedComplexity
    # rubocop:enable Style/IfUnlessModifier, Metrics/ParameterLists
    # rubocop:enable Metrics/MethodLength, Layout/EmptyLines

    private

    def applicable_retry_config(opts = {})
      return @retry_config unless opts.key?(:retry_config)

      opts[:retry_config]
    end
  end
end
# rubocop:enable Lint/UnneededCopDisableDirective, Metrics/LineLength
